{"version":3,"sources":["StartPageVKapp.js","panels/ProfileUser/UserOrderList.js","panels/ProfileUser/OrderTypeList.js","panels/ProfileUser/OrderShowDeail.js","panels/Cart/Dilivery.js","panels/Cart/DiliveryAddress.js","panels/Cart/GetOneAddress.js","panels/Cart/GetOneAddressOff.js","panels/Cart/AffiliateList.js","panels/Cart/GetOneAffiliateAddress.js","panels/preorder/index.js","panels/noPreorder/index.js","panels/Cart/NewOrderServer.js","panels/ProfileUser/UserInfo.js","panels/Persik.js","panels/Nopersik.js","panels/Profile.js","panels/catalog/ProductList.js","panels/catalog/CategoryList.js","panels/catalog/CatalogProduct.js","panels/Cart/PaymentsPage.js","panels/Cart/CartHome.js","index.js","panels/global/index.js","img/persik.png","panels/Cart/FormNewAddress.js","panels/catalog/ButtonInCart.js","panels/catalog/OneProduct.js"],"names":["require","App","props","parseQueryString","string","slice","split","map","queryParam","kvp","key","value","reduce","query","state","AudioInfo","ReloadBasket","Audio","typeOrderGetText","typeOrderGet","numberOrderShow","listOrderUser","ParamStart","products","loadingCatalog","activeStory","activePanelOrders","loadingPage","user","userSystemInfo","error","dataUser","cart","countCartProduct","dopPresets","imgListPresets","addressDefault","AffiliateDefault","checkedTypeDilivery","commentary","typePay","countPerson","SalePoints","sumCart","activeModal","formNewAddressData","formEditAddressData","listAddressGlobal","listAffiliateGlobal","priceDelivery","minSumOrder","minSumFreeDelivery","errorOrderFinal","DeliveryPriceItog","DeliveryAddressOKCity","addressOrderInfoUser","newOrderStats","StatusLoadSlide","slideHeaderArray","slideIndex","StatusNotification","CityListBind","typeOrderDate","SelectDatePreorder","SelectTimePreorder","onStoryChange","bind","axios","method","url","global","ApiKey","responseType","then","data","ListCitySelect","list","catch","err","console","log","this","getCartDB","id","setState","getUserSystemInfo","as","bs","stretched","icon","action","size","level","onClick","e","currentTarget","dataset","story","sumCartItog","CPr","price","count","document","cookie","vk_platform","headers","typeSlide","getTypeSlideGet","setSlideArray","errorInfo","listSlide","ArraySlide","status","ArraySlides","Object","keys","Bullets","AutoPlays","length","SliderVisual","datas","src","img","style","maxWidth","autoplay","slideWidth","width","height","bullets","getSlideHeaderArray","setTimeout","reloadSlideHeaderSetTime","connect","sendPromise","response","is_allowed","PushClick","textAlign","OffPushNotyfication","OnPushNotyfication","getStatusNotificate","getCityUser","setUser","a","async","fetchData","setInterval","getIntervalCart","i","dataOld","dataNew","ListProduct","setCountCartVisal","ListDopPresets","listPresetProduct","imgPresetProduct","id_user","loading","listProduct","ListOld","JSON","stringify","ListNew","ListPresetsOld","ListPresetsNew","DopPresetsData","statusBasket","StatusReloadBasketData","statusPresets","ReloadBasketDataFN","PlayInfoAudio","ReloadBasketDataDopPresets","audio","stop","play","setUserSystem","JsonBasket","basketJson","tE","counts","push","countPlus","setcountCartProduct","noAdd","cartProducts","id_Product","type_product","setcountCartProductVar","splice","setDataServer","btoa","encodeURI","setCartServer","queryParams","window","location","search","hash","modal","onClose","setModal","header","right","title","dynamicContentHeight","caption","actions","type","osname","platform","tabbar","selected","data-story","text","label","activePanel","getSuccesOrderPage","theme","userData","setTypeOrderList","left","IOS","addon","setOrderShowNumber","listOrderUserSet","idOrderDetail","OrderDatas","setCart","CartProducts","ProductsLists","sliderHeader","getSliderGalery","noShadow","ProductList","PresetsDopProductList","userInfo","setAddressDefault","setAffiliateDefault","setTypeDilivery","setComment","setStates","setDeliveryDataItogs","getDeliveryDataPriceItog","getDeliveryDataPriceItogAffiliate","showModal","hideModals","DataDeliveryInfoPay","setTypeOrderDate","comments","setOkNewOrderView","getNotificationPage","go","dataUsers","setStatusNotification","setShowUserOrderList","React","Component","UserOrderList","loadOrders","before","color","getAllGroups","OrderTypeList","getOrderUserSystem","countOrder","Pr","reduceRight","arr","last","index","coll","concat","typeNumber","iconsD","countOrders","ListOrder","ReverceList","dataOrder","keyOrder","CurrentOrder","statusY","status_order","delete_order","summaOrders","sum_order","description","date","time","id_order","getOrderType","results","getNowOrder","getOldOrder","getCancelledOrder","getOneTypeOrders","OrderShowDetail","ststusReturn","statusOld","statusReal","ststusReturns","Order","pre_order","date_pre_order","replace","m","sale_price","product_price","Price_sales","discount_amount","Discount","indicator","cost","escapeHtmlDecode","product_title","price_product","title_product","title_gift_product","dilivery","dilivery_type","Address","dilivery_adres","PriceDeli","dilivery_price","TextDel","affiliate","affiliate_info","promo_status","PromoInfo","promo_code","promo_info","point_out","point_in","StatusIcon","getStatusIconText","detailText","getStatusOrderReal","getStatusOrderText","status_order_real","payment","type_pay","getPerson","person","getInfoPointsOrder","getInfoPreorderBlock","getInfoPromokod","promo","getOrderComposition","productList","getOrderDopComposition","dopProductList","getOrderGiftComposition","giftProductList","getOrderDeliveryInfo","getComment","Comment","blueBackground","backgroundColor","Dilivery","UserCard","phone","email","CheckSMSCode","phoneValue","codeValue","resultVerificationCode","tooltip","snackbar","showBTNNewAddress","showFormNewAddress","openBase","phone_number","layout","fill","phoneVerification","VerificationCode","idUserVK","event","target","types","values_count","display","justifyContent","marginRight","background","getDataCountPerson","readOnly","marginLeft","top","placeholder","onChange","getValueInputCode","checkVerificationCode","defaultValue","getValueInputPhone","setVerificationPhone","DataDeliveryInfo","getButtonTypeOrder","typeDelivery","DataInfos","getButtonTypeDilivery","getListAddress","getListAffiliate","getPreorderBlock","getCountPersonInput","getCommentsTextarea","className","setPopout","setShowBTNNewAddress","showModals","getCommentsData","Param","getNoneCartProduct","getInfoUserAuth","getInfoUserNoneAuth","getOkListAddress","DiliveryAddress","listAddress","listAddressOff","addressOk","dataAddress","getAddressUserSystem","AddressEdit","delUpdate","id_UserVK","getFormNewAddress","ListAddressNoDelivery","listAddressGlobalOff","getAddressUsers","listAddressU","DataSetAddress","city","street","home","n","diliveryData","priceDilivery","min_sum_order","min_sum_free_dilivery","setDataDiliveryPrice","setAddressInfoUsers","keyId","setDataDeliveryPrice","setAddressEdit","AddresInfo","NumberAddress","dataAddressOff","dataAddress2","keyId2","getListAddressVisual","GetOneAddress","AddressN","closePopout","comment","popout","addressInfo","result","result_add","autoclose","deletedAddress","float","podezd","etaj","kvartira","openDefault","name","getAddressFull","defaultChecked","getAddressTitle","defaultCheckedR","GetOneAddressOff","disabled","AffiliateList","listAffiliate","addressAffiliateOk","dataAffiliate","id_City","listOffAffiliate","getAddressAffiliate","GetOneAffiliateAddress","dangerouslySetInnerHTML","__html","operating_mode","Preorder","loadBlockPreorder","listDatePreorder","onChangeS","getDateList","ListDate","getSelectTime","ListTimes","timeList","ListTime","times","false","getSelectDate","getBlockPreorder","NoPreorder","loadBlockOrder","paddingBottom","getBlocknoPreorder","NewOrderServer","statusNewOrder","DataOrderInfo","getPageOkOrderSet","UserInfo","margin","them","fetchedUser","photo_200","first_name","last_name","point","asideContent","checked","textDecoration","href","getPanelProfil","ProfileUserPage","useState","setActivePanel","useEffect","to","setActivePanels","nameCategory","productsLists","compare","b","ArrayProducts","ClickProductF","setProductModal","getButtonInCartProduct","ReverceStatus","CatalogLists","ReverceCatalog","sort","comparePrice","oneProduct","OneProduct","product","ClickProduct","GetSets","ArrayPr","names","ProductArray","GetSushi","alt","GetRoli","GetNoneCat","nameCategorys","idCategory","idCategorys","onClickProduct","CategoryList","hndlClick","aP","productModal","setActiveCategory","ActiveCategory","panelCategory","typeProduct","ButOk","id_CartPr","getCountButton","getInCarts","classNameDivCategory","OPT","Loadings","imgCategory","ClickCategory","Title","ShowCategory","id_Category","ClickBack","ProductInfo","type_info","CatalogProduct","PaymentsPage","value2","getReloadInfODeliveryPay","options","points","step","min","max","Number","setPointsDefaultsSale","String","sum","checkTypeDiliveryInfo","checkPreorderActive","DataOrder","DataAddressDelivery","getAddressDelivery","DataAddressAffiliate","AddressDelivery","idAffiliatePickup","PointsSale","DeliverySum","Comments","DopInfo","dateObj","Date","getCountsTimeBonus","getDate","getMountsDate","getMonth","getUTCFullYear","PriceInfoVisual","getSumCartItogo","getDataOrder","returnPlaceholderPreorder","checkPreorderType","checkMinSummaCart","osName","GetCartHome","ListPresets","number","typeCount","overflow","paddingRight","getButtonNavigation","typeNav","ButtonBlock","data-to","GetPresetsVisual","Products","cartProduct","idProducts","marginBottom","clear","bottom","typeProduct2","setCarts","getCartVisual","getOneStepCart","send","ReactDOM","render","getElementById","module","exports","FormNewAddress","entrance","flat","addressItems","statusChech","minValue","valPls","idCity","ListCityOrigin","listCity","ListCitys","ListOption","getCitySelect","saveNewAddress","saveEditAddress","getEditForm","getNulledForm","ButtonInCart","number_format","decimals","dec_point","separator","isFinite","prec","Math","abs","sep","dec","s","k","pow","round","toFixed","toFixedFix","Array","join","ProductCat","idTypeProduct","ArrayMod","ListMod","VisualList","mod_img","getModyficateBlock","modyficate","Product_Weight","weight","Product_WeightType","weight_type","getProductDiv"],"mappings":"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","file":"static/js/main.a1d3c92a.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport {platform, IOS, ModalRoot, ModalPage, ModalPageHeader, HeaderButton, Placeholder, Button, Gallery, Switch} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Icon56NotificationOutline from '@vkontakte/icons/dist/56/notification_outline';\r\nimport Icon56CheckCircleOutline from '@vkontakte/icons/dist/56/check_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport UserOrderList from './panels/ProfileUser/UserOrderList';\r\nimport OrderTypeList from './panels/ProfileUser/OrderTypeList';\r\nimport OrderShowDeail from './panels/ProfileUser/OrderShowDeail';\r\n\r\nimport ButtonCart from  \"./panels/catalog/ButtonInCart\";\r\n\r\n\r\nimport {Div, Epic, Tabbar, TabbarItem, Panel, PanelHeader} from '@vkontakte/vkui';\r\n//import Icon28Messages from '@vkontakte/icons/dist/28/messages';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\r\nimport Icon28User from '@vkontakte/icons/dist/28/user';\r\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport AppHome from \"./panels/Profile\";\r\nimport CatalogProduct from \"./panels/catalog/CatalogProduct\";\r\nimport './panels/catalog/product.css';\r\n\r\nimport GetCartHome from \"./panels/Cart/CartHome\";\r\n\r\nrequire('./panels/global/index.js');\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AudioInfo:{\r\n                ReloadBasket: new Audio('//sushi-time31.ru/audio/ReloadBasketInfo2.mp3')\r\n            },\r\n\r\n            typeOrderGetText:'Текущие заказы',\r\n            typeOrderGet:'now',\r\n            numberOrderShow:0,\r\n            listOrderUser:[],\r\n\r\n            ParamStart:false,\r\n            products:[],\r\n            loadingCatalog:false,\r\n            activeStory: 'catalog',\r\n            activePanelOrders:\"ListTypeOrder\",\r\n            loadingPage: true,\r\n            user:[],\r\n            userSystemInfo:{error:true,dataUser:\"\"},\r\n            cart:[],\r\n            countCartProduct:'',\r\n\r\n            dopPresets: [],\r\n            imgListPresets: false,\r\n\r\n            addressDefault:null,\r\n            AffiliateDefault:0,\r\n            checkedTypeDilivery:0,\r\n            commentary:\"\",\r\n            typePay:1,\r\n            countPerson:1,\r\n            SalePoints:0,\r\n            sumCart:0,\r\n            activeModal:null,\r\n            formNewAddressData:'',\r\n            formEditAddressData:'',\r\n\r\n            listAddressGlobal:[],\r\n            listAffiliateGlobal:[],\r\n\r\n            priceDelivery:0,\r\n            minSumOrder:300,\r\n            minSumFreeDelivery:0,\r\n\r\n            //Если сумма корзины меньше необходимой для заказа\r\n            errorOrderFinal:false,\r\n            //Если сумма корзины меньше бесплатной доставки\r\n            DeliveryPriceItog:false,\r\n\r\n            //Доставка на адрес возможна, сли false, то не возможна\r\n            DeliveryAddressOKCity:true,\r\n\r\n            //Адрес, для отображения в последнем блоке корзины\r\n            addressOrderInfoUser:'',\r\n            newOrderStats:false,\r\n\r\n            StatusLoadSlide:false,\r\n            slideHeaderArray:[],\r\n            slideIndex: 0,\r\n\r\n            StatusNotification:false,\r\n\r\n            CityListBind:[],\r\n\r\n            typeOrderDate:true,\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    getCityUser(){\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getCity&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n\r\n                }else{\r\n                    this.state.ListCitySelect = data.list;\r\n                    global.CityListBind = data.list;\r\n                   // console.log('Установили города',global.CityListBind);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения городов',err);\r\n            });\r\n    }\r\n\r\n    parseQueryString = (string) => {\r\n        return string.slice(1).split('&')\r\n            .map((queryParam) => {\r\n                let kvp = queryParam.split('=');\r\n                return {key: kvp[0], value: kvp[1]}\r\n            })\r\n            .reduce((query, kvp) => {\r\n                query[kvp.key] = kvp.value;\r\n                return query\r\n            }, {})\r\n    };\r\n\r\n\r\n    setOkNewOrderView(){\r\n        console.log('Показать окно');\r\n        if(this.state.newOrderStats) {\r\n            this.getCartDB(this.state.user.id);\r\n            this.setState({activeStory: 'newOrderInfo',\r\n                typeOrderDate:true,\r\n                SelectDatePreorder:null,\r\n                SelectTimePreorder:null\r\n            });\r\n            this.getUserSystemInfo(this.state.user.id);\r\n        }else{\r\n            console.log('Ну не совсем');\r\n        }\r\n    }\r\n\r\n    setShowUserOrderList(){\r\n        this.setState({activeStory: 'UserOrderList'});\r\n    }\r\n\r\n    setTypeOrderList(as,bs){\r\n        this.setState({\r\n            typeOrderGetText:as,\r\n            typeOrderGet:bs,\r\n            activePanelOrders: 'OrdersListUserType'\r\n        });\r\n    }\r\n\r\n\r\n    getSuccesOrderPage(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56CheckCircleOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.setState({\r\n                             typeOrderGetText:\"Текущие заказы\",\r\n                             typeOrderGet:\"now\",\r\n                             activePanelOrders: 'OrdersListUserType',\r\n                             activeStory: 'UserOrderList'\r\n                         });}}>Подробнее</Button>}\r\n\r\n            >\r\n                <h2>Ваш заказ принят</h2>\r\n                <p>Мы свяжемся с Вами в ближайшее время, для уточнения деталей.</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    getDeliveryDataPriceItog(){\r\n        if(this.state.minSumOrder < this.state.sumCart){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.minSumFreeDelivery <= this.state.sumCart){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет ',this.state.minSumFreeDelivery+' < '+this.state.sumCart);\r\n    }\r\n\r\n\r\n    getDeliveryDataPriceItogAffiliate(){\r\n        this.setState({\r\n            priceDelivery: 0,\r\n            minSumOrder: 300,\r\n            minSumFreeDelivery: 0\r\n        });\r\n\r\n        if(this.state.sumCart > 300){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.sumCart > 0){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет на самовывоз');\r\n    }\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n\r\n    setcountCartProduct(e){\r\n        if(e == 0){e = '';}\r\n        this.setState({\r\n            countCartProduct:e\r\n        });\r\n\r\n        var sumCartItog = 0;\r\n        this.state.cart.map((CPr)=>{\r\n                sumCartItog +=CPr.price*CPr.count\r\n            }\r\n        );\r\n        this.setState({sumCart:sumCartItog});\r\n\r\n        document.cookie = \"cart = \"+this.state.cart;\r\n    }\r\n\r\n    setComment(e){\r\n        this.setState({\r\n            commentary:e\r\n        });\r\n    }\r\n\r\n    setUser(e){\r\n        this.setState({user:e});\r\n    }\r\n\r\n    setUserSystem(e){\r\n        this.setState({userSystemInfo:{error:false,dataUser:e}});\r\n    }\r\n\r\n    getTypeSlideGet(){\r\n        switch(this.state.ParamStart.vk_platform){\r\n            case\"desktop_web\": return \"desktop\";break;\r\n            default: return \"mobile\";\r\n        }\r\n    }\r\n\r\n\r\n    getSlideHeaderArray(){\r\n        if(this.state.ParamStart === false){\r\n\r\n        }else {\r\n            //console.log(this.state.ParamStart);\r\n            axios('https://sushi-time31.ru/api/getSlideHeader&apiKey='+global.ApiKey,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n                    data: {\r\n                        typeSlide: this.getTypeSlideGet(),\r\n                    },\r\n                    responseType: 'text'\r\n                })\r\n                .then(({data}) => {\r\n                    if (\"error\" in data) {\r\n                        this.setSlideArray([], false);\r\n                        console.log(data.error, '|', data.errorInfo);\r\n                    } else {\r\n                        //console.log(data.listSlide);\r\n                        this.setSlideArray(data.listSlide, true);\r\n                    }\r\n                })\r\n                .catch(({err}) => {\r\n                    console.log(\"ERROR: ---Получение слайдов---  \", err);\r\n                });\r\n        }\r\n    }\r\n\r\n    setSlideArray(ArraySlide,status){\r\n        if(status === true) {\r\n            this.setState({slideHeaderArray: ArraySlide});\r\n            if (this.state.StatusLoadSlide === false) {\r\n                this.setState({StatusLoadSlide: true});\r\n            }\r\n        }else{\r\n            if (this.state.StatusLoadSlide === true) {\r\n                this.setState({StatusLoadSlide: false});\r\n            }\r\n        }\r\n    }\r\n\r\n    getSliderGalery(){\r\n        var ArraySlides = Object.keys(this.state.slideHeaderArray);\r\n        var Bullets = \"dark\";\r\n        var AutoPlays = \"7000\";\r\n        var countNumber = ArraySlides.length;\r\n        if(ArraySlides.length <= 1){Bullets = false;AutoPlays = false;}\r\n        if(this.state.StatusLoadSlide === true & ArraySlides.length > 0) {\r\n            var SliderVisual = ArraySlides.map((datas,keys) => {\r\n                //console.log(datas);\r\n                return (<img key={keys} src={this.state.slideHeaderArray[datas].img} style={{maxWidth:\"100%\"}}/>);\r\n            });\r\n\r\n            return (\r\n                <Gallery\r\n                    autoplay={AutoPlays}\r\n                    //slideIndex={this.state.slideIndex}\r\n                    //onEnd={()=>{this.setState({\"slideIndex\":0})}}\r\n                    slideWidth=\"100%\"\r\n                    style={{width:\"100%\",height: \"auto\"}}\r\n                    bullets={Bullets}\r\n                >\r\n                    {SliderVisual}\r\n                </Gallery>\r\n            );\r\n        }else{\r\n            return(\r\n                \"\"\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    reloadSlideHeaderSetTime(){\r\n        this.getSlideHeaderArray();\r\n        setTimeout(this.reloadSlideHeaderSetTime.bind(this),5000);\r\n    }\r\n\r\n\r\n\r\n\r\n    ///////Уведомления PUSH\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n            });\r\n    }\r\n\r\n    setStatusNotification(e){\r\n        this.setState({StatusNotification:e});\r\n    }\r\n\r\n\r\n    getNotificationPage(){\r\n        if(this.state.StatusNotification === true){\r\n            return(\r\n                <Placeholder stretched\r\n                             icon={<Icon56NotificationOutline />}\r\n                             action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.setState({activeStory: 'catalog'});}}>В каталог</Button>}\r\n\r\n                >\r\n                    <h2>Уведомлений нет</h2>\r\n                    <p>Как только для Вас появятся уведомления, они отобразятся здесь!</p>\r\n                </Placeholder>\r\n            );\r\n        }else{\r\n            return(\r\n                <Placeholder stretched\r\n                             icon={<Icon56NotificationOutline />}\r\n                             action={<Button size=\"l\" level=\"tertiary\"\r\n                                             onClick={()=>{this.PushClick()}}\r\n                             >Включить уведомления</Button>}\r\n                             style={{textAlign:\"center\"}}\r\n                >\r\n                    Для просмотра уведомлений, их нужно включить\r\n                </Placeholder>\r\n            );\r\n        }\r\n    }\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n            })\r\n            .catch((err)=> {\r\n                    this.setState({StatusNotification: false});\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    ///////\r\n\r\n    componentDidMount() {\r\n        this.getCityUser();\r\n        this.getStatusNotificate();\r\n\r\n        async function fetchData(setUser,getCartDB,getUserSystemInfo) {\r\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            setUser(user);\r\n            //setPopout(null);\r\n            //setModal(MODAL_CARD_MONEY_SEND);\r\n            //console.log('...','Получили данные пользователя',user.id);\r\n            getCartDB(user.id);\r\n            getUserSystemInfo(user.id);\r\n        }\r\n\r\n        axios({\r\n            method:'get',\r\n            // url:'https://sushi-time31.ru/test.json',\r\n            // url:'https://sushi-time31.ru/test2.json',\r\n            url:'https://sushi-time31.ru/api/Catalog&apiKey='+global.ApiKey+'&idCategoryKeyArray=true&idProductKeyArray=true',\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data.list);\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                products: data.list,\r\n                loadingCatalog:true\r\n            });\r\n        })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n\r\n        fetchData(this.setUser.bind(this),this.getCartDB.bind(this),this.getUserSystemInfo.bind(this));\r\n        this.reloadSlideHeaderSetTime();\r\n            setInterval(function() {this.getIntervalCart(1)}.bind(this), 3000);\r\n    }\r\n\r\n    getIntervalCart(i){\r\n       // console.log('Запустили получение корзины '+i);\r\n        i++;\r\n        this.getCartDB(this.state.user.id);\r\n       // setTimeout(function() {this.getIntervalCart(i)}.bind(this), 3000);\r\n    }\r\n\r\n    StatusReloadBasketData(dataOld,dataNew){\r\n        if(dataOld === dataNew){return false;}else{return true;}\r\n    }\r\n\r\n\r\n    ReloadBasketDataFN(ListProduct){\r\n       // console.log('Обновили корзину');\r\n        this.setState({\r\n            // products: data.list[0].ProductList\r\n            cart: ListProduct,\r\n            loadingPage: false\r\n        });\r\n        this.setCountCartVisal();\r\n    }\r\n\r\n\r\n    ReloadBasketDataDopPresets(ListDopPresets){\r\n        if(ListDopPresets !== false){\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: ListDopPresets.listPresetProduct,\r\n                imgListPresets: ListDopPresets.imgPresetProduct\r\n            });\r\n        }else{\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: [],\r\n                imgListPresets: false\r\n            });\r\n        }\r\n    }\r\n\r\n    getCartDB(id_user){\r\n        if(this.state.loading === false) {\r\n            this.setState({loading: true});\r\n        }\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getBasketVK&apiKey='+global.ApiKey+'&updateBasket=1minute&id_user_vk='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n                data.listProduct = [];\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }\r\n\r\n            if(data.listProduct === null){\r\n                data.listProduct = [];\r\n            }\r\n\r\n            var ListOld = JSON.stringify(this.state.cart);\r\n            var ListNew = JSON.stringify(data.listProduct);\r\n            var ListPresetsOld = JSON.stringify(this.state.dopPresets);\r\n            var ListPresetsNew = JSON.stringify(data.DopPresetsData);\r\n\r\n            var statusBasket = this.StatusReloadBasketData(ListOld,ListNew);\r\n            var statusPresets = this.StatusReloadBasketData(ListPresetsOld,ListPresetsNew);\r\n\r\n            if(statusBasket === true) {\r\n                this.ReloadBasketDataFN(data.listProduct);\r\n                this.PlayInfoAudio('ReloadBasket');\r\n            }\r\n\r\n            if(statusPresets === true) {\r\n                this.ReloadBasketDataDopPresets(data.DopPresetsData);\r\n            }\r\n\r\n\r\n\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n    }\r\n\r\n    PlayInfoAudio(a){\r\n            if (this.audio) {\r\n                // this.audio.pause();\r\n                this.audio.stop();\r\n            }\r\n            switch (a) {\r\n                case\"ReloadBasket\":\r\n                   // this.audio = this.state.AudioInfo.ReloadBasket;\r\n                    this.state.AudioInfo.ReloadBasket.play();\r\n                    //alert('Запуск звука');\r\n                    break;\r\n            }\r\n    }\r\n\r\n\r\n    getUserSystemInfo(id_user){\r\n        this.setState({loading: true});\r\n\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/Users&apiKey='+global.ApiKey+'&updateUserSystemInfo=one&idUserVK='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }else{\r\n                this.setUserSystem(data.list[0]);\r\n            }\r\n\r\n            this.setState({\r\n                loadingPage: false\r\n            });\r\n            //console.log(\"userSystemInfo\",this.state.userSystemInfo);\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n        //setUserSystem(e);\r\n    }\r\n\r\n\r\n    setCartServer(id_user,JsonBasket){\r\n        //console.log(JsonBasket,'___А_А_АА_А_А_А_');\r\n        axios('https://sushi-time31.ru/api/setBasketVK&apiKey='+global.ApiKey+'&id_user_vk='+id_user,\r\n            {\r\n            method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            data: {\r\n                basketJson: JsonBasket,\r\n            },\r\n            responseType:'text'\r\n        })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Отправка корзины---  \",err);\r\n            });\r\n    }\r\n\r\n    setCart(e,tE = '+'){\r\n        //console.log('Товар в корзине, вот этот ',e);\r\n        //this.setState({cart:e});\r\n        const counts = this.state.cart.length;\r\n        if(tE == '+'){\r\n            //Добавляем товар\r\n            if(counts<=0) {\r\n               // console.log('Добавляем Новый товар в корзину');\r\n                this.state.cart.push(e);\r\n                const countPlus = counts;\r\n                this.state.cart[countPlus].count = 1;\r\n                this.setcountCartProduct(1);\r\n            }else{\r\n               // console.log('В принципи верно, но цикл не тот', counts);\r\n                var noAdd = true;\r\n\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Добавляем еще такой же товар');\r\n                        this.state.cart[key].count = this.state.cart[key].count + 1;\r\n                        setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                        noAdd =false;\r\n                    }\r\n                    }\r\n                );\r\n\r\n                if(noAdd === true){\r\n                   // console.log('Добавляем новый товар, так как тагого же нет');\r\n                    this.state.cart.push(e);\r\n                    const countPlus = counts;\r\n                    this.state.cart[countPlus].count = 1;\r\n                    setcountCartProductVar++;\r\n                }\r\n\r\n            }\r\n        }else{\r\n            //Удаляем товар\r\n            if(counts<=0) {\r\n\r\n            }else{\r\n                var noAdd = true;\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Удаляем товар 1 товар с этим id и типом');\r\n                        if( this.state.cart[key].count<=1){\r\n                            // delete this.state.cart[key];\r\n                            this.state.cart.splice(key, 1);\r\n                        }else{\r\n                            this.state.cart[key].count = this.state.cart[key].count - 1;\r\n                            setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                            noAdd =false;\r\n                        }\r\n                    }\r\n                    }\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n        {setcountCartProductVar = setcountCartProductVar+CPr.count}\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n        var setDataServer = btoa(encodeURI(JSON.stringify(this.state.cart)));\r\n       // console.log('Вот это отправляем на сервер',setDataServer);\r\n        this.setCartServer(this.state.user.id,setDataServer);\r\n    }\r\n\r\n\r\n    setCountCartVisal(){\r\n       // this.getCartDB(this.state.user.id);\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n            {setcountCartProductVar = setcountCartProductVar+CPr.count;\r\n            }\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n    }\r\n\r\n    setTypeDilivery(e){\r\n        this.setState({checkedTypeDilivery:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setTypeOrderDate(e){\r\n        this.setState({typeOrderDate:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setAddressDefault(e){\r\n        if(e === 'del'){\r\n            e = 0;\r\n        }\r\n        this.setState({addressDefault:e});\r\n        //console.log('По дефолту адрес теперь ',e);\r\n        //Обновляем условия доставки на 3  шаг корзины\r\n    }\r\n\r\n    setAffiliateDefault(e){\r\n        this.state.AffiliateDefault = e;\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setModal(e){\r\n        this.setState({activeModal:e});\r\n    }\r\n\r\n    setOrderShowNumber(a){\r\n        this.setState({numberOrderShow:a,\r\n            activePanelOrders:'OrderShowDetails'});\r\n    }\r\n\r\n    listOrderUserSet(a){\r\n       // console.log(a,'Ну блин');\r\n        this.setState({listOrderUser:a});\r\n    }\r\n\r\n    render () {\r\n        const queryParams = this.parseQueryString(window.location.search);\r\n        const hashParams = this.parseQueryString(window.location.hash);\r\n\r\n        if(this.state.ParamStart === false) {\r\n            //console.log(\"State = false, но \", queryParams);\r\n        }\r\n\r\n        if(this.state.ParamStart === false) {\r\n            this.state.ParamStart = queryParams;\r\n        }\r\n\r\n        // this.setState({\"ParamStart\":this.parseQueryString(window.location.search)});\r\n        // console.log('Параметры запуска ',this.state.ParamStart,' А URL такой ',window.location.search);\r\n\r\n        const modal = (\r\n            <ModalRoot activeModal={this.state.activeModal}>\r\n                <ModalPage\r\n                    id=\"MODAL_NEWADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Добавить адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Добавление адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formNewAddressData}\r\n                </ModalPage>\r\n\r\n                <ModalPage\r\n                    id=\"MODAL_EditADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Редактировать адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Редактирование адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formEditAddressData}\r\n                </ModalPage>\r\n            </ModalRoot>\r\n        );\r\n\r\n        const osname = platform();\r\n\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'catalog'}\r\n                        data-story=\"catalog\"\r\n                        text=\"Каталог\"\r\n                    ><Icon24Note /></TabbarItem>\r\n                    <TabbarItem style={{\"display\":\"none\"}}\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'discover'}\r\n                        data-story=\"discover\"\r\n                        text=\"Поиск\"\r\n                    ><Icon28Search /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'cart'}\r\n                        data-story=\"cart\"\r\n                        label={this.state.countCartProduct}\r\n                        text=\"Корзина\"\r\n                    ><Icon28MarketOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'notifications'}\r\n                        data-story=\"notifications\"\r\n                        text=\"Уведомления\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'user'}\r\n                        data-story=\"user\"\r\n                        text=\"Профиль\"\r\n                    ><Icon28User /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"newOrderInfo\" activePanel=\"newOrders\" header={false}>\r\n                    <Panel id=\"newOrders\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {this.getSuccesOrderPage()}\r\n                    </Panel>\r\n                </View>\r\n\r\n\r\n                <View id=\"UserOrderList\" activePanel={this.state.activePanelOrders} >\r\n                    <Panel id=\"ListTypeOrder\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                        >\r\n                            Мои заказы\r\n                        </PanelHeader>\r\n                        <UserOrderList\r\n                            userData={this.state.user}\r\n                            setTypeOrderList={this.setTypeOrderList.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                    <Panel id=\"OrdersListUserType\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<HeaderButton onClick={() => this.setState({activePanelOrders: 'ListTypeOrder'})}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => this.setState({activePanelOrders: 'ListTypeOrder'})}>Назад</HeaderButton>}\r\n                        >\r\n                            {this.state.typeOrderGetText}\r\n                        </PanelHeader>\r\n                        <OrderTypeList\r\n                            userData={this.state.user}\r\n                            typeOrderGet={this.state.typeOrderGet}\r\n                            setOrderShowNumber={this.setOrderShowNumber.bind(this)}\r\n                            listOrderUserSet={this.listOrderUserSet.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                    <Panel id=\"OrderShowDetails\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<HeaderButton onClick={() => this.setState({activePanelOrders: 'OrdersListUserType'})}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => this.setState({activePanelOrders: 'OrdersListUserType'})}>Назад</HeaderButton>}\r\n                        >\r\n                            {\"Заказ №\"+ this.state.numberOrderShow}\r\n                        </PanelHeader>\r\n                        <OrderShowDeail\r\n                            idOrderDetail={this.state.numberOrderShow}\r\n                            OrderDatas={this.state.listOrderUser[this.state.numberOrderShow]}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n\r\n\r\n\r\n                <View id=\"catalog\" activePanel=\"catalog\" header={false}>\r\n                    <Panel id=\"catalog\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {\r\n                            this.state.loadingCatalog\r\n                                ?\r\n                                <CatalogProduct setCart={this.setCart.bind(this)} CartProducts={this.state.cart} ProductsLists={this.state.products} sliderHeader={this.getSliderGalery.bind(this)} queryParams={queryParams}/>\r\n                                :\r\n                                <ScreenSpinner />\r\n                        }\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"discover\" activePanel=\"discover\">\r\n                    <Panel id=\"discover\">\r\n                        <PanelHeader>Поиск товаров</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"cart\" activePanel=\"cart\" modal={modal}>\r\n                    <Panel id=\"cart\" style={{\"paddingBottom\":\"40px\"}}>\r\n                        <PanelHeader theme=\"light\"\r\n                                     noShadow={false}\r\n                        >\r\n                            Корзина\r\n                        </PanelHeader>\r\n                        <div key=\"Cart_List\" style={{\"paddingBottom\":\"40px\"}}>\r\n                            {/*this.getCartVisual(this.state.cart,this.setCart.bind(this))*/}\r\n                            <GetCartHome\r\n                                ProductList={this.state.cart}\r\n                                PresetsDopProductList={\r\n                                    {\r\n                                    \"list\": this.state.dopPresets,\r\n                                    \"img\": this.state.imgListPresets\r\n                                    }\r\n                                }\r\n\r\n                                setCart={this.setCart.bind(this)}\r\n                                userSystemInfo={this.state.userSystemInfo}\r\n                                userInfo={this.state.user}\r\n                                getUserSystemInfo={this.getUserSystemInfo.bind(this)}\r\n\r\n                                addressDefault={this.state.addressDefault}\r\n                                setAddressDefault={this.setAddressDefault.bind(this)}\r\n\r\n                                AffiliateDefault={this.state.AffiliateDefault}\r\n                                setAffiliateDefault={this.setAffiliateDefault.bind(this)}\r\n\r\n                                checkedTypeDilivery={this.state.checkedTypeDilivery}\r\n                                setTypeDilivery={this.setTypeDilivery.bind(this)}\r\n\r\n                                commentary={this.state.commentary}\r\n                                setComment={this.setComment.bind(this)}\r\n\r\n                                countPerson={this.state.countPerson}\r\n\r\n                                SalePoints={this.state.SalePoints}\r\n\r\n                                setStates={this.setState.bind(this)}\r\n                                setDeliveryDataItogs={this.getDeliveryDataPriceItog.bind(this)}\r\n                                getDeliveryDataPriceItogAffiliate={this.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                                sumCart={this.state.sumCart}\r\n\r\n                                showModal={this.setModal.bind(this)}\r\n                                hideModals={this.setModal.bind(this,null)}\r\n\r\n                                DataDeliveryInfoPay={\r\n                                    {\r\n                                        typeOrderDate:this.state.typeOrderDate,\r\n                                        setTypeOrderDate:this.setTypeOrderDate.bind(this),\r\n\r\n                                        SelectDatePreorder:this.state.SelectDatePreorder,\r\n                                        SelectTimePreorder:this.state.SelectTimePreorder,\r\n\r\n                                        priceDelivery:this.state.priceDelivery,\r\n                                        minSumOrder:this.state.minSumOrder,\r\n                                        minSumFreeDelivery:this.state.minSumFreeDelivery,\r\n\r\n                                        //Если сумма корзины меньше необходимой для заказа\r\n                                        errorOrderFinal:this.state.errorOrderFinal,\r\n                                        //Если сумма корзины меньше бесплатной доставки\r\n                                        DeliveryPriceItog:this.state.DeliveryPriceItog,\r\n\r\n                                        //Доставка на адрес возможна, сли false, то не возможна\r\n                                        DeliveryAddressOKCity:this.state.DeliveryAddressOKCity,\r\n\r\n                                        addressOrderInfoUser:this.state.addressOrderInfoUser,\r\n\r\n                                        checkedTypeDilivery:this.state.checkedTypeDilivery,\r\n                                        AffiliateDefault:this.state.AffiliateDefault,\r\n                                        addressDefault:this.state.addressDefault,\r\n\r\n                                        listAddressGlobal:this.state.listAddressGlobal,\r\n                                        listAffiliateGlobal: this.state.listAffiliateGlobal,\r\n\r\n                                        comments:this.state.commentary,\r\n                                        typePay:this.state.typePay,\r\n                                        countPerson:this.state.countPerson,\r\n                                        cart:this.state.cart\r\n\r\n                                    }\r\n                                }\r\n\r\n                                setOkNewOrderView={this.setOkNewOrderView.bind(this)}\r\n\r\n                            />\r\n\r\n                        <div style={{\"clear\":\"both\"}}></div>\r\n                        </div>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Уведомления</PanelHeader>\r\n                        {this.getNotificationPage()}\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"user\" activePanel=\"user\">\r\n                    <Panel id=\"user\">\r\n                        <PanelHeader>Профиль</PanelHeader>\r\n                        <AppHome\r\n                            id=\"home\"\r\n                            go=\"persik\"\r\n                            dataUsers={this.state.userSystemInfo}\r\n                            setStatusNotification={this.setStatusNotification.bind(this)}\r\n                            setShowUserOrderList={this.setShowUserOrderList.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell, CellButton} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24DoNotDisturb from '@vkontakte/icons/dist/24/do_not_disturb';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\n\r\n\r\nclass UserOrderList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadOrders:false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getAllGroups(){\r\n        return(\r\n            <Group>\r\n                <CellButton\r\n                before={<Icon24Recent /> }\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Текущие заказы\",\"now\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Текущие заказы</span>\r\n                </CellButton>\r\n                <CellButton\r\n                before={<Icon24DoneOutline />}\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Завершенные заказы\",\"old\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Завершенные заказы</span>\r\n                </CellButton>\r\n                <CellButton\r\n                before={<Icon24Cancel />}\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Отмененные заказы\",\"cancel\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Отмененные заказы</span>\r\n                </CellButton>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            this.state.loadOrders\r\n                ?\r\n                <ScreenSpinner />\r\n                :\r\n                this.getAllGroups()\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default UserOrderList;","import React from 'react';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\n\r\n\r\nclass OrderTypeList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listOrderUser:[],\r\n            loadOrders:true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getOrderUserSystem();\r\n    }\r\n\r\n    getOrderUserSystem(){\r\n        this.setState({loadOrders:true});\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getOrdersUserVK&apiKey='+global.ApiKey+'&idUserVK='+this.props.userData.id,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    this.setState({countOrder:0});\r\n                }else{\r\n                    //console.log('Данные по заказам пользователя',data);\r\n                    this.setState({listOrderUser:data.list});\r\n                    this.props.listOrderUserSet(data.list);\r\n                }\r\n                this.setState({loadOrders:false});\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения заказов',err);\r\n            });\r\n    }\r\n\r\n\r\n    ReverceList(Pr){\r\n        var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n            // console.log(last, index);\r\n            return (arr = arr.concat(last))\r\n        }, []);\r\n        return res;\r\n    }\r\n\r\n    getOrderType(type = 'now'){\r\n        var typeNumber = 0;\r\n        var iconsD ='';\r\n        switch(type){\r\n            case 'now': typeNumber = 0; iconsD = <Icon24Recent /> ;break;\r\n            case 'cancel': typeNumber = 3;  iconsD = <Icon24Dismiss /> ;break;\r\n            case 'old': typeNumber = 1;  iconsD = <Icon24DoneOutline /> ;break;\r\n            default:typeNumber =0;\r\n        }\r\n\r\n        //console.log(this.state.listOrderUser)\r\n\r\n        var countOrders = 0;\r\n\r\n        const ListOrder = this.ReverceList(this.state.listOrderUser).map((dataOrder,keyOrder)=>{\r\n            //console.log('Заказ '+dataOrder,'');\r\n            var CurrentOrder = this.state.listOrderUser[dataOrder];\r\n\r\n            var statusY = false;\r\n\r\n\r\n            if(typeNumber === 1){\r\n                if(CurrentOrder.status_order == typeNumber || CurrentOrder.status_order == 6){\r\n                    statusY = true;\r\n                }else{\r\n                    statusY = false;\r\n                }\r\n            }else{\r\n                if(CurrentOrder.status_order == typeNumber){\r\n                    statusY = true;\r\n                }else{\r\n                    statusY = false;\r\n                }\r\n            }\r\n\r\n\r\n            if(CurrentOrder.delete_order == '1'){\r\n                statusY = false;\r\n            }\r\n\r\n            if(statusY === true){\r\n                countOrders++;\r\n                //console.log('Заказ '+dataOrder,' Отмененн');\r\n                var summaOrders = <span>Сумма: <b>{CurrentOrder.sum_order}₽</b></span>;\r\n\r\n                return (\r\n                    <Cell key={\"Orders_\"+dataOrder}\r\n                          before={iconsD}\r\n                          description={<span>{CurrentOrder.date} <i>{CurrentOrder.time}</i> | {summaOrders}</span>}\r\n                          onClick={this.props.setOrderShowNumber.bind(this,CurrentOrder.id_order)}\r\n                    >\r\n                        <b>Заказ №{CurrentOrder.id_order}</b>\r\n                    </Cell>\r\n                );\r\n            }else{\r\n                //console.log('Заказ '+dataOrder,'');\r\n            }\r\n\r\n        });\r\n\r\n        if(countOrders <=0){\r\n            return (\r\n                <Cell key={\"Orders_None\"}\r\n                >\r\n                    Заказы отсутсвуют\r\n                </Cell>\r\n            );\r\n        }\r\n\r\n        return ListOrder;\r\n\r\n    }\r\n\r\n\r\n    getNowOrder(){\r\n        return(\r\n            <Group key=\"ListOrderNow\"\r\n                   title=\"Текущие заказы\"\r\n            >\r\n                {this.getOrderType('now')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    getOldOrder(){\r\n        return(\r\n            <Group key=\"ListOrderOld\"\r\n                   title=\"Завершенные заказы\"\r\n            >\r\n                {this.getOrderType('old')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCancelledOrder(){\r\n        return(\r\n            <Group key=\"ListOrderCancel\"\r\n                   title=\"Отмененные заказы\"\r\n            >\r\n                {this.getOrderType('cancel')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    getOneTypeOrders(){\r\n        var results = '';\r\n        switch(this.props.typeOrderGet){\r\n            case\"now\": results = this.getNowOrder();break;\r\n            case\"old\": results = this.getOldOrder();break;\r\n            case\"cancel\": results = this.getCancelledOrder();break;\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    getAllGroups(){\r\n        return(\r\n            this.getOneTypeOrders()\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(<div> {\r\n                this.state.loadOrders\r\n                    ?\r\n                    <ScreenSpinner/>\r\n                    :\r\n                    this.getAllGroups()\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderTypeList;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell, Div, Counter} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\n\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\r\nimport Icon24MoneyTransfer from '@vkontakte/icons/dist/24/money_transfer';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24User from '@vkontakte/icons/dist/24/user';\r\n\r\nclass OrderShowDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //console.log('Заказ показать этот: ',this.props.OrderDatas);\r\n    }\r\n\r\n    getStatusOrderText(a){\r\n        var ststusReturn = \"Выполнен\";\r\n\r\n        switch(a){\r\n            case\"0\": ststusReturn = \"Принят\"; break;\r\n            case\"1\": ststusReturn = \"Выполнен\"; break;\r\n            case\"3\": ststusReturn = \"Отменен\"; break;\r\n            case\"6\": ststusReturn = \"Принят\"; break;\r\n        }\r\n        return ststusReturn;\r\n    }\r\n\r\n    getStatusOrderReal(statusOld,statusReal){\r\n        if(statusReal === null){\r\n           // console.log('Нет данных');\r\n            return statusOld;\r\n        }else{\r\n            return statusReal.status;\r\n        }\r\n    }\r\n\r\n    getStatusIconText(a){\r\n        var iconsD = '';\r\n\r\n        var ststusReturns = <Icon24Error />;\r\n\r\n        switch(a){\r\n            case\"0\": iconsD = <Icon24Recent /> ;break;\r\n            case\"1\": iconsD = <Icon24DoneOutline /> ;break;\r\n            case\"3\": iconsD = <Icon24Dismiss /> ;break;\r\n            case\"6\": iconsD = <Icon24Recent /> ;break;\r\n        }\r\n        return ststusReturns;\r\n    }\r\n\r\n\r\n    getInfoPreorderBlock(Order){\r\n        if(Order.pre_order.status === 'none'){\r\n            return \"\";\r\n        }else{\r\n            return (\r\n                <Group title=\"Совершен по предзаказу на дату\">\r\n                    <Cell\r\n                        before={<Icon24Recent />}\r\n                    >\r\n                        {Order.pre_order.date_pre_order}\r\n                    </Cell>\r\n                </Group>\r\n            );\r\n        }\r\n    }\r\n\r\n    escapeHtml(text,type) {\r\n        switch(type){\r\n            case\"decode\":\r\n                var map = {\r\n                    '&amp;': '&',\r\n                    '&lt;': '<',\r\n                    '&gt;': '>',\r\n                    '&quot;': '\"',\r\n                    \"&#039;\": \"'\"\r\n                };\r\n                break;\r\n            case\"encode\":\r\n                var map = {\r\n                    '&': '&amp;',\r\n                    '<': '&lt;',\r\n                    '>': '&gt;',\r\n                    '\"': '&quot;',\r\n                    \"'\": '&#039;'\r\n                };\r\n                break;\r\n        }\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n    escapeHtmlDecode(text) {\r\n        return text\r\n            .replace(/&amp;/g, \"&\")\r\n            .replace(/&lt;/g, \"<\")\r\n            .replace(/&gt;/g, \">\")\r\n            .replace(/&quot;/g, \"\\\"\")\r\n            .replace(/&#039;/g, \"'\");\r\n    }\r\n\r\n\r\n    getOrderComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (<Group title=\"Состав заказа\">\r\n                <Div>Данные отсутствуют</Div></Group>);\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            if(data.sale_price != data.product_price){\r\n                var Price_sales = <span><s>{data.product_price} ₽</s> <b>{data.sale_price} ₽</b> </span>;\r\n            }else{\r\n                var Price_sales = <span><b>{data.sale_price} ₽</b> </span>;\r\n            }\r\n\r\n            if(data.discount_amount != '0'){\r\n                var Discount = <b>Скидка: {data.discount_amount} ₽</b>\r\n            }else{\r\n                var Discount = '';\r\n            }\r\n\r\n            return (\r\n                <Cell key={\"Product_cell_\"+key}\r\n                    description={<span key={\"prices_product_\"+key}>{Price_sales} - {data.count} шт. <i>{Discount}</i></span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"product_title_\"+key}>{this.escapeHtmlDecode(data.product_title)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n        return (<Group title=\"Состав заказа\">\r\n            {ListProduct}</Group>);\r\n    }\r\n\r\n\r\n    getOrderDopComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            var Price_sales = <span><b>{data.price_product} ₽</b> </span>;\r\n\r\n\r\n            return (\r\n                <Cell key={\"Dop_Product_cell_\"+key}\r\n                    description={<span key={\"prices_dop_product_\"+key}>{Price_sales} - {data.count} шт.</span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"dop_product_title_\"+key}>{this.escapeHtmlDecode(data.title_product)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n\r\n        if(ListProduct == '' || ListProduct=== null){\r\n            return (\"\");\r\n        }\r\n\r\n        return (<Group title=\"Приправы и соусы\">\r\n            {ListProduct}\r\n        </Group>);\r\n    }\r\n\r\n\r\n    getOrderGiftComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            var Price_sales = <span><b>{data.price_product} ₽</b> </span>;\r\n\r\n\r\n            return (\r\n                <Cell key={\"Gift_Product_cell_\"+key}\r\n                    description={<span key={\"prices_Gift_product_\"+key}>{Price_sales} - {data.count} шт.</span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"Gift_product_title_\"+key}>{this.escapeHtmlDecode(data.title_gift_product)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n\r\n        if(ListProduct == '' || ListProduct=== null){\r\n            return (\"\");\r\n        }\r\n\r\n        return (<Group title=\"Подарки\">\r\n            {ListProduct}\r\n        </Group>);\r\n    }\r\n\r\n\r\n    getOrderDeliveryInfo(Order){\r\n\r\n        if(Order.dilivery.dilivery_type == 'Доставка'){\r\n            var Address = Order.dilivery.dilivery_adres;\r\n            var PriceDeli = Order.dilivery.dilivery_price;\r\n            var TextDel = 'Доставка';\r\n        }else{\r\n            var Address = Order.affiliate.affiliate_info;\r\n            var PriceDeli = \" 0 \";\r\n            var TextDel = 'Самовывоз';\r\n        }\r\n\r\n            return (<Group title=\"Получение заказа\">\r\n                <Cell key={\"Deliv_cell\"}\r\n                    description={Address}\r\n                    indicator={<Counter>&nbsp; {PriceDeli} ₽ &nbsp;</Counter>}\r\n                >\r\n                    {TextDel}\r\n                </Cell>\r\n                </Group>\r\n            )\r\n    }\r\n\r\n    getInfoPromokod(Order){\r\n        if(Order.promo_status == 'active'){\r\n            var PromoInfo = <Group title=\"Промокод\">\r\n                <Div><b>{Order.promo_code}</b> {Order.promo_info.title}</Div>\r\n            </Group>\r\n        }else{\r\n            var PromoInfo = '';\r\n        }\r\n\r\n        return PromoInfo;\r\n    }\r\n\r\n    getInfoPointsOrder(Order){\r\n            var Points = <div>\r\n                <Cell before={<Icon24Coins/>} >Списано Таймов: {Order.point_out}</Cell>\r\n                <Cell  before={<Icon24Coins/>} >Начислено Таймов: {Order.point_in}</Cell>\r\n            </div>;\r\n\r\n        return Points;\r\n    }\r\n\r\n    getComment(Order) {\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n            Order = 'Отсутствует';\r\n        }\r\n\r\n        return (\r\n            <Group title=\"Комментарий\">\r\n                <Div>{Order}</Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getPerson(Order) {\r\n\r\n        if(Order == '' || Order === null){\r\n            Order = '1';\r\n        }\r\n\r\n        // return (\r\n        //     <Group title=\"Кол-во приборов\">\r\n        //         <Div>{Order}</Div>\r\n        //     </Group>\r\n        // );\r\n\r\n        return (\r\n            <Cell\r\n                before={<Icon24User />}\r\n            >\r\n                Приборы: {Order}\r\n            </Cell>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        const Order = this.props.OrderDatas;\r\n        const StatusIcon = this.getStatusIconText(Order.status_order);\r\n        const detailText = <span>Детали заказа</span>;\r\n\r\n        return(\r\n            <div key=\"InfoOrderBlock\" >\r\n                <Group\r\n                    title={detailText}\r\n                >\r\n                    <Cell\r\n                        before={StatusIcon}\r\n                    >\r\n                        {this.getStatusOrderReal(this.getStatusOrderText(Order.status_order),Order.status_order_real)}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24Recent />}\r\n                    >\r\n                        {Order.date} {Order.time}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24MoneyTransfer />}\r\n                    >\r\n                        {Order.payment.type_pay}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24MoneyCircle />}\r\n                    >\r\n                        {Order.sum_order} ₽\r\n                    </Cell>\r\n                    {this.getPerson(Order.person)}\r\n                    {this.getInfoPointsOrder(Order)}\r\n                </Group>\r\n                    {this.getInfoPreorderBlock(Order)}\r\n                {this.getInfoPromokod(Order.promo)}\r\n                {this.getOrderComposition(Order.productList)}\r\n                {this.getOrderDopComposition(Order.dopProductList)}\r\n                {this.getOrderGiftComposition(Order.giftProductList)}\r\n                {this.getOrderDeliveryInfo(Order)}\r\n                {this.getComment(Order.Comment)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderShowDetail;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Placeholder, Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar,Textarea, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon16Clear from '@vkontakte/icons/dist/16/clear';\r\nimport DiliveryAddress from \"./DiliveryAddress\";\r\nimport AffiliateList from \"./AffiliateList\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Preorder from \"../preorder\";\r\nimport NoPreorder from \"../noPreorder\";\r\n\r\n\r\nconst orangeBackground = {\r\n    backgroundImage: 'linear-gradient(135deg, #ffb73d, #ffa000)'\r\n};\r\n\r\nconst blueBackground = {\r\n    backgroundColor: '#ffffff'\r\n};\r\n\r\nclass Dilivery extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            UserCard:{phone:\"\",email:\"\"},\r\n            CheckSMSCode:false,\r\n            phoneValue:\"\",\r\n            codeValue:\"\",\r\n            resultVerificationCode:true,\r\n            tooltip: true,\r\n            snackbar: null,\r\n            showBTNNewAddress:false,\r\n            showFormNewAddress:false\r\n        };\r\n\r\n        this.openBase = this.openBase.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.openBase();\r\n\r\n        async function getPhoneUserVK(setState){\r\n            connect.sendPromise(\"VKWebAppGetPhoneNumber\",{\"sign\":\"T3in3QPDby8GsRNAfsEnEoYmVt7Se2dy0XUOhnCSlSw\"})\r\n                .then((data ) => {\r\n                    //console.log(data,\"Данные пользователя\");\r\n                    setState({ UserCard:{phone: data.phone_number} });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ------  \",err);\r\n                });\r\n        }\r\n\r\n        //console.log(\"Получаем телефон\");\r\n        {this.props.userSystemInfo.error === true && getPhoneUserVK(this.setState.bind(this));}\r\n    }\r\n\r\n\r\n    openBase (e = null) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Clear fill=\"#ff0000\" width={16} height={16} /></Avatar>}\r\n                >\r\n                    {e===null && <span>Проверочный код введен не верно, повторите попытку!</span>}\r\n                    {e!==null && e}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n\r\n    setVerificationPhone(){\r\n        //console.log('Отправили запрос на верификацию');\r\n        axios('https://sushi-time31.ru/api/VerificationPhone&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_SMS\"){\r\n                        //console.log('СМС отправлено, выводим поле для ввода кода');\r\n                        this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase('Номер телефона введен не верно!');\r\n                    }\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    checkVerificationCode(){\r\n        //console.log('Отправили запрос на проверку кода',this.props.userInfo.id);\r\n        axios('https://sushi-time31.ru/api/VerificationCode&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                    VerificationCode: this.state.codeValue,\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_CODE_V\"){\r\n                        //console.log('Данные сохранены, можно обновить приложение, пользователь авторизован');\r\n                        this.props.getUserSystemInfo(this.props.userInfo.id);\r\n                        //this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    getValueInputPhone(event){\r\n        this.setState({UserCard:{phone: event.target.value}});\r\n        //console.log(this.state.UserCard.phone);\r\n    }\r\n\r\n    getValueInputCode(event){\r\n        this.setState({codeValue: event.target.value});\r\n    }\r\n\r\n    getCommentsData(e){\r\n        this.props.setComment(e.target.value);\r\n    }\r\n\r\n    getDataCountPerson(types){\r\n        var values_count = this.props.countPerson;\r\n        switch(types){\r\n            case '-': values_count -= 1; break;\r\n            case '+': values_count += 1; break;\r\n            default: console.log('Нет параметра');\r\n        }\r\n\r\n        if(values_count<=0){ values_count = 1;}\r\n        if(values_count === ''){ values_count = 1;}\r\n        if(values_count >9){ values_count = 9;}\r\n\r\n        this.props.setStates({countPerson: values_count});\r\n    }\r\n\r\n    getCountPersonInput(){\r\n        return (\r\n            <Group title=\"Кол-во приборов\">\r\n                <Div style={{display: 'flex',justifyContent:'center'}}>\r\n                    <Button size=\"l\" stretched style={{marginRight: 10,maxWidth:50,background:\"#ff7300\"}} onClick={this.getDataCountPerson.bind(this,'-')}>-</Button>\r\n                    <Input type=\"number\" style={{maxWidth:80,textAlign:\"center\"}} value={this.props.countPerson} readOnly=\"readOnly\"/>\r\n                    <Button size=\"l\" stretched style={{marginLeft: 10,maxWidth:50,background:\"#ff7300\"}} onClick={this.getDataCountPerson.bind(this,'+')}>+</Button>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth(){\r\n        return(<Group>\r\n            <FormLayout>\r\n                {this.state.CheckSMSCode === true && <FormLayoutGroup top=\"Введите одноразовый код из СМС\">\r\n\r\n                    <Input type=\"number\" placeholder=\"1234\" onChange={this.getValueInputCode.bind(this)} />\r\n\r\n\r\n                    <Button level=\"commerce\" style={{\"background\":\"#ff7300\"}}\r\n                            onClick={()=> {\r\n                                //console.log(this.state.codeValue);\r\n                                this.checkVerificationCode()\r\n                                }\r\n                            }\r\n                    >Подтвердить\r\n                    </Button>\r\n                    <Button level=\"secondary\" style={{\"float\":\"right\"}} onClick={() => {this.setState({CheckSMSCode:false})}}>Выслать повторно</Button>\r\n                </FormLayoutGroup>}\r\n\r\n                {this.state.CheckSMSCode === false && <FormLayoutGroup top=\"Подтвердите номер телефона\">\r\n                    <Input type=\"number\" placeholder=\"79876543210\" defaultValue={this.state.UserCard.phone} onChange={this.getValueInputPhone.bind(this)}/>\r\n                    <Button level=\"commerce\" style={{\"background\":\"#ff7300\"}}\r\n                            onClick={\r\n                                () => {\r\n                                    this.setVerificationPhone();\r\n                                    //console.log(this.state.UserCard.phone)\r\n                                }\r\n                            }\r\n                    >\r\n                        Получить код\r\n                    </Button>\r\n                    <Button onClick={() => {this.setState({CheckSMSCode:true})}} level=\"secondary\" style={{\"float\":\"right\"}}>Уже есть код</Button>\r\n                </FormLayoutGroup>}\r\n            </FormLayout>\r\n            {this.state.snackbar}\r\n        </Group>);\r\n    }\r\n\r\n    getButtonTypeDilivery(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"0\"}}>\r\n            <Button size=\"l\" stretched style={{marginRight: 8}} level={this.props.checkedTypeDilivery === 1 ? \"secondary\" : \"commerce\"} onClick={()=>{this.props.setTypeDilivery(0)}}>Доставка</Button>\r\n            <Button size = \"l\" stretched level={this.props.checkedTypeDilivery === 0 ? \"secondary\" : \"commerce\"}  onClick={()=>{this.props.setTypeDilivery(1)}}>Самовывоз</Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getButtonTypeOrder(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"20\",\"paddingTop\":\"0\"}}>\r\n                <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"commerce\" : \"secondary\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(true);}}\r\n                >\r\n                    Ближайшее\r\n                </Button>\r\n                <Button size = \"l\" stretched\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"secondary\" : \"commerce\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(false);}}\r\n                >\r\n                    Ко времени\r\n                </Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n\r\n    getPreorderBlock(){\r\n        return(\r\n            <Group\r\n                title=\"Время получение заказа\"\r\n            >\r\n                {this.getButtonTypeOrder()}\r\n                {\r\n                    this.props.DataDeliveryInfo.typeOrderDate\r\n                        ?\r\n                        <NoPreorder\r\n                            typeDelivery={this.props.DataDeliveryInfo.checkedTypeDilivery}\r\n                        />\r\n                        :\r\n                        <Preorder\r\n                            DataInfos={this.props.DataDeliveryInfo}\r\n                            setStates={this.props.setStates.bind(this)}\r\n                            key=\"Preorders\"\r\n                        />\r\n                }\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserAuth(){\r\n        //console.log('По дефолту адрес ',this.props.addressDefault)\r\n        return(\r\n            <div>\r\n                {this.getButtonTypeDilivery()}\r\n                {this.props.checkedTypeDilivery === 0 ?\r\n                    this.getListAddress()\r\n                    :\r\n                    this.getListAffiliate()\r\n                }\r\n                {this.getPreorderBlock()}\r\n                {this.getCountPersonInput()}\r\n                {this.getCommentsTextarea()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getNoneCartProduct(){\r\n        return(\r\n            <Placeholder\r\n                icon={<Icon56ErrorOutline />}\r\n                action={false}\r\n\r\n            >\r\n                <h2>В корзине отсутствуют товары</h2>\r\n                <p>Для совершения заказа, нужно положить хотябы 1 товар в корзину!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n\r\n    getListAddress(){\r\n        //console.log(this.state.showBTNNewAddress);\r\n        return(\r\n            <Group\r\n                className=\"GroupBlockListAddress\"\r\n                title=\"Адреса доставки\"\r\n                   description={this.state.showBTNNewAddress ?\r\n                       <Button\r\n                           size=\"l\"\r\n                           level=\"secondary\"\r\n                           style={{ background: '#FF7300',color:\"#FFFFFF\" }}\r\n                           // onClick={()=>{this.setState({showFormNewAddress:true})}}\r\n                           onClick={()=>{\r\n                               this.props.showModal('MODAL_NEWADDRESS');\r\n                           }}\r\n                       >Добавить адрес</Button>\r\n                       :\r\n                       \"\"}\r\n            >\r\n                <DiliveryAddress\r\n                    userInfo={this.props.userInfo}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    setShowBTNNewAddress={this.setState.bind(this)}\r\n                    showFormNewAddress={this.state.showFormNewAddress}\r\n                    setStates={this.props.setStates.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n                    showModals={this.props.showModal.bind(this)}\r\n                    hideModals={this.props.hideModals.bind(this)}\r\n                />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getListAffiliate(){\r\n        return (\r\n            <Group title=\"Адреса самовывоза\">\r\n            <AffiliateList\r\n                userInfo={this.props.userInfo}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n                setStates={this.props.setStates.bind(this)}\r\n            />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCommentsTextarea () {\r\n        return (\r\n            <Group title=\"Комментарий к заказу\">\r\n                <Div>\r\n                <Textarea value={this.props.commentary} onChange={this.getCommentsData.bind(this)} placeholder=\"Ваш комментарий\"/>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getOkListAddress(Param){\r\n        return(\r\n            Param <=0 ? this.getNoneCartProduct() : this.getInfoUserAuth()\r\n        )\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                {this.props.userSystemInfo.error === true &&\r\n                    this.getInfoUserNoneAuth()\r\n                }\r\n\r\n                {this.props.userSystemInfo.error === false &&\r\n                    this.getOkListAddress(this.props.ProductList.length)\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Dilivery;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAddress from \"./GetOneAddress\";\r\nimport GetOneAddressOff from \"./GetOneAddressOff\";\r\nimport OneProduct from \"../catalog/OneProduct\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport FormNewAddress from './FormNewAddress';\r\n\r\nclass DiliveryAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAddress:[],\r\n            listAddressOff:[],\r\n            addressOk:false,\r\n            dataAddress:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAddressUserSystem();\r\n        this.props.setStates({formNewAddressData: <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n    }\r\n\r\n    setAddressEdit(e){\r\n        //console.log(this.state.listAddress);\r\n        this.props.setStates({formEditAddressData: <FormNewAddress AddressEdit={this.state.listAddress[e]} setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n        this.props.showModals('MODAL_EditADDRESS');\r\n    }\r\n\r\n\r\n    getAddressUserSystem(delUpdate = false){\r\n        axios('https://sushi-time31.ru/api/getAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_UserVK: this.props.userInfo.id,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                    if(data.error === 'Address not found'){\r\n                        console.log('Нужно вывести форму для создания первого адреса пользователя');\r\n                        this.getFormNewAddress();\r\n                    }else{\r\n\r\n                    }\r\n                }else{\r\n                   // console.log(data);\r\n                    this.setState({listAddress:data.listAddress});\r\n                    this.props.setStates({listAddressGlobal:data.listAddress});\r\n\r\n                    this.setState({listAddressOff:data.ListAddressNoDelivery});\r\n                    this.props.setStates({listAddressGlobalOff:data.ListAddressNoDelivery});\r\n\r\n                    if(delUpdate === true){\r\n                        this.getAddressUsers(this.state.listAddress,true);\r\n                    }else{\r\n                        this.getAddressUsers(this.state.listAddress);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n\r\n    setAddressInfoUsers(e,type=0){\r\n            if (type === 0) {\r\n                var listAddressU = Object.keys(this.state.listAddress);\r\n                if(listAddressU.length > 0) {\r\n                    // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n                    // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n                    var DataSetAddress = this.state.listAddress[listAddressU[e]];\r\n                    this.props.setStates({\r\n                        addressOrderInfoUser: 'г. ' + DataSetAddress.city + ', ул. ' + DataSetAddress.street + ', д. ' + DataSetAddress.home\r\n                    });\r\n                }\r\n            }\r\n    }\r\n\r\n    getFormNewAddress(){\r\n        this.props.setAddressDefault(null);\r\n        this.state.dataAddress = <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)}/>;\r\n        this.setState({addressOk:true});\r\n        this.props.setShowBTNNewAddress({showBTNNewAddress:false});\r\n\r\n    }\r\n\r\n    setDataDiliveryPrice(n,ee = 'Дефолт 0'){\r\n        var listAddressU = Object.keys(this.state.listAddress);\r\n        // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n        // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n        if(listAddressU.length <= 0){\r\n            console.log('Адресов нет, должны вернуть только не доступные адреса');\r\n            this.props.setAddressDefault(null);\r\n            //return this.getAddressUsers(this.state.listAddress, true);\r\n        }else {\r\n            if (listAddressU[n] in this.state.listAddress) {\r\n                //console.log('Все ок, продолжаем по адресам');\r\n            } else {\r\n               // console.log('Адреса такого нет, ставим в дефаулт');\r\n                this.props.setAddressDefault(0);\r\n               // console.log('Должны переустановить дефаултный адрес на 0, адреса есть');\r\n                return this.getAddressUsers(this.state.listAddress, true);\r\n            }\r\n        }\r\n\r\n        if(listAddressU.length <= 0){\r\n           // console.log('Адресов нет, но продолжаем');\r\n           //  console.log('Установили значения стоимости доставки ', ee);\r\n        }else {\r\n            var DataSetAddress = this.state.listAddress[listAddressU[n]].diliveryData;\r\n            this.props.setStates({\r\n                priceDelivery: DataSetAddress.priceDilivery,\r\n                minSumOrder: DataSetAddress.min_sum_order,\r\n                minSumFreeDelivery: DataSetAddress.min_sum_free_dilivery\r\n            });\r\n           // console.log('Установили значения стоимости доставки ', ee);\r\n        }\r\n\r\n    }\r\n\r\n    getAddressUsers(listAddress,delUpdate = false) {\r\n        if(this.props.addressDefault === null & Object.keys(listAddress).length > 0){\r\n          //  console.log('Устанавливаем дефаултное значение адреса на 0','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(0);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n        if(this.props.addressDefault !== null & Object.keys(listAddress).length <= 0){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0 с условием что адресов нет','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(null);\r\n            this.setDataDiliveryPrice(0);\r\n        }\r\n\r\n        if(delUpdate === true){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0');\r\n            this.props.setAddressDefault(0);\r\n            this.getAddressUsers(listAddress,false);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }else{\r\n            this.state.dataAddress = Object.keys(listAddress).map((dataAddress, keyId) =>\r\n                <GetOneAddress\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId}\r\n                    AddresInfo={listAddress[dataAddress]}\r\n                    NumberAddress={keyId}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n\r\n            this.state.dataAddressOff = Object.keys(this.state.listAddressOff).map((dataAddress2, keyId2) =>\r\n                <GetOneAddressOff\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId2}\r\n                    AddresInfo={this.state.listAddressOff[dataAddress2]}\r\n                    NumberAddress={keyId2}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n            this.setState({addressOk:true});\r\n            this.props.setShowBTNNewAddress({showBTNNewAddress:true});\r\n            this.setDataDiliveryPrice(this.props.addressDefault, 'На '+this.props.addressDefault);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n    }\r\n\r\n    getListAddressVisual(){\r\n        return(\r\n            <div>\r\n                {this.state.dataAddress}\r\n                {this.state.dataAddressOff}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (this.state.addressOk === false ? <div>Загрузка адресов доставки <ScreenSpinner/></div> : this.getListAddressVisual()\r\n            );\r\n    };\r\n}\r\n\r\nexport default DiliveryAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n            axios('https://sushi-time31.ru/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:{id:a},\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            this.props.setAddressDefault('del');\r\n                           // console.log('Обновляем адреса',data);\r\n                            this.props.getAddressUserSystem(true);\r\n                            this.props.setPopout({ popout:null});\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    openDefault (a) {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Отмена',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }, {\r\n                        title: 'Удалить',\r\n                        autoclose: true,\r\n                        action: () => this.deletedAddress(a),\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Удаление адреса</h2>\r\n                    <p>Вы уверены что хотите удалить адрес?</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n    getAddressFull(n){\r\n        return(<div>\r\n                <span style={{width:\"75%\",float:\"left\"}}>\r\n                 г. {this.props.AddresInfo.city}, ул. {this.props.AddresInfo.street}, д. {this.props.AddresInfo.home}, подъезд {this.props.AddresInfo.podezd}, этаж {this.props.AddresInfo.etaj}, кв. {this.props.AddresInfo.kvartira}\r\n                </span>\r\n                <span style={{width:\"24%\",float:\"right\"}}><Icon28EditOutline\r\n                    onClick={\r\n                        ()=>{\r\n                            // console.log('Редактируем адрес ',n);\r\n                            this.props.setAddressEdit(this.props.AddresInfo.id);\r\n                        }\r\n                    }\r\n                    style={{float:\"left\",marginRight:\"10px\"}}/> <Icon28CancelCircleOutline style={{float:\"left\"}}\r\n                                                                                           onClick={\r\n                                                                                               ()=>{\r\n                                                                                                   // console.log('Удаляем адрес ');\r\n                                                                                                   this.openDefault(this.props.AddresInfo.id);\r\n                                                                                               }\r\n                                                                                           }\r\n                /></span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} defaultChecked onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n,'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n, 'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddressOff extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n        this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n        axios('https://sushi-time31.ru/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    addressInfo:{id:a},\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.result.result_add === true){\r\n                        this.props.setAddressDefault('del');\r\n                        //console.log('Обновляем адреса',data);\r\n                        this.props.getAddressUserSystem(true);\r\n                        this.props.setPopout({ popout:null});\r\n                    }else{\r\n                        console.log('Ошибка ',data);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n            });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'У Вас в корзине лежат товары, которые на этот адрес не доставляются!'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'У Вас в корзине лежат товары, которые на этот адрес не доставляются!'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddressOff;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAffiliateAddress from \"./GetOneAffiliateAddress\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass AffiliateList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAffiliate:[],\r\n            addressAffiliateOk:false,\r\n            dataAffiliate:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios('https://sushi-time31.ru/api/getAffiliate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_City: 1,\r\n                    id_UserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo,'Самовывоз');\r\n                }else{\r\n                    //console.log(data,'Самовывоз');\r\n                    if(Object.keys(data.listOffAffiliate).length>0){\r\n                       // console.log('Есть запрещенные точки, проводим цикл');\r\n                        Object.keys(data.listOffAffiliate).map((datas,keys)=>\r\n                            {\r\n                                if(this.props.AffiliateDefault === keys){\r\n                                    //console.log('Точка самовывоза по умолчанию совпадает с запрещенной, ставим нуль ', keys);\r\n                                    this.props.setAffiliateDefault(0);\r\n                                }else{\r\n                                   // console.log('Точка по умолчанию не совпадает с запрещенной, ничего не делаем ',keys);\r\n                                }\r\n                            }\r\n                        );\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }else{\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    setAddressInfoUsers(e,type=1){\r\n        if(type===1){\r\n            var listAddressU = Object.keys(this.state.listAffiliate);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.state.listAffiliate[listAddressU[e]];\r\n            this.props.setStates({\r\n                addressOrderInfoUser: DataSetAddress.title\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    getAddressAffiliate(listAddress) {\r\n        this.props.getDeliveryDataPriceItogAffiliate();\r\n        this.setAddressInfoUsers(this.props.AffiliateDefault);\r\n        this.state.dataAffiliate = Object.keys(listAddress).map((dataAffiliate, keyId) =>\r\n            <GetOneAffiliateAddress\r\n                key={'Affiliate_'+keyId}\r\n                AddresInfo={listAddress[dataAffiliate]}\r\n                NumberAddress={keyId}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n            />\r\n        );\r\n       this.setState({addressAffiliateOk:true});\r\n        //this.state.addressOk:true;\r\n        //return ArrayPr;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            this.state.addressAffiliateOk === false ? <div><h3>Ареса самовывоза</h3> <ScreenSpinner/> <p></p></div> : this.state.dataAffiliate\r\n        );\r\n    };\r\n}\r\n\r\nexport default AffiliateList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\n\r\nclass GetOneAffiliateAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n    }\r\n\r\n    getAddressTitle(){\r\n        return(\r\n            <span>\r\n               {this.props.AddresInfo.title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    getAddressFull(){\r\n        return(\r\n            <span style={{\"color\":\"#ffae6b\"}} dangerouslySetInnerHTML={{__html: this.props.AddresInfo.operating_mode}}>\r\n\r\n            </span>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    defaultChecked onClick={() => {\r\n                        this.props.setAffiliateDefault(n);\r\n                    ;this.props.setAddressInfoUsers(n);\r\n                    }\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    onClick={() => {\r\n                        this.props.setAffiliateDefault(n)}\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.AffiliateDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAffiliateAddress;","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch, Select, FormLayout} from '@vkontakte/vkui/';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Preorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockPreorder:false,\r\n            listDatePreorder:[],\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null\r\n        }\r\n\r\n        this.onChangeS = this.onChangeS.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockPreorder:true});\r\n        this.getDateList();\r\n        this.setState({\r\n            SelectDatePreorder:this.props.DataInfos.SelectDatePreorder,\r\n            SelectTimePreorder:this.props.DataInfos.SelectTimePreorder\r\n        });\r\n        console.log(this.props.DataInfos.SelectDatePreorder);\r\n    }\r\n\r\n    getDateList(){\r\n        axios('https://sushi-time31.ru/api/getPreorderDate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    this.setState({listDatePreorder:data.list});\r\n                    console.log(data.list);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    onChangeS(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n        this.props.setStates({[name]: value});\r\n        //console.log(this.state);\r\n    }\r\n\r\n    getSelectDate(){\r\n        const ListDate = Object.keys(this.state.listDatePreorder).map((data,n)=>{\r\n            return(\r\n                <option key={data+\"preorderDates\"} value={data}>{this.state.listDatePreorder[data].title}</option>\r\n            );\r\n        });\r\n        return (\r\n            <div>\r\n            <Cell>\r\n                <Select\r\n                    top=\"Дата получения заказа\"\r\n                    key=\"datePreorder\"\r\n                    placeholder=\"Дата получения\"\r\n                    name=\"SelectDatePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectDatePreorder}\r\n            >{ListDate}</Select>\r\n            </Cell>\r\n            <Cell>\r\n                {this.getSelectTime()}\r\n            </Cell>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSelectTime(){\r\n        if(this.state.SelectDatePreorder in this.state.listDatePreorder) {\r\n            var ListTimes = this.state.listDatePreorder[this.state.SelectDatePreorder].timeList;\r\n            const ListTime = Object.keys(ListTimes).map((times, n) => {\r\n                if(ListTimes[times].false === true){\r\n                    return ('');\r\n                }else {\r\n                    return (\r\n                        <option key={times + \"preorderTimes\"}\r\n                                value={times}\r\n                        >\r\n                            {ListTimes[times].title}\r\n                        </option>\r\n                    );\r\n                }\r\n            });\r\n            return (\r\n                <Cell>\r\n                    <Select\r\n                    top=\"Время получения заказа\"\r\n                    key=\"datePreorderTime\"\r\n                    placeholder=\"Время получения\"\r\n                    name=\"SelectTimePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectTimePreorder}\r\n                >{ListTime}</Select>\r\n                </Cell>\r\n            );\r\n        }else{\r\n            return ('');\r\n        }\r\n    }\r\n\r\n    getBlockPreorder(){\r\n        return(\r\n                <Div key=\"DivPreorder\">\r\n                    {\r\n                        this.state.loadBlockPreorder ?\r\n                            this.getSelectDate()\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlockPreorder()\r\n        );\r\n    }\r\n}\r\nexport default Preorder;\r\n","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\n\r\n\r\nclass NoPreorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockOrder:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockOrder:true});\r\n    }\r\n\r\n    getBlocknoPreorder(){\r\n        return(\r\n                <Cell\r\n                    before={<Icon24Recent />}\r\n                    style={{paddingBottom:\"10px\"}}\r\n                >\r\n                    {\r\n                        this.state.loadBlockOrder ?\r\n                            <div>{this.props.typeDelivery ? \"Забрать в ближайшее время\" : \"Доставить в ближайшее время\"}</div>\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Cell>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlocknoPreorder()\r\n        );\r\n    }\r\n}\r\nexport default NoPreorder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\n\r\nclass NewOrderServer extends React.Component{\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    setDataServer(){\r\n        this.props.setStates({statusNewOrder:'Запрос прошел'});\r\n        axios('https://sushi-time31.ru/api/setNewOrder&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    idUserVK: this.props.userInfo.id,\r\n                    dataOrder:this.props.DataOrderInfo\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                   // console.log('Ответ сервера ',data);\r\n                    if(data.status == \"OK\"){\r\n                        this.props.getPageOkOrderSet({newOrderStats:true});\r\n                        this.props.setOkNewOrderView();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button size=\"xl\" onClick={()=>{this.setDataServer()}} className=\"WeightFontBold\">Завершить заказ</Button>\r\n        );\r\n    };\r\n}\r\n\r\nexport default NewOrderServer;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\n\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport {List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\n\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\n\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            StatusNotification:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getStatusNotificate();\r\n    }\r\n\r\n    getPanelProfil(){\r\n        return(\r\n            <div id={this.props.id} style={{maxWidth:'1200px',margin:'0 auto'}} them='white'>\r\n                {this.props.fetchedUser &&\r\n                    <Group title=\"Ваши данные\r\n    \">\r\n                        <Cell\r\n                            before={this.props.fetchedUser.photo_200 ? <Avatar src={this.props.fetchedUser.photo_200}/> : null}\r\n                            description={this.props.fetchedUser.city && this.props.fetchedUser.city.title ? this.props.fetchedUser.city.title : ''}\r\n                        >\r\n                            {`${this.props.fetchedUser.first_name} ${this.props.fetchedUser.last_name}`}\r\n                        </Cell>\r\n                    </Group>\r\n                }\r\n\r\n                <Group>\r\n                    <Cell\r\n                        before={<Icon24Note />}\r\n                        description=\"Список совершенных Вами онлайн заказов\"\r\n                        onClick={this.props.setShowUserOrderList.bind()}\r\n                    >\r\n                        Мои заказы\r\n                    </Cell>\r\n                </Group>\r\n\r\n\r\n                {this.props.dataUsers.dataUsers.error ?\r\n                    this.getInfoUserNoneAuth()\r\n                    :\r\n\r\n                    <Group title=\"Активность\">\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Coins />}\r\n                            >\r\n                                Бонус Таймы: {this.props.dataUsers.dataUsers.dataUser.point}\r\n                            </Cell>\r\n                        </List>\r\n                    </Group>\r\n                }\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24Notification />}\r\n                            asideContent={<Switch\r\n                                checked={this.state.StatusNotification}\r\n                                onChange={()=>{this.PushClick()}} />}\r\n                            description=\"Изменение статуса заказа, акциии...\"\r\n                        >\r\n                            PUSH - уведомления\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24CommentOutline />}\r\n                        >\r\n                            <a style={{color:\"#252622\",textDecoration:\"none\"}}\r\n                               href=\"//vk.com/im?sel=-87074888\" target=\"_blank\">\r\n                                Связаться с нами\r\n                            </a>\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth() {\r\n        return (\r\n            <Div>\r\n                Авторизуйтесь по номеру телефона, чтобы просматривать данные!\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n                this.props.setStatusNotification(datas.response.is_allowed);\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            });\r\n    }\r\n\r\n    //defaultChecked\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            })\r\n            .catch((err)=> {\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getPanelProfil()\r\n        );\r\n    }\r\n}\r\nexport default UserInfo;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport { View, Group, List, Cell } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Persik = props => (\r\n    <Panel id={props.id}>\r\n        <PanelHeader\r\n            left={<HeaderButton onClick={props.go} data-to=\"home\">\r\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n            </HeaderButton>}\r\n        >\r\n            Persik\r\n        </PanelHeader>\r\n        <Div>\r\n            <h2 size=\"x3\" level=\"1\">Это не совсем персик</h2>\r\n            <View activePanel=\"main\">\r\n                <Panel id=\"main\">\r\n                    <PanelHeader>VKUI</PanelHeader>\r\n                    <Group title=\"Items\">\r\n                        <List>\r\n                            <Cell>Hello</Cell>\r\n                            <Cell>World</Cell>\r\n                        </List>\r\n                    </Group>\r\n                </Panel>\r\n            </View>\r\n        </Div>\r\n        <img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\r\n    </Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport UserInfo from './ProfileUser/UserInfo';\r\nimport Persik from './Persik';\r\nimport NoPersik from './Nopersik';\r\n\r\nconst ProfileUserPage = (dataUsers) => {\r\n\tconst [activePanel, setActivePanel] = useState('homeUsers');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\t//const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// connect.subscribe(({ detail: { type, data }}) => {\r\n\t\t// \tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t// \t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t// \t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t// \t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t// \t}\r\n\t\t// });\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\t//setPopout(null);\r\n\t\t\t//console.log(connect);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<View activePanel={activePanel}>\r\n\t\t\t<UserInfo\r\n\t\t\t\tid='homeUsers'\r\n\t\t\t\tfetchedUser={fetchedUser}\r\n\t\t\t\tgo={go}\r\n\t\t\t\tdataUsers={dataUsers}\r\n\t\t\t\tsetActivePanels={setActivePanel.bind(this)}\r\n\t\t\t\tsetStatusNotification={dataUsers.setStatusNotification.bind(this)}\r\n\t\t\t\tsetShowUserOrderList={dataUsers.setShowUserOrderList.bind(this)}\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default ProfileUserPage;\r\n\r\n","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\n// import Icon24Back from '@vkontakte/icons/dist/24/back';\r\n// import ModalProduct from '../ModalProduct.js';\r\nimport OneProduct from \"./OneProduct\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass ProductList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activePanel: 'panel1',\r\n            nameCategory: 'none',\r\n            productsLists: null,\r\n            products:[{\"1\":{\"title\":\"ЕКАРНЫЙ БАБАЙ\"}}]\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        function ReverceCatalog(Pr){\r\n            var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n                // console.log(last, index);\r\n                return (arr = arr.concat(last))\r\n            }, []);\r\n            return res;\r\n        }\r\n\r\n\r\n        function compare(a, b) {\r\n            if (a.price < b.price) {\r\n                return -1;\r\n            }\r\n            if (a.price > b.price) {\r\n                return 1;\r\n            }\r\n            // a должно быть равным b\r\n            return 0;\r\n        }\r\n\r\n        function comparePrice(Pr){\r\n            //console.log(Pr);\r\n            return Object.keys(Pr).sort(compare)\r\n        }\r\n\r\n\r\n        function ArrayProducts(Pr,ClickProductF,setProductModal,setCart, getButtonInCartProduct,ReverceStatus = 0) {\r\n            var CatalogLists = [];\r\n            if(ReverceStatus === 0){\r\n                CatalogLists = ReverceCatalog(Pr);\r\n            }\r\n            if(ReverceStatus === 1){\r\n                CatalogLists = comparePrice(Pr);\r\n            }\r\n\r\n            if(ReverceStatus === 2){\r\n                CatalogLists = Object.keys(Pr);\r\n            }\r\n\r\n            const ArrayPr = CatalogLists.map((oneProduct, keyId) =>\r\n                <OneProduct key={'Products_'+keyId} product={Pr[oneProduct]} ClickProduct={ClickProductF.bind(this)} setCart={setCart.bind(this)} setProductModal={setProductModal.bind(this)} getButtonInCartProduct={getButtonInCartProduct.bind(this)}/>\r\n            );\r\n            return ArrayPr;\r\n        }\r\n\r\n\r\n        function ShowProductCategory(nameCategorys){\r\n            //console.log('ShowProductCategory ',nameCategorys);\r\n            if(nameCategorys.nameCategorys === 'sets'){\r\n                // console.log('d-d-d-d-',nameCategorys.productsLists[nameCategorys.idCategory]);\r\n                return (<GetSets\r\n                    key={nameCategorys.key}\r\n                    names={nameCategorys.nameCategorys}\r\n                    ProductArray={nameCategorys.productsLists}\r\n                    ClickProduct={nameCategorys.ClickProduct.bind(this)}\r\n                    setCart={nameCategorys.setCart.bind(this)}\r\n                    setProductModal={nameCategorys.setProductModal.bind(this)}\r\n                    getButtonInCartProduct={nameCategorys.getButtonInCartProduct.bind(this)}\r\n                />);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'sushi'){\r\n                return (<GetSushi names={nameCategorys.nameCategorys}/>);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'roli'){\r\n                return (<GetRoli names={nameCategorys.nameCategorys}/>);\r\n            }else{\r\n                return (<GetNoneCat names={nameCategorys.nameCategorys}/>);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        function GetSets(ArrayPr) {\r\n           //console.log('ArrayPr ',ArrayPr);\r\n            return (\r\n                <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                    {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this))}\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetSushi(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с креветкой</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши краб</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши копченый лосот</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetRoli(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с тунцом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл Филадельфия</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Филадельфия с крабом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetNoneCat(names){\r\n            return (\r\n                <Div id={names} className=\"blockCategoryFlex\">\r\n                <h1>К сожаление категория пуста!</h1>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        // function GetModalProduct(product){\r\n        //     return(\r\n        //\r\n        //     )\r\n        // }\r\n\r\n        return (\r\n            <ShowProductCategory\r\n                productsLists={this.props.productsLists}\r\n                nameCategorys={this.props.nameCategory}\r\n                idCategory={this.props.idCategorys}\r\n                ClickProduct={this.props.onClickProduct.bind(this,'Panels_Product')}\r\n                setCart={this.props.setCart.bind(this)}\r\n                setProductModal={this.props.setProductModal.bind(this)}\r\n                getButtonInCartProduct={this.props.getButtonInCartProduct.bind(this)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductList;","import React from 'react';\r\nimport {Div, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport ProductList from \"./ProductList\";\r\n\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nclass CategoryList extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            loadingPage: true,\r\n            activePanel: 'brand',\r\n            products: [],\r\n            panelCategory: '',\r\n            ActiveCategory: 0,\r\n            productModal:[{\"title\":\"Название товара\",\"description\":\"Описание товара\",\"typeproduct\":\"0\",\"price\":\"1000\"}]\r\n        };\r\n    }\r\n\r\n    hndlClick = (aP) => {\r\n        console.log('--- ', 'Нажали на кнопку '+aP);\r\n        this.setState({ activePanel: aP })\r\n    };\r\n\r\n    setProductModal = (aP) => {\r\n        console.log('--- ', 'Установили товар в модалку '+aP+' - - - -XTTT');\r\n        this.setState({ productModal: aP })\r\n    };\r\n\r\n    setActiveCategory = (aP) => {\r\n        console.log('--- ', 'Установили категорию '+aP);\r\n        this.setState({ ActiveCategory: aP })\r\n    };\r\n\r\n\r\n    getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getButtonInCartProduct(typeProduct,setCart){\r\n        //console.log(this.props.CartProducts,'---0---');\r\n        if(!!this.props.CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            this.props.CartProducts.map((data,key)=>{\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  this.getCountButton(typeProduct,this.props.CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return this.getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return this.getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true});\r\n        this.setState({products:this.props.ProductsLists,loadingPage: false});\r\n        //console.log('Передали: ',this.props.ProductsLists);\r\n            }\r\n\r\n    classNameDivCategory(){\r\n        //console.log(this.props.queryParams.vk_platform);\r\n        if(this.props.queryParams.vk_platform == \"desktop_web\"){\r\n            return \"GroupBlockCategory DivBlockDesctopCategoys\";\r\n        }else{\r\n            return \"GroupBlockCategory\";\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n\r\n        function ModalProductInfo(OPT){\r\n            if(OPT.Loadings === false){\r\n                console.log(OPT);\r\n                return(\r\n                    <div className=\"blockProduct\" style={{\"margin\":\"0\",\"textAlign\":\"left\",\"background\":\"#ffffff\"}}>\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            noShadow={false}\r\n                            left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                        >\r\n                            {escapeHtmlDecode(OPT.ProductInfo[0].title)}\r\n                        </PanelHeader>\r\n                        <Div id={'product_type_'+OPT.ProductInfo[0].type_info}>\r\n                            <div className=\"imgPrewieProduct\"><img src={OPT.ProductInfo[0].img} alt={OPT.ProductInfo[0].title}/></div>\r\n                            <div className=\"titleProduct\">{escapeHtmlDecode(OPT.ProductInfo[0].title)} <span className=\"redTextP\">{OPT.ProductInfo[0].type_info}</span></div>\r\n                            <div className=\"DescrProduct\">{escapeHtmlDecode(OPT.ProductInfo[0].description)}</div>\r\n                            <div className=\"priceProductBig\"><span className=\"priceProduct\">{OPT.ProductInfo[0].price} ₽</span>\r\n                                {OPT.getButtonInCartProduct(OPT.ProductInfo[0],OPT.setCart)}\r\n                            </div>\r\n                        </Div>\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <div>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                    >Ошибка</PanelHeader>\r\n                        <div style={{\"textAlign\":\"center\",\"padding\":\"5% 0\"}}>Ошибка, вернитесь назад</div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        function GetCategorys(OPT){\r\n            if(OPT.Loadings === false) {\r\n               // console.log(OPT,'-0-0-0-');\r\n               // console.log('Загрузилось', OPT.CategoryList);\r\n                //console.log('Товары ', OPT.CategoryList[OPT.ShowCategory].ProductList);\r\n                return (<div style={{background:\"#FFFFFF\"}}>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>Назад</HeaderButton>}\r\n                    >\r\n                        {OPT.CategoryList[OPT.ShowCategory].Title}\r\n                    </PanelHeader>\r\n                    <ProductList\r\n                        onClickProduct={OPT.ClickProduct.bind(this)}\r\n                        productsLists={OPT.CategoryList[OPT.ShowCategory].ProductList} key={OPT.CategoryList[OPT.ShowCategory].id_Category}\r\n                        idCategorys={OPT.ShowCategory}\r\n                        nameCategory=\"sets\"\r\n                        setCart={OPT.setCart.bind(this)}\r\n                        getButtonInCartProduct={OPT.getButtonInCartProduct.bind(this)}\r\n                        setProductModal={OPT.setProductModal.bind(this)}\r\n                    />\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <PanelHeader>Ошибка</PanelHeader>\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        function GetBrandPanels(OPT,Loadings){\r\n           // console.log(OPT,' - - - категории грузим',OPT.Loadings);\r\n\r\n\r\n            if(CategoryList.length === 0){\r\n                return '';\r\n            }else {\r\n                if(OPT.Loadings === false) {\r\n                    //ProductObject = Object.keys(OPT.CategoryList);\r\n                    //console.log('Преобразовали',ProductObject);\r\n                    // const ArrayBrands = Object.keys(OPT.CategoryList).map((CategoryProdcuts, key) =>\r\n                    const ArrayBrands = Object.keys(OPT.CategoryList).map((idCategorys, key) =>\r\n\r\n                        <Div\r\n                            style={{\"background\":\"linear-gradient( rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4) ), url(//sushi-time31.ru/images/API_IMG/\"+OPT.CategoryList[idCategorys].imgCategory+\")\",\"backgroundSize\":\"100%\"}}\r\n                            className=\"DivCategoryBlock\"\r\n                            key={key+'_'+idCategorys}\r\n                            onClick={\r\n                                () => {\r\n                                    OPT.ActiveCategory(idCategorys);\r\n                                    OPT.ClickCategory('Panels_38')\r\n                                }\r\n                            }\r\n                        >\r\n                            {OPT.CategoryList[idCategorys].Title}\r\n                        </Div>\r\n                    );\r\n                    return ArrayBrands;\r\n                }\r\n                else {\r\n                    return 'Loading ...';\r\n                }\r\n                // return '';\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        const osname = platform();\r\n\r\n        return (\r\n            <View activePanel={this.state.activePanel}>\r\n                <Panel id=\"brand\">\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                    >\r\n                        Категории\r\n                    </PanelHeader>\r\n                    <Group>\r\n                        <Div className=\"logoBlock\">\r\n                            <img src=\"//sushi-time31.ru/images/API_IMG/logo_susshi_time.png\"/>\r\n                            {this.props.queryParams.vk_platform == \"desktop_web\"\r\n                                ?\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a>+7 (4722) 777-498</a>\r\n                                </Div>\r\n                                :\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a href=\"tel:+74722777498\">Позвонить</a>\r\n                                </Div>\r\n                            }\r\n                        </Div>\r\n                        <div id=\"SliderHeader\">\r\n                            {this.props.sliderHeader()}\r\n                        </div>\r\n                    </Group>\r\n                        <Group\r\n                            //title=\"Выбери категорию\"\r\n                            className={this.classNameDivCategory()} >\r\n                        <GetBrandPanels key=\"BrandPanels\" CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)} ActiveCategory={this.setActiveCategory.bind(this)}/>\r\n                    </Group>\r\n                </Panel>\r\n                {/*{this.state.loadingPage ? <Panel id=\"Panels_38\" />  : <Panel id=\"Panels_38\" ><PanelHeader >Суши</PanelHeader></Panel> && <GetCategory CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)}/>}*/}\r\n                <Panel id=\"Panels_38\">\r\n                    <GetCategorys\r\n                        CategoryList={this.state.products}\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickCategory={this.hndlClick.bind(this)}\r\n                        ClickProduct={this.hndlClick.bind(this,'Panels_Product')}\r\n                        setProductModal={this.setProductModal.bind(this)}\r\n                        ShowCategory={this.state.ActiveCategory}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                    />\r\n                </Panel>\r\n                <Panel id=\"Panels_Product\">\r\n\r\n                    <ModalProductInfo\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickBack={this.hndlClick.bind(this)}\r\n                        ProductInfo={this.state.productModal}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                    />\r\n                </Panel>\r\n                {/*<Panel id=\"Panels_38\" />*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}*/}\r\n                {/*    >*/}\r\n                {/*        Cуши*/}\r\n                {/*    </PanelHeader>*/}\r\n\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sushi\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"light2\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Роллы*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"roli\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Сеты*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sets\" idCategorys=\"0\"/>*/}\r\n                {/*</Panel>*/}\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CategoryList;","import React, {useEffect} from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n//import ModalProduct from './panels/ModalProduct';\r\nimport CategoryList from './CategoryList';\r\n//import App from \"./Profile\";\r\n\r\nconst CatalogProduct = (OPT) => {\r\n    // const [activePanel, setActivePanel] = useState('home');\r\n    // const [fetchedUser, setUser] = useState(null);\r\n    // const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\r\n\r\n    useEffect(() => {\r\n        // connect.subscribe(({ detail: { type, data }}) => {\r\n        //     if (type === 'VKWebAppUpdateConfig') {\r\n        //         const schemeAttribute = document.createAttribute('scheme');\r\n        //         schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n        //         document.body.attributes.setNamedItem(schemeAttribute);\r\n        //     }\r\n        // });\r\n        async function fetchData() {\r\n            // const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            // setUser(user);\r\n            // setPopout(null);\r\n           // console.log(OPT.ProductsLists,'--- ВОТ');\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n            <CategoryList setCart={OPT.setCart.bind(this)} CartProducts={OPT.CartProducts} ProductsLists={OPT.ProductsLists} sliderHeader={OPT.sliderHeader.bind(this)} queryParams={OPT.queryParams}/>\r\n    );\r\n\r\n};\r\n\r\nexport default CatalogProduct;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport NewOrderServer from './NewOrderServer';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Info from '@vkontakte/icons/dist/24/info';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Flash from '@vkontakte/icons/dist/24/flash';\r\n\r\nclass PaymentsPage extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            SalePoints:this.props.SalePoints,\r\n            value2:0,\r\n            statusNewOrder:'11'\r\n        }\r\n\r\n        this.props.getReloadInfODeliveryPay();\r\n    }\r\n\r\n    setPointsDefaultsSale(SalePoints){\r\n        SalePoints = SalePoints*1;\r\n        this.setState({SalePoints});\r\n        this.props.setStates({SalePoints:SalePoints});\r\n    }\r\n\r\n    options () {\r\n        let options = [];\r\n        for (let i = 0; i <= this.props.userSystemInfo.dataUser.point*1; i += 1) {\r\n            options.push(<option value={`${i}`} key={`${i}`}>{i}</option>)\r\n        }\r\n        return options;\r\n    }\r\n\r\n    getCountsTimeBonus(){\r\n        var points = this.props.userSystemInfo.dataUser.point*1;\r\n        if(points >0){\r\n            return(\r\n                <div>\r\n                        <Div>Доступно таймов для списания: <b>{points}</b></Div>\r\n                    <FormLayout>\r\n                        <Slider\r\n                            step={1}\r\n                            min={0}\r\n                            max={points}\r\n                            value={Number(this.state.SalePoints)}\r\n                            onChange={(SalePoints)=> this.setPointsDefaultsSale(SalePoints)}\r\n                            top=\"Списать в оплату\"\r\n                        />\r\n                        <Select onChange={e => this.setPointsDefaultsSale(e.target.value)} value={String(this.state.SalePoints)}>\r\n                            {this.options()}\r\n                        </Select>\r\n\r\n                    <div style={{display: 'none',justifyContent:'center'}}>\r\n                        <Button size=\"l\" stretched style={{marginRight: 10}}>Выбранное кол-во</Button>\r\n                        <Button size=\"l\" stretched style={{marginLeft: 10}}>Списать все</Button>\r\n                    </div>\r\n                    </FormLayout>\r\n                </div>);\r\n        }else{\r\n            return(<Cell className=\"IconColorOrange\" before={<Icon24Coins />}> К сожалению у Вас <b>0</b> таймов</Cell>);\r\n        }\r\n    }\r\n\r\n    getSumCartItogo(){\r\n        var sum = this.props.sumCart-this.props.SalePoints;\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog) {\r\n            sum = sum + (this.props.DataDeliveryInfo.priceDelivery * 1);\r\n        }\r\n        if(sum<0){sum = 0;}\r\n        return (sum);\r\n    }\r\n\r\n\r\n    checkMinSummaCart(){\r\n        if(this.props.DataDeliveryInfo.errorOrderFinal){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={false}\r\n\r\n                >\r\n                    <h2>Сумма минимального заказа {this.props.DataDeliveryInfo.minSumOrder} рублей</h2>\r\n                    <p>Мы не можем принять Ваш заказ, так как сумма Вашей покупки, меньше необходимой</p>\r\n                </Placeholder>\r\n            );\r\n        }else{\r\n            return(\r\n                this.checkTypeDiliveryInfo()\r\n            );\r\n        }\r\n    }\r\n\r\n    PriceInfoVisual(){\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog){\r\n            return(\r\n                <Cell before={<Icon24Info />}> Стоимость доставки: <b>{this.props.DataDeliveryInfo.priceDelivery} ₽</b></Cell>\r\n            );\r\n        }else{\r\n            return('');\r\n        }\r\n    }\r\n\r\n    getAddressDelivery(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAddressGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAddressGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAddressGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getAddressAffiliate(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAffiliateGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getDataOrder(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === true) {\r\n            var checkPreorderActive = false;\r\n        }else{\r\n            var checkPreorderActive = true;\r\n        }\r\n        var DataOrder = {};\r\n\r\n        var DataAddressDelivery = this.getAddressDelivery(this.props.DataDeliveryInfo.addressDefault);\r\n        var DataAddressAffiliate = this.getAddressAffiliate(this.props.DataDeliveryInfo.AffiliateDefault);\r\n\r\n        DataOrder.idUserVK = this.props.userInfo.id;\r\n        DataOrder.typeDelivery = this.props.DataDeliveryInfo.checkedTypeDilivery;\r\n        DataOrder.AddressDelivery = {\"Info\":DataAddressDelivery,\"idAddress\":DataAddressDelivery.id};\r\n        DataOrder.idAffiliatePickup = {\"Info\":DataAddressAffiliate,\"idAffiliate\":DataAddressAffiliate.id};\r\n        DataOrder.PointsSale = this.props.SalePoints;\r\n        DataOrder.DeliverySum = this.props.DataDeliveryInfo.DeliveryPriceItog ? this.props.DataDeliveryInfo.priceDelivery : 0;\r\n        DataOrder.Comments = this.props.DataDeliveryInfo.comments;\r\n        DataOrder.DopInfo = this.props.DataDeliveryInfo.commentary;\r\n        DataOrder.typePay = this.props.DataDeliveryInfo.typePay;\r\n        DataOrder.countPerson = this.props.DataDeliveryInfo.countPerson;\r\n        DataOrder.cart = this.props.DataDeliveryInfo.cart;\r\n        DataOrder.Preorder = {\"active\":checkPreorderActive,\"datePreorder\":this.props.DataDeliveryInfo.SelectDatePreorder+'T'+this.props.DataDeliveryInfo.SelectTimePreorder};\r\n        return DataOrder;\r\n    }\r\n\r\n    getMountsDate(a,b = null){\r\n        if(b){\r\n            a = a+1;\r\n            if(a<10){return '0'+a;}\r\n        }else {\r\n            switch (a) {\r\n                case 0:\r\n                    return 'Января';\r\n                    break;\r\n                case 1 :\r\n                    return 'Февраля';\r\n                    break;\r\n                case 2 :\r\n                    return 'Марта';\r\n                    break;\r\n                case 3 :\r\n                    return 'Апреля';\r\n                    break;\r\n                case 4 :\r\n                    return 'Мая';\r\n                    break;\r\n                case 5 :\r\n                    return 'Июня';\r\n                    break;\r\n                case 6 :\r\n                    return 'Июля';\r\n                    break;\r\n                case 7 :\r\n                    return 'Августа';\r\n                    break;\r\n                case 8 :\r\n                    return 'Сенятбря';\r\n                    break;\r\n                case 9 :\r\n                    return 'Октября';\r\n                    break;\r\n                case 10 :\r\n                    return 'Ноября';\r\n                    break;\r\n                case 11 :\r\n                    return 'Декабря';\r\n                    break;\r\n                default:\r\n                    return a;\r\n            }\r\n        }\r\n    }\r\n\r\n    returnPlaceholderPreorder(a){\r\n        switch(a){\r\n            case true:\r\n                var dateObj = new Date(this.props.DataDeliveryInfo.SelectDatePreorder);\r\n                //var formated_date = dateObj.format(\"dd.mm.YYYY\");\r\n\r\n\r\n                return(<div>\r\n                        <Group title=\"Оплата бонусными баллами\">\r\n                            {this.getCountsTimeBonus()}\r\n\r\n                        </Group>\r\n                        <Group title=\"Итоговые данные по заказу\">\r\n                            <List>\r\n                                <Cell\r\n                                    before={<Icon24Place />}\r\n                                    description={<span>\r\n                                      <i>{this.props.DataDeliveryInfo.addressOrderInfoUser}</i>\r\n                                  </span>}\r\n                                    size=\"l\">\r\n                                    {this.props.checkedTypeDilivery === 0 ? \" Доставка курьером\" : \" Заберу заказ сам\"}\r\n                                </Cell>\r\n                                <Cell\r\n                                before={<Icon24Flash />}\r\n                                description={this.props.DataDeliveryInfo.typeOrderDate ? <i> В ближайшее время</i> :\r\n                                    <i> {dateObj.getDate()+' '+this.getMountsDate(dateObj.getMonth(),false)+' '+dateObj.getUTCFullYear()+'г. к '+this.props.DataDeliveryInfo.SelectTimePreorder}</i>\r\n                                }\r\n                                >\r\n                                    Время получения заказа\r\n                                </Cell>\r\n                                <Cell before={<Icon24Coins />}> Списано таймов: <b>{this.props.SalePoints}</b></Cell>\r\n                                {this.PriceInfoVisual()}\r\n                                <Cell before={<Icon24MoneyCircle />}> К оплате: <b className=\"OrangeColor\">{this.getSumCartItogo()} ₽</b></Cell>\r\n                            </List>\r\n                        </Group>\r\n                        <Group title=\"Способ оплаты\">\r\n                            <List>\r\n                                <Cell>\r\n                                    <Radio name=\"typePayments\" value=\"1\"\r\n                                           description=\"Оплата наличными при получении\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 1 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:1})}}>Наличные</Radio>\r\n                                    <Radio name=\"typePayments\" value='2' description=\"Оплата банковской картой, по терминалу\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 2 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:2})}}>Терминал</Radio>\r\n\r\n                                </Cell>\r\n                                <Cell>\r\n                                    <Div>\r\n                                        <NewOrderServer setStates={this.setState.bind(this)}\r\n                                                        userInfo={this.props.userInfo}\r\n                                                        DataOrderInfo={this.getDataOrder()}\r\n                                                        getPageOkOrderSet={this.props.setStates.bind(this)}\r\n                                                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                                        />\r\n                                    </Div>\r\n                                </Cell>\r\n                            </List>\r\n                        </Group>\r\n                    </div>\r\n                );\r\n                break;\r\n            default:\r\n                return(\r\n                    <Placeholder\r\n                        icon={<Icon56ErrorOutline />}\r\n                        action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Указать вариант получения</Button>}\r\n\r\n                    >\r\n                        <h2>Не указана дата и время получения</h2>\r\n                        <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите дату получения заказа.</p>\r\n                    </Placeholder>\r\n                );\r\n        }\r\n    }\r\n\r\n    checkPreorderType(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === false) {\r\n            if(this.props.DataDeliveryInfo.SelectDatePreorder === null){\r\n                return this.returnPlaceholderPreorder(false);\r\n            }else{\r\n                if(this.props.DataDeliveryInfo.SelectTimePreorder === null){\r\n                    return this.returnPlaceholderPreorder(false);\r\n                }else{\r\n                    return this.returnPlaceholderPreorder(true);\r\n                }\r\n            }\r\n\r\n        }else{\r\n            return this.returnPlaceholderPreorder(true);\r\n        }\r\n    }\r\n\r\n\r\n    checkTypeDiliveryInfo(){\r\n        if(this.props.checkedTypeDilivery === 0 && this.props.addressDefault === null){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Выбрать адрес</Button>}\r\n\r\n                >\r\n                <h2>Вы не выбрали адрес доставки</h2>\r\n                    <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите адрес доставки, либо адрес точки самовывоза, откуда Вам будет удобно забрать заказ.</p>\r\n                </Placeholder>\r\n\r\n            );\r\n        }else{\r\n            return (this.checkPreorderType());\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.checkMinSummaCart()\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentsPage;","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\nimport Dilivery from \"./Dilivery\";\r\n\r\nimport './styleCart.css';\r\n\r\nimport ButtonCart from \"../catalog/ButtonInCart\";\r\nimport PaymentsPage from \"./PaymentsPage\";\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass GetCartHome extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n\r\n    ReloadDeliveryPay(){\r\n\r\n    }\r\n\r\n    GetPresetsVisual(){\r\n        if(Object.keys(this.props.PresetsDopProductList.list).length >0){\r\n            const ListPresets = this.props.PresetsDopProductList.list.map((datas,number)=>{\r\n                return(\r\n                    <div key={number+'PresetsTitle'}>{datas.title} -  {datas.count} {datas.typeCount}</div>\r\n                );\r\n            });\r\n            return(\r\n                <Group\r\n                title=\"В заказ так же входит\"\r\n                    style={{textAlign:\"center\",overflow: \"hidden\"}}>\r\n                    <img src={this.props.PresetsDopProductList.img}\r\n                         style={{\r\n                             float: \"left\",\r\n                             width: \"35%\",\r\n                             marginLeft:\"3%\",\r\n                             marginRight:\"3%\"\r\n                         }}\r\n                    />\r\n                    <Div style={{textAlign:\"left\",\"lineHeight\":\"2.1em\",paddingRight:\"0\"}}>{ListPresets}</Div>\r\n                </Group>\r\n            );\r\n        }else{\r\n            //console.log('oo',Object.keys(this.props.PresetsDopProductList.list).length);\r\n            return('');\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n       function go(e){\r\n         setActivePanel(e);\r\n         // setActivePanel(e.currentTarget.dataset.to);\r\n       };\r\n\r\n       function setActivePanel(e){\r\n           // useState(e);\r\n          // this.setState({activePanel: e});\r\n           this.ActivePanels(e);\r\n       }\r\n\r\n       function setPopout(e){\r\n           if(e === ''){\r\n               // useState(<ScreenSpinner size='large' />);\r\n               this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n           }else{\r\n               // useState(e);\r\n               this.setState({popout: e});\r\n           }\r\n       }\r\n\r\n       function  getCartVisual(id, Products,setCart){\r\n           //setPopout(null);\r\n            if(Products.length<=0){\r\n                return(<div style={{\"textAlign\":\"center\",\"padding\":\"5px 10px\",\"marginTop\":\"30px\"}}><h2>Корзина пуста</h2><p>К сожалению, для того чтобы что-то заказать, Вам нужно положить этот товар в корзину!</p></div>);\r\n            }else {\r\n\r\n                var results = Products.map((cartProduct,idProducts) =>\r\n                    <div className=\"ProductInCartBlock\" key={\"blockProducts_\"+idProducts}>\r\n                        <div\r\n\r\n                        className=\"blockProduct\"\r\n                        style={{\r\n                            \"width\": \" 100%\",\r\n                            \"margin\": \"5% 0\",\r\n                            \"padding\": \"0%\",\r\n                            \"float\":\"none\",\r\n                            marginBottom:10\r\n                        }}\r\n                        >\r\n                            <div className=\"imgPrewieProduct\">\r\n                                <img src={cartProduct.img}/>\r\n                            </div>\r\n                            <div className=\"titleProduct\">\r\n                                {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                                {cartProduct.title} <span className=\"redTextP\">{cartProduct.type_info}</span>\r\n                            </div>\r\n                            <div className=\"DescrProduct2\">\r\n                                {cartProduct.description}\r\n                            </div>\r\n                            <div style={{clear:\"both\"}}>\r\n                                {/*Товаров: {cartProduct.count} <br/>*/}\r\n                                <span className=\"priceProduct\">На сумму: <span className=\"WeightFontBold\">{cartProduct.count * cartProduct.price} ₽</span></span>\r\n                                <div className=\"priceProductBig\"style={{width:\"100%\",bottom:-8}}><ButtonCart CartProducts={Products} typeProduct2={cartProduct}\r\n                                                                             setCarts={setCart.bind(this)}/></div>\r\n                            </div>\r\n                        </div>\r\n                        <Separator style={{ margin: '20px 0' }} />\r\n                    </div>\r\n                );\r\n\r\n                return(<div className=\"CartBlockProducts\">{results}</div>);\r\n\r\n            }\r\n        }\r\n\r\n        function getDiliveryData(){\r\n            return (<div><h2>Доставка</h2></div>);\r\n        }\r\n\r\n\r\n\r\n        function getButtonNavigation(typeNav, action){\r\n\r\n           switch(typeNav){\r\n               case\"1\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button className=\"activeButons\" onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"2\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"3\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>; break;\r\n           }\r\n\r\n           return(\r\n               <HorizontalScroll>\r\n                   {ButtonBlock}\r\n               </HorizontalScroll>\r\n           );\r\n        }\r\n\r\n        function getOneStepCartNone(){\r\n           return(\r\n               <Panel id=\"home\">\r\n\r\n                   <Placeholder\r\n                       icon={<Icon56MarketOutline />}\r\n                       action={false}\r\n\r\n                   >\r\n                       <h2>Корзина пуста</h2>\r\n                       <p>Для совершения заказа, положите в нее хотя-бы 1 товар</p>\r\n                   </Placeholder>\r\n\r\n               </Panel>\r\n           );\r\n        }\r\n\r\n        function getOneStepCart(ProductList,setCart,sumCart,setState,GetPresetsVisual){\r\n           return (\r\n               <Panel id=\"home\" >\r\n               <PanelHeader theme=\"light\"> {getButtonNavigation('1', setState.bind(this))}</PanelHeader>\r\n               <Group title=\"Товары\">\r\n                <Div className=\"CartBlockProductsOneStep\">\r\n                {getCartVisual(\"homes\", ProductList, setCart.bind())}\r\n            <div style={{clear:\"both\"}}></div>\r\n            </Div>\r\n        </Group>\r\n                   {GetPresetsVisual}\r\n        <Group>\r\n            <Div className=\"SumItogOneSTepCart\">Сумма итого: <span className=\"OrangeColor\">{sumCart} ₽</span></Div>\r\n        </Group>\r\n        <Div><Button size=\"xl\" onClick={()=> {setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button></Div>\r\n               </Panel>\r\n        );\r\n        }\r\n\r\n\r\n\r\n        return(\r\n            <View activePanel={this.state.activePanel} className={osName === IOS ? \"IOSCLASSCSS\" : \"AndroidCLASSCSS\"} popout={this.state.popout} header={this.props.ProductList.length<=0 ? false : true}>\r\n\r\n\r\n                    {this.props.ProductList.length<=0 ? getOneStepCartNone() :\r\n\r\n                        getOneStepCart(this.props.ProductList, this.props.setCart.bind(),this.props.sumCart, this.setState.bind(this),this.GetPresetsVisual())\r\n                    }\r\n\r\n                <Panel id=\"dilivery\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('2', this.setState.bind(this))}</PanelHeader>\r\n                    <Dilivery\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        getUserSystemInfo={this.props.getUserSystemInfo.bind()}\r\n\r\n                        addressDefault={this.props.addressDefault}\r\n                        setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n\r\n                        AffiliateDefault={this.props.AffiliateDefault}\r\n                        setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        setTypeDilivery={this.props.setTypeDilivery.bind(this)}\r\n\r\n                        commentary={this.props.commentary}\r\n                        setComment={this.props.setComment.bind(this)}\r\n\r\n                        countPerson={this.props.countPerson}\r\n\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                        getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                        /*Для вычисления суммы бесплатной доставки*/\r\n                        sumCart={this.props.sumCart}\r\n\r\n                        setPopout={this.setState.bind(this)}\r\n                        ProductList={this.props.ProductList}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n                        hideModals={this.props.hideModals.bind(this)}\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" stretched level=\"secondary\"  style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"home\"});}}>В корзину</Button>\r\n                        <Button size=\"l\" stretched className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"order\"});}}>К оплате</Button>\r\n                    </Div>\r\n                </Panel>\r\n                <Panel id=\"order\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('3', this.setState.bind(this))}</PanelHeader>\r\n                    <PaymentsPage\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        SalePoints={this.props.SalePoints}\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        sumCart={this.props.sumCart}\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        addressDefault={this.props.addressDefault}\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                        getReloadInfODeliveryPay={this.props.checkedTypeDilivery ? this.props.getDeliveryDataPriceItogAffiliate.bind(this) : this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n\r\n                        action={this.setState.bind(this)}\r\n\r\n                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" level=\"secondary\" stretched style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button>\r\n\r\n                    </Div>\r\n                </Panel>\r\n            </View>\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default GetCartHome;","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './StartPageVKapp';\n// import App from './App2';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// globals/index.js\r\n\r\nglobal.ApiKey = '03478f08258a5b0e7f4a1e83dae33da9';\r\n\r\nglobal.CityListBind = [];","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert, Div,Input,FormLayout, Button, Select } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass FormNewAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                city: '',\r\n                street: '',\r\n                home: '',\r\n                entrance: '',\r\n                level: '',\r\n                flat: '',\r\n                comment:''\r\n        }\r\n\r\n        this.addressItems = [\r\n            // { label: 'Город', name: 'city', statusChech:'yes', minValue:5, valPls:'' },\r\n            { label: 'Название улицы', name: 'street', statusChech:'yes', minValue:4, valPls:'' },\r\n            { label: '№ дома', name: 'home', statusChech:'yes', minValue:0, valPls:'' },\r\n            { label: '№ квартиры/офиса', name: 'flat', statusChech:'', minValue:0, valPls:'' },\r\n            { label: '№ подъезда', name: 'entrance', statusChech:'', minValue:0, valPls:'' },\r\n            { label: 'Этаж', name: 'level', statusChech:'', minValue:0, valPls:''},\r\n            { label: 'Примечание', name: 'comment', statusChech:'', minValue:0, valPls:'Пример: Квартира сестры' }\r\n        ];\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.openDefault = this.openDefault.bind(this);\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n\r\n        if(this.props.AddressEdit){\r\n            this.state = {\r\n                    id:this.props.AddressEdit.id,\r\n                    city: this.props.AddressEdit.city,\r\n                    street: this.props.AddressEdit.street,\r\n                    home: this.props.AddressEdit.home,\r\n                    entrance: this.props.AddressEdit.podezd,\r\n                    level: this.props.AddressEdit.etaj,\r\n                    flat: this.props.AddressEdit.kvartira,\r\n                    comment: this.props.AddressEdit.comment\r\n                }\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n       // console.log(this.state);\r\n    }\r\n\r\n\r\n    openDefault () {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Исправить',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Не все поля адреса заполнены</h2>\r\n                    <p>Внимательно заполните все поля, для сохранения адреса доставки!</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n\r\n    saveNewAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://sushi-time31.ru/api/setAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n    saveEditAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://sushi-time31.ru/api/editAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            //this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n    getCitySelect(idCity,def = null){\r\n        if(idCity in global.CityListBind) {\r\n            const ListCityOrigin = global.CityListBind[idCity].listCity;\r\n            const ListCitys = Object.keys(global.CityListBind[idCity].listCity);\r\n            const ListOption = ListCitys.map((data, key) => {\r\n                return (<option\r\n                    key={key}\r\n                    value={ListCityOrigin[data].title}\r\n                >\r\n                    {\r\n                        ListCityOrigin[data].title\r\n                    }\r\n                </option>);\r\n            });\r\n            return (\r\n                ListOption\r\n            );\r\n        }else{\r\n            return (\"\");\r\n        }\r\n    }\r\n\r\n    getNulledForm(){\r\n        return(\r\n            <FormLayout>\r\n                <Select placeholder=\"Город / Населенный пункт\" onChange={this.onChange} name=\"city\" key={\"input_city\"} top=\"Город\">\r\n                    {this.getCitySelect(1)}\r\n                </Select>\r\n                {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                    <Input\r\n                        type=\"text\"\r\n                        name={name}\r\n                        key={\"input_\"+name}\r\n                        top={label}\r\n                        onChange={this.onChange}\r\n                        status={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >=minValue  ? 'valid' : 'error'\r\n                                    : 'error'\r\n                                : \"\"\r\n                        }\r\n                        bottom={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >=minValue  ? '' : 'Введенные значение не корректно '+this.state[name].length\r\n                                    : 'Обязательно к заполнению'\r\n                                : \"\"\r\n                        }\r\n                        placeholder={valPls}\r\n                    />\r\n                ))}\r\n                <Button size=\"l\" style={{background:\"#ff7300\"}} onClick={()=>{this.saveNewAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Подтвердить адрес</Button>\r\n            </FormLayout>\r\n        );\r\n    }\r\n\r\n\r\n    getEditForm(){\r\n        return(\r\n            <FormLayout>\r\n                <Select placeholder=\"Город / Населенный пункт\" onChange={this.onChange} name=\"city\" key={\"input_city\"} top=\"Город\" defaultValue={this.state.city}>\r\n                    {this.getCitySelect(1)}\r\n                </Select>\r\n                {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                    <Input\r\n                        type=\"text\"\r\n                        name={name}\r\n                        key={\"input_\"+name}\r\n                        top={label}\r\n                        onChange={this.onChange}\r\n                        status={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >minValue  ? 'valid' : 'error'\r\n                                    : 'error'\r\n                                : \"\"\r\n                        }\r\n                        value={this.state[name]}\r\n                        bottom={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >minValue  ? '' : 'Введенные значение не корректно'\r\n                                    : 'Обязательно к заполнению'\r\n                                : \"\"\r\n                        }\r\n                        placeholder={valPls}\r\n                    />\r\n                ))}\r\n                <Button size=\"l\" style={{background:\"#ff7300\"}} onClick={()=>{this.saveEditAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Завершить редактирование</Button>\r\n            </FormLayout>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Div>\r\n                {this.props.AddressEdit ? this.getEditForm() : this.getNulledForm()}\r\n            </Div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default FormNewAddress;","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\n\r\nexport default function ButtonInCart({CartProducts,typeProduct2,setCarts}){\r\n\r\n    function getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getButtonInCartProduct(typeProduct,setCart){\r\n       // console.log(CartProducts,'---0---',typeProduct,setCart);\r\n        if(!!CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            CartProducts.map((data,key)=>{\r\n                //console.log(data.id_Product,typeProduct.id_Product, data.type_product,typeProduct.type_product,'++++++++++++++++++');\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  getCountButton(typeProduct,CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return(getButtonInCartProduct(typeProduct2,setCarts));\r\n\r\n}\r\n","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nexport default function OneProduct({product,idCategory, ClickProduct, setCart, setProductModal, getButtonInCartProduct}) {\r\n// console.log('ут должна функция должна быть',ClickProduct);\r\n    // const ArrayProducts = product.map(oneProduct =>\r\n    //     //<OneProduct key={oneProduct.id} product={oneProduct} />\r\n    //     <Div className=\"blockProduct\" key={\"id_product_\"+oneProduct.id_Product}>\r\n    //         <Div className=\"imgPrewieProduct\"><img alt={oneProduct.title} src={oneProduct.img}/></Div><Div className=\"titleProduct\">{oneProduct.title}</Div><Div className=\"DescrProduct\">{oneProduct.description}</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">{oneProduct.price} руб.</span></Div>\r\n    //     </Div>\r\n    // );\r\n\r\n    // console.log(key);\r\n\r\n    function escapeHtml(text) {\r\n        var map = {\r\n            '&': '&amp;',\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '\"': '&quot;',\r\n            \"'\": '&#039;'\r\n        };\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n\r\n    function number_format(number, decimals, dec_point, separator ) {\r\n        number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\r\n        var n = !isFinite(+number) ? 0 : +number,\r\n            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n            sep = (typeof separator === 'undefined') ? ',' : separator ,\r\n            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n            s = '',\r\n            toFixedFix = function(n, prec) {\r\n                var k = Math.pow(10, prec);\r\n                return '' + (Math.round(n * k) / k)\r\n                    .toFixed(prec);\r\n            };\r\n        // Фиксим баг в IE parseFloat(0.55).toFixed(0) = 0;\r\n        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))\r\n            .split('.');\r\n        if (s[0].length > 3) {\r\n            s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n        }\r\n        if ((s[1] || '')\r\n            .length < prec) {\r\n            s[1] = s[1] || '';\r\n            s[1] += new Array(prec - s[1].length + 1)\r\n                .join('0');\r\n        }\r\n        return s.join(dec);\r\n    }\r\n\r\n    function getWeightProduct(Product_Weight,Product_WeightType){\r\n        if(Product_WeightType != 'л'){\r\n            return(\r\n                number_format(Product_Weight,'0','.', ' ')+' '+Product_WeightType\r\n            );\r\n        }else{\r\n            return(\r\n                Product_Weight+' '+Product_WeightType\r\n            );\r\n        }\r\n    }\r\n\r\n    function getModyficateBlock(ArrayMod){\r\n        var ListMod = Object.keys(ArrayMod);\r\n        if(ListMod.length <=0){\r\n            return \"\";\r\n        }else{\r\n            var VisualList = ListMod.map((datas,keys)=>{\r\n                return (<div key={keys} className=\"ModyficateProduct\"><img src={ArrayMod[datas].mod_img} /></div>);\r\n            });\r\n            return(\r\n                <div className=\"ModyficateBlock\">{VisualList}</div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function getProductDiv(productList,idCategory,ClickProduct,setCart,setProductModal ,getButtonInCartProduct){\r\n\r\n         //console.log(ClickProduct,'в корзину функция');\r\n        var ProductCat = productList;\r\n\r\n        const WeightProduct = '';\r\n\r\n\r\n\r\n        const ArrayProducts = ProductCat.map((typeProduct,idTypeProduct) =>\r\n            <Div key={\"blockProducts_\"+typeProduct.id_Product+\"_\"+idTypeProduct} className=\"blockProduct\" id={\"id_product_\"+typeProduct.id_Product+\"_type_\"+typeProduct.type_product}>\r\n                {getModyficateBlock(typeProduct.modyficate)}\r\n                <Div className=\"imgPrewieProduct\">\r\n                    <img\r\n                        alt={typeProduct.title}\r\n                        src={typeProduct.img}\r\n                        onClick={() =>{\r\n                            ClickProduct('Panels_Product');\r\n                            setProductModal([typeProduct]);\r\n                            console.log('Нажали на фотку',ProductCat,idTypeProduct)}\r\n                        }\r\n                    />\r\n                </Div>\r\n                <Div className=\"titleProduct\">\r\n                    {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                    {escapeHtmlDecode(typeProduct.title)}\r\n                    <span className=\"redTextP\">\r\n                        {getWeightProduct(typeProduct.weight,typeProduct.weight_type)}\r\n                    </span>\r\n                </Div>\r\n                <Div className=\"DescrProduct\">\r\n                    {escapeHtmlDecode(typeProduct.description)}\r\n                    <div>\r\n                    </div>\r\n                    {typeProduct.type_info != '' ?\r\n                        <div className=\"WeightBlock\">\r\n                            {typeProduct.type_info}\r\n                        </div>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                </Div>\r\n                <Div className=\"priceProductBig\">\r\n                    <span className=\"priceProduct\">\r\n                        {number_format(typeProduct.price,'0','.',' ')} ₽\r\n                    </span>\r\n                    {getButtonInCartProduct(typeProduct,setCart)}\r\n                </Div>\r\n            </Div>\r\n        );\r\n\r\n\r\n        return ArrayProducts;\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        getProductDiv(product,idCategory,ClickProduct, setCart , setProductModal, getButtonInCartProduct)\r\n    );\r\n}"],"sourceRoot":""}