{"version":3,"sources":["panels/global/index.js","StartPageVKapp.js","panels/ProfileUser/UserOrderList.js","panels/ProfileUser/OrderTypeList.js","panels/ProfileUser/OrderShowDeail.js","panels/Notice/index.js","panels/catalog/ProductList.js","panels/Cart/Dilivery.js","panels/Cart/DiliveryAddress.js","panels/Cart/GetOneAddress.js","panels/Cart/GetOneAddressOff.js","panels/Cart/AffiliateList.js","panels/Cart/GetOneAffiliateAddress.js","panels/preorder/index.js","panels/noPreorder/index.js","panels/Cart/NewOrderServer.js","panels/ProfileUser/UserInfo.js","panels/Persik.js","panels/Nopersik.js","panels/Profile.js","panels/Cart/PaymentsPage.js","panels/Cart/CartHome.js","panels/catalog/CategoryList.js","panels/catalog/CatalogProduct.js","index.js","img/persik.png","panels/Cart/FormNewAddress.js","panels/catalog/ButtonInCart.js","panels/catalog/OneProduct.js"],"names":["global","ApiKey","CityListBind","searchProduct","require","App","props","parseQueryString","string","slice","split","map","queryParam","kvp","key","value","reduce","query","state","AudioInfo","ReloadBasket","Audio","countReloadBasket","Notice","CountNotice","CountNoticeNoView","typeOrderGetText","typeOrderGet","numberOrderShow","listOrderUser","ParamStart","products","DopProductList","DopProductUserSet","LoadDopProduct","loadingCatalog","activeStory","activePanelOrders","loadingPage","user","userSystemInfo","error","dataUser","cart","countCartProduct","dopPresets","imgListPresets","addressDefault","AffiliateDefault","checkedTypeDilivery","commentary","typePay","countPerson","SalePoints","sumCart","activeModal","formNewAddressData","formEditAddressData","listAddressGlobal","listAffiliateGlobal","priceDelivery","minSumOrder","minSumFreeDelivery","errorOrderFinal","DeliveryPriceItog","DeliveryAddressOKCity","addressOrderInfoUser","newOrderStats","StatusLoadSlide","slideHeaderArray","slideIndex","StatusNotification","typeOrderDate","SelectDatePreorder","SelectTimePreorder","onStoryChange","bind","axios","method","url","responseType","then","data","ListCitySelect","list","catch","err","console","log","idUsers","CountNoticeNoCheck","result","type","idNotice","this","id","getNotice","getCartDB","setState","getUserSystemInfo","as","bs","stretched","icon","action","size","level","onClick","e","currentTarget","dataset","story","aa","sumCartItog","CPr","getSumCartOnDiscount","SumDopsProduct","Object","keys","length","n","count","price","document","cookie","typeProduct","price_discount","new_price","vk_platform","headers","typeSlide","getTypeSlideGet","setSlideArray","errorInfo","listSlide","ArraySlide","status","ArraySlides","Bullets","AutoPlays","SliderVisual","datas","src","img","style","maxWidth","autoplay","slideWidth","width","height","bullets","getSlideHeaderArray","setTimeout","reloadSlideHeaderSetTime","connect","sendPromise","response","is_allowed","PushClick","AllNotice","setNotice","setNoticeServer","DeleteNotifi","OffPushNotyfication","OnPushNotyfication","getStatusNotificate","getCityUser","setUser","a","async","fetchData","setInterval","getIntervalCart","setHashDataReload","i","dataOld","dataNew","ListProduct","setCountCartVisal","ListDopPresets","listPresetProduct","imgPresetProduct","id_user","loading","ia","listProduct","ListOld","JSON","stringify","ListNew","ListPresetsOld","ListPresetsNew","DopPresetsData","statusBasket","StatusReloadBasketData","statusPresets","ReloadBasketDataFN","PlayInfoAudio","ListDopOld","ListDopNew","ReloadBasketDataDopPresets","audio","stop","play","setUserSystem","JsonBasket","basketJson","tE","counts","push","countPlus","setcountCartProduct","noAdd","cartProducts","id_Product","type_product","setcountCartProductVar","splice","setDataServer","btoa","encodeURI","setCartServer","HashParam","window","location","hash","newHeight","screen","send","setHashNew","queryParams","search","modal","onClose","setModal","header","right","title","dynamicContentHeight","caption","actions","osname","platform","countNoticeView","tabbar","selected","data-story","text","label","activePanel","getSuccesOrderPage","theme","userData","setTypeOrderList","left","IOS","addon","setOrderShowNumber","listOrderUserSet","idOrderDetail","OrderDatas","setCart","CartProducts","ProductsLists","sliderHeader","getSliderGalery","noShadow","ProductList","setDopProduct","PresetsDopProductList","userInfo","setAddressDefault","setAffiliateDefault","setTypeDilivery","setComment","setStates","setDeliveryDataItogs","getDeliveryDataPriceItog","getDeliveryDataPriceItogAffiliate","showModal","hideModals","DataDeliveryInfoPay","setTypeOrderDate","comments","setOkNewOrderView","getNotificationPage","go","dataUsers","setStatusNotification","setShowUserOrderList","React","Component","UserOrderList","loadOrders","before","color","getAllGroups","OrderTypeList","getOrderUserSystem","countOrder","Pr","reduceRight","arr","last","index","coll","concat","typeNumber","iconsD","countOrders","ListOrder","ReverceList","dataOrder","keyOrder","CurrentOrder","statusY","status_order","delete_order","summaOrders","sum_order","description","date","time","id_order","fontSize","marginLeft","getOrderType","results","getNowOrder","getOldOrder","getCancelledOrder","getOneTypeOrders","OrderShowDetail","ststusReturn","statusOld","statusReal","ststusReturns","Order","pre_order","date_pre_order","replace","m","sale_price","product_price","Price_sales","discount_amount","Discount","indicator","cost","escapeHtmlDecode","product_title","price_product","title_product","title_gift_product","dilivery","dilivery_type","Address","dilivery_adres","PriceDeli","dilivery_price","TextDel","affiliate","affiliate_info","promo_status","PromoInfo","promo_code","promo_info","point_out","point_in","OrderId","textAlign","padding","setRepeatOrder","alert","StatusIcon","getStatusIconText","detailText","getStatusOrderReal","getStatusOrderText","status_order_real","payment","type_pay","getPerson","person","getInfoPointsOrder","getInfoPreorderBlock","getInfoPromokod","promo","getOrderComposition","productList","getOrderDopComposition","dopProductList","getOrderGiftComposition","giftProductList","getOrderDeliveryInfo","getComment","Comment","getRepeatOrder","popout","statusView","Data","setNoticeData","asideContent","getImagesNotice","dangerouslySetInnerHTML","__html","NoteNotice","nameCategory","productsLists","onChange","compare","b","ArrayProducts","ClickProductF","setProductModal","getButtonInCartProduct","ReverceStatus","SearchText","CatalogLists","ReverceCatalog","sort","comparePrice","DSr","Objs","retr","forEach","oneProduct","keyId","array","re","str","midstring","toLowerCase","testInput","SearchProductTitle","product","ClickProduct","GetSets","ArrayPr","SearchState","names","className","ProductArray","GetSushi","alt","GetRoli","GetNoneCat","after","nameCategorys","idCategory","idCategorys","onClickProduct","blueBackground","backgroundColor","Dilivery","UserCard","phone","email","CheckSMSCode","phoneValue","codeValue","resultVerificationCode","tooltip","snackbar","showBTNNewAddress","showFormNewAddress","openBase","phone_number","layout","fill","phoneVerification","VerificationCode","idUserVK","event","target","types","values_count","display","justifyContent","marginRight","background","getDataCountPerson","readOnly","top","placeholder","getValueInputCode","checkVerificationCode","defaultValue","getValueInputPhone","setVerificationPhone","DataDeliveryInfo","getButtonTypeOrder","typeDelivery","DataInfos","getButtonTypeDilivery","getListAddress","getListAffiliate","getPreorderBlock","getCountPersonInput","getCommentsTextarea","setPopout","setShowBTNNewAddress","showModals","getCommentsData","Param","getNoneCartProduct","getInfoUserAuth","getInfoUserNoneAuth","getOkListAddress","DiliveryAddress","listAddress","listAddressOff","addressOk","dataAddress","getAddressUserSystem","AddressEdit","delUpdate","id_UserVK","getFormNewAddress","ListAddressNoDelivery","listAddressGlobalOff","getAddressUsers","listAddressU","DataSetAddress","city","street","home","diliveryData","priceDilivery","min_sum_order","min_sum_free_dilivery","setDataDiliveryPrice","setAddressInfoUsers","setDataDeliveryPrice","setAddressEdit","AddresInfo","NumberAddress","dataAddressOff","dataAddress2","keyId2","getListAddressVisual","GetOneAddress","AddressN","closePopout","comment","addressInfo","result_add","autoclose","deletedAddress","float","podezd","etaj","kvartira","openDefault","name","getAddressFull","defaultChecked","getAddressTitle","defaultCheckedR","GetOneAddressOff","disabled","AffiliateList","listAffiliate","addressAffiliateOk","dataAffiliate","id_City","listOffAffiliate","getAddressAffiliate","GetOneAffiliateAddress","operating_mode","Preorder","loadBlockPreorder","listDatePreorder","onChangeS","getDateList","ListDate","getSelectTime","ListTimes","timeList","ListTime","times","false","getSelectDate","getBlockPreorder","NoPreorder","loadBlockOrder","paddingBottom","getBlocknoPreorder","NewOrderServer","statusNewOrder","DataOrderInfo","getPageOkOrderSet","UserInfo","margin","them","fetchedUser","photo_200","first_name","last_name","point","checked","textDecoration","href","getPanelProfil","ProfileUserPage","useState","setActivePanel","useEffect","to","setActivePanels","PaymentsPage","value2","getReloadInfODeliveryPay","options","points","step","min","max","Number","setPointsDefaultsSale","String","sum","checkTypeDiliveryInfo","checkPreorderActive","DataOrder","DataAddressDelivery","getAddressDelivery","DataAddressAffiliate","AddressDelivery","idAffiliatePickup","PointsSale","DeliverySum","Comments","DopInfo","dateObj","Date","getCountsTimeBonus","getDate","getMountsDate","getMonth","getUTCFullYear","PriceInfoVisual","getSumCartItogo","getDataOrder","returnPlaceholderPreorder","checkPreorderType","checkMinSummaCart","osName","GetCartHome","LoadStatus","ListPresets","number","typeCount","overflow","paddingRight","ListDopProduct","getButtonDopProduct","getCountDopProductIcon","minWidth","Prod","alls","idProduct","Buttons","getCartVisual","Products","cartProduct","idProducts","marginBottom","type_info","clear","fontWeight","old_price","getPriceProducts","bottom","typeProduct2","setCarts","getButtonNavigation","typeNav","ButtonBlock","data-to","GetPresetsVisual","getOneStepCart","DopProductListVisual","CategoryList","hndlClick","aP","productModal","setActiveCategory","ActiveCategory","panelCategory","ButOk","id_CartPr","getCountButton","getInCarts","classNameDivCategory","OPT","Loadings","imgCategory","ClickCategory","Title","ShowCategory","id_Category","ClickBack","ProductInfo","CatalogProduct","ReactDOM","render","getElementById","module","exports","FormNewAddress","entrance","flat","addressItems","statusChech","minValue","valPls","idCity","ListCityOrigin","listCity","ListCitys","ListOption","getCitySelect","saveNewAddress","saveEditAddress","getEditForm","getNulledForm","ButtonInCart","OneProduct","number_format","decimals","dec_point","separator","isFinite","prec","Math","abs","sep","dec","s","k","pow","round","toFixed","toFixedFix","Array","join","ProductCat","idTypeProduct","ArrayMod","ListMod","VisualList","mod_img","getModyficateBlock","modyficate","Product_Weight","weight","Product_WeightType","weight_type","getProductDiv"],"mappings":"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","file":"static/js/main.c9c61cf0.chunk.js","sourcesContent":["// globals/index.js\r\n\r\nglobal.ApiKey = '03478f08258a5b0e7f4a1e83dae33da9';\r\n\r\nglobal.CityListBind = [];\r\n\r\nglobal.searchProduct = '';","import React, {useState} from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport {platform, IOS, ModalRoot, ModalPage, ModalPageHeader, HeaderButton, Placeholder, Button, Gallery, Switch} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Icon56CheckCircleOutline from '@vkontakte/icons/dist/56/check_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport UserOrderList from './panels/ProfileUser/UserOrderList';\r\nimport OrderTypeList from './panels/ProfileUser/OrderTypeList';\r\nimport OrderShowDeail from './panels/ProfileUser/OrderShowDeail';\r\n\r\n\r\nimport Notice from './panels/Notice/index';\r\n\r\nimport ButtonCart from  \"./panels/catalog/ButtonInCart\";\r\n\r\n\r\nimport {Div, Epic, Tabbar, TabbarItem, Panel, PanelHeader} from '@vkontakte/vkui';\r\n//import Icon28Messages from '@vkontakte/icons/dist/28/messages';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\r\nimport Icon28User from '@vkontakte/icons/dist/28/user';\r\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport AppHome from \"./panels/Profile\";\r\nimport CatalogProduct from \"./panels/catalog/CatalogProduct\";\r\nimport './panels/catalog/product.css';\r\n\r\nimport GetCartHome from \"./panels/Cart/CartHome\";\r\n\r\nrequire('./panels/global/index.js');\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AudioInfo:{\r\n                ReloadBasket: new Audio('//sushi-time31.ru/audio/ReloadBasketInfo2.mp3')\r\n            },\r\n\r\n            countReloadBasket:0,\r\n\r\n            Notice:[],\r\n            CountNotice:0,\r\n            CountNoticeNoView:null,\r\n\r\n            typeOrderGetText:'Текущие заказы',\r\n            typeOrderGet:'now',\r\n            numberOrderShow:0,\r\n            listOrderUser:[],\r\n\r\n            ParamStart:false,\r\n            products:[],\r\n            DopProductList:[],\r\n            DopProductUserSet:{},\r\n            LoadDopProduct:false,\r\n            loadingCatalog:false,\r\n            activeStory: 'catalog',\r\n            activePanelOrders:\"ListTypeOrder\",\r\n            loadingPage: true,\r\n            user:[],\r\n            userSystemInfo:{error:true,dataUser:\"\"},\r\n            cart:[],\r\n            countCartProduct:'',\r\n\r\n            dopPresets: [],\r\n            imgListPresets: false,\r\n\r\n            addressDefault:null,\r\n            AffiliateDefault:0,\r\n            checkedTypeDilivery:0,\r\n            commentary:\"\",\r\n            typePay:1,\r\n            countPerson:1,\r\n            SalePoints:0,\r\n            sumCart:0,\r\n            activeModal:null,\r\n            formNewAddressData:'',\r\n            formEditAddressData:'',\r\n\r\n            listAddressGlobal:[],\r\n            listAffiliateGlobal:[],\r\n\r\n            priceDelivery:0,\r\n            minSumOrder:300,\r\n            minSumFreeDelivery:0,\r\n\r\n            //Если сумма корзины меньше необходимой для заказа\r\n            errorOrderFinal:false,\r\n            //Если сумма корзины меньше бесплатной доставки\r\n            DeliveryPriceItog:false,\r\n\r\n            //Доставка на адрес возможна, сли false, то не возможна\r\n            DeliveryAddressOKCity:true,\r\n\r\n            //Адрес, для отображения в последнем блоке корзины\r\n            addressOrderInfoUser:'',\r\n            newOrderStats:false,\r\n\r\n            StatusLoadSlide:false,\r\n            slideHeaderArray:[],\r\n            slideIndex: 0,\r\n\r\n            StatusNotification:false,\r\n\r\n            CityListBind:[],\r\n\r\n            typeOrderDate:true,\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    getCityUser(){\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getCity&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n\r\n                }else{\r\n                    this.state.ListCitySelect = data.list;\r\n                    global.CityListBind = data.list;\r\n                   // console.log('Установили города',global.CityListBind);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения городов',err);\r\n            });\r\n    }\r\n\r\n    getNotice(idUsers){\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getNotice&idUserVK='+idUsers+'&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    //console.log('Получили уведомления',data);\r\n                    this.state.CountNotice = null;\r\n                    this.state.CountNoticeNoView = null;\r\n                    this.state.Notice = [];\r\n                }else{\r\n                    if((this.state.CountNoticeNoView !== data.CountNoticeNoCheck) || (this.state.CountNotice !== data.CountNotice)) {\r\n                        this.state.Notice = data.result;\r\n                        this.state.CountNotice = data.CountNotice;\r\n                        this.state.CountNoticeNoView = data.CountNoticeNoCheck;\r\n                        console.log('Получили уведомления', this.state.Notice);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения уведомлений', err);\r\n            });\r\n    }\r\n\r\n\r\n    setNoticeServer(type,idNotice){\r\n        var idUsers = this.state.user.id;\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/setNoticeStatus&idUserVK='+idUsers+'&idNotice='+idNotice+'&typeSet='+type+'&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    console.log('Получили уведомления',data);\r\n                }else{\r\n                    this.getNotice(idUsers);\r\n                    console.log('Получили уведомления',data);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения уведомлений', err);\r\n            });\r\n    }\r\n\r\n    parseQueryString = (string) => {\r\n        return string.slice(1).split('&')\r\n            .map((queryParam) => {\r\n                let kvp = queryParam.split('=');\r\n                return {key: kvp[0], value: kvp[1]}\r\n            })\r\n            .reduce((query, kvp) => {\r\n                query[kvp.key] = kvp.value;\r\n                return query\r\n            }, {})\r\n    };\r\n\r\n\r\n    setOkNewOrderView(){\r\n        console.log('Показать окно');\r\n        if(this.state.newOrderStats) {\r\n            this.getCartDB(this.state.user.id,this.state.countReloadBasket);\r\n            this.setState({activeStory: 'newOrderInfo',\r\n                typeOrderDate:true,\r\n                SelectDatePreorder:null,\r\n                SelectTimePreorder:null,\r\n                DopProductUserSet:{}\r\n            });\r\n            this.getUserSystemInfo(this.state.user.id);\r\n        }else{\r\n            console.log('Ну не совсем');\r\n        }\r\n    }\r\n\r\n    setShowUserOrderList(){\r\n        this.setState({activeStory: 'UserOrderList'});\r\n    }\r\n\r\n    setTypeOrderList(as,bs){\r\n        this.setState({\r\n            typeOrderGetText:as,\r\n            typeOrderGet:bs,\r\n            activePanelOrders: 'OrdersListUserType'\r\n        });\r\n    }\r\n\r\n\r\n    getSuccesOrderPage(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56CheckCircleOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.setState({\r\n                             typeOrderGetText:\"Текущие заказы\",\r\n                             typeOrderGet:\"now\",\r\n                             activePanelOrders: 'OrdersListUserType',\r\n                             activeStory: 'UserOrderList'\r\n                         });}}>Узнать статус заказа</Button>}\r\n\r\n            >\r\n                <h2>Ваш заказ принят</h2>\r\n                <p>Мы приняли Ваш заказ и отправили его в производство. Узнать детали заказа Вы можете по ссылке</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    getDeliveryDataPriceItog(){\r\n        if(this.state.minSumOrder < this.state.sumCart){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.minSumFreeDelivery <= this.state.sumCart){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет ',this.state.minSumFreeDelivery+' < '+this.state.sumCart);\r\n    }\r\n\r\n\r\n    getDeliveryDataPriceItogAffiliate(){\r\n        this.setState({\r\n            priceDelivery: 0,\r\n            minSumOrder: 300,\r\n            minSumFreeDelivery: 0\r\n        });\r\n\r\n        if(this.state.sumCart > 300){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.sumCart > 0){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет на самовывоз');\r\n    }\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n\r\n    setcountCartProduct(e,aa = false){\r\n        if(e == 0){e = '';}\r\n        if(aa === false) {\r\n            this.setState({\r\n                countCartProduct: e\r\n            });\r\n        }\r\n\r\n        var sumCartItog = 0;\r\n        this.state.cart.map((CPr)=>{\r\n                sumCartItog += this.getSumCartOnDiscount(CPr);\r\n            }\r\n        );\r\n\r\n        var SumDopsProduct = 0;\r\n        if(Object.keys(this.state.DopProductUserSet).length > 0){\r\n\r\n            Object.keys(this.state.DopProductUserSet).map((id,n)=>{\r\n                    SumDopsProduct += this.state.DopProductUserSet[id].count*(this.state.DopProductUserSet[id].price*1)\r\n            });\r\n        }\r\n\r\n        //console.log(SumDopsProduct);\r\n        this.setState({sumCart:sumCartItog+SumDopsProduct});\r\n\r\n        document.cookie = \"cart = \"+this.state.cart;\r\n    }\r\n\r\n    getSumCartOnDiscount(typeProduct){\r\n        if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n            return (typeProduct.price*typeProduct.count);\r\n        }else{\r\n            return(typeProduct.price_discount.new_price*typeProduct.count);\r\n        }\r\n    }\r\n\r\n    setComment(e){\r\n        this.setState({\r\n            commentary:e\r\n        });\r\n    }\r\n\r\n    setUser(e){\r\n        this.setState({user:e});\r\n    }\r\n\r\n    setUserSystem(e){\r\n        this.setState({userSystemInfo:{error:false,dataUser:e}});\r\n    }\r\n\r\n    getTypeSlideGet(){\r\n        switch(this.state.ParamStart.vk_platform){\r\n            case\"desktop_web\": return \"desktop\";break;\r\n            default: return \"mobile\";\r\n        }\r\n    }\r\n\r\n\r\n    getSlideHeaderArray(){\r\n        if(this.state.ParamStart === false){\r\n\r\n        }else {\r\n            //console.log(this.state.ParamStart);\r\n            axios('https://sushi-time31.ru/api/getSlideHeader&apiKey='+global.ApiKey,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n                    data: {\r\n                        typeSlide: this.getTypeSlideGet(),\r\n                    },\r\n                    responseType: 'text'\r\n                })\r\n                .then(({data}) => {\r\n                    if (\"error\" in data) {\r\n                        this.setSlideArray([], false);\r\n                        console.log(data.error, '|', data.errorInfo);\r\n                    } else {\r\n                        //console.log(data.listSlide);\r\n                        this.setSlideArray(data.listSlide, true);\r\n                    }\r\n                })\r\n                .catch(({err}) => {\r\n                    console.log(\"ERROR: ---Получение слайдов---  \", err);\r\n                });\r\n        }\r\n    }\r\n\r\n    setSlideArray(ArraySlide,status){\r\n        if(status === true) {\r\n            this.setState({slideHeaderArray: ArraySlide});\r\n            if (this.state.StatusLoadSlide === false) {\r\n                this.setState({StatusLoadSlide: true});\r\n            }\r\n        }else{\r\n            if (this.state.StatusLoadSlide === true) {\r\n                this.setState({StatusLoadSlide: false});\r\n            }\r\n        }\r\n    }\r\n\r\n    getSliderGalery(){\r\n        var ArraySlides = Object.keys(this.state.slideHeaderArray);\r\n        var Bullets = \"dark\";\r\n        var AutoPlays = \"7000\";\r\n        var countNumber = ArraySlides.length;\r\n        if(ArraySlides.length <= 1){Bullets = false;AutoPlays = false;}\r\n        if(this.state.StatusLoadSlide === true & ArraySlides.length > 0) {\r\n            var SliderVisual = ArraySlides.map((datas,keys) => {\r\n                //console.log(datas);\r\n                return (<img key={keys} src={this.state.slideHeaderArray[datas].img} style={{maxWidth:\"100%\"}}/>);\r\n            });\r\n\r\n            return (\r\n                <Gallery\r\n                    autoplay={AutoPlays}\r\n                    //slideIndex={this.state.slideIndex}\r\n                    //onEnd={()=>{this.setState({\"slideIndex\":0})}}\r\n                    slideWidth=\"100%\"\r\n                    style={{width:\"100%\",height: \"auto\"}}\r\n                    bullets={Bullets}\r\n                >\r\n                    {SliderVisual}\r\n                </Gallery>\r\n            );\r\n        }else{\r\n            return(\r\n                \"\"\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    reloadSlideHeaderSetTime(){\r\n        this.getSlideHeaderArray();\r\n        setTimeout(this.reloadSlideHeaderSetTime.bind(this),5000);\r\n    }\r\n\r\n\r\n\r\n\r\n    ///////Уведомления PUSH\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n            });\r\n    }\r\n\r\n    setStatusNotification(e){\r\n        this.setState({StatusNotification:e});\r\n    }\r\n\r\n    DeleteNotifi(idNotice){\r\n        // this.Notice[idNotice]\r\n        delete this.state.Notice[idNotice];\r\n        // Object.keys(this.state.Notice).splice(idNotice, 1);\r\n    }\r\n\r\n\r\n    getNotificationPage(){\r\n        return(\r\n            <Notice\r\n                StatusNotification={this.state.StatusNotification}\r\n                PushClick={this.PushClick.bind(this)}\r\n                setState={this.setState.bind(this)}\r\n\r\n                AllNotice={this.state.Notice}\r\n\r\n                setNotice={this.setNoticeServer.bind(this)}\r\n                DeleteNotifi={this.DeleteNotifi.bind(this)}\r\n            />\r\n        );\r\n    }\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n            })\r\n            .catch((err)=> {\r\n                    this.setState({StatusNotification: false});\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    ///////\r\n\r\n    componentDidMount() {\r\n        this.getCityUser();\r\n        this.getStatusNotificate();\r\n        async function fetchData(setUser,getCartDB,getUserSystemInfo,getNotice,countReloadBasket) {\r\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            setUser(user);\r\n            //setPopout(null);\r\n            //setModal(MODAL_CARD_MONEY_SEND);\r\n            //console.log('...','Получили данные пользователя',user.id);\r\n            getCartDB(user.id,countReloadBasket);\r\n            getNotice(user.id);\r\n            getUserSystemInfo(user.id);\r\n        }\r\n\r\n        axios({\r\n            method:'get',\r\n            // url:'https://sushi-time31.ru/test.json',\r\n            // url:'https://sushi-time31.ru/test2.json',\r\n            url:'https://sushi-time31.ru/api/Catalog&apiKey='+global.ApiKey+'&idCategoryKeyArray=true&idProductKeyArray=true',\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data.list);\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                products: data.list,\r\n                loadingCatalog:true\r\n            });\r\n        })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n\r\n        fetchData(this.setUser.bind(this),this.getCartDB.bind(this),this.getUserSystemInfo.bind(this),this.getNotice.bind(this),this.state.countReloadBasket);\r\n        this.reloadSlideHeaderSetTime();\r\n            setInterval(function() {this.getIntervalCart(1)}.bind(this), 3000);\r\n            setInterval(function() {this.getNotice(this.state.user.id)}.bind(this), 3000);\r\n            this.setHashDataReload(this);\r\n    }\r\n\r\n    getIntervalCart(i){\r\n        this.getCartDB(this.state.user.id,this.state.countReloadBasket);\r\n        // console.log('Запустили получение корзины '+i);\r\n        i++;\r\n        // setTimeout(function() {this.getIntervalCart(i)}.bind(this), 3000);\r\n    }\r\n\r\n    StatusReloadBasketData(dataOld,dataNew){\r\n        if(dataOld === dataNew){return false;}else{return true;}\r\n    }\r\n\r\n\r\n    ReloadBasketDataFN(ListProduct){\r\n       // console.log('Обновили корзину');\r\n        this.setState({\r\n            // products: data.list[0].ProductList\r\n            cart: ListProduct,\r\n            loadingPage: false\r\n        });\r\n        this.setCountCartVisal();\r\n    }\r\n\r\n\r\n    ReloadBasketDataDopPresets(ListDopPresets){\r\n        if(ListDopPresets !== false){\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: ListDopPresets.listPresetProduct,\r\n                imgListPresets: ListDopPresets.imgPresetProduct\r\n            });\r\n        }else{\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: [],\r\n                imgListPresets: false\r\n            });\r\n        }\r\n    }\r\n\r\n    getCartDB(id_user,countReloadBasket = 0){\r\n\r\n        if(countReloadBasket>0){\r\n           // console.log('Ну вроде как работает, но нет');\r\n        }else {\r\n            if (this.state.loading === false) {\r\n                this.setState({loading: true});\r\n                var ia = this.state.countReloadBasket+1;\r\n                this.setState({countReloadBasket:ia});\r\n               // console.log('АХАХАХ блять ',ia);\r\n            }\r\n\r\n        }\r\n\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getBasketVK&apiKey='+global.ApiKey+'&updateBasket=1minute&id_user_vk='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n                data.listProduct = [];\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }\r\n\r\n            if(data.listProduct === null){\r\n                data.listProduct = [];\r\n            }\r\n\r\n            var ListOld = JSON.stringify(this.state.cart);\r\n            var ListNew = JSON.stringify(data.listProduct);\r\n            var ListPresetsOld = JSON.stringify(this.state.dopPresets);\r\n\r\n            var ListPresetsNew = JSON.stringify(data.DopPresetsData);\r\n            if(ListPresetsNew == 'false'){\r\n                ListPresetsNew = '[]';\r\n            }else{\r\n                ListPresetsNew = JSON.stringify(data.DopPresetsData.listPresetProduct)\r\n            }\r\n\r\n            var statusBasket = this.StatusReloadBasketData(ListOld,ListNew);\r\n            var statusPresets = this.StatusReloadBasketData(ListPresetsOld,ListPresetsNew);\r\n\r\n            if(statusBasket === true) {\r\n                this.ReloadBasketDataFN(data.listProduct);\r\n                this.PlayInfoAudio('ReloadBasket');\r\n            }\r\n\r\n            if(\"DopProductList\" in data) {\r\n                var ListDopOld = JSON.stringify(this.state.DopProductList);\r\n                var ListDopNew = JSON.stringify(data.DopProductList);\r\n\r\n                var statusDopProduct = this.StatusReloadBasketData(ListDopOld,ListDopNew);\r\n\r\n                if(statusDopProduct === true) {\r\n                    this.setState({\"DopProductList\": data.DopProductList});\r\n                    //console.log(ListDopOld,ListDopNew,'|||||',data.DopProductList);\r\n                }else{\r\n                   // console.log(ListDopOld,ListDopNew,'|||||',data.DopProductList);\r\n                }\r\n            }\r\n\r\n            if(statusPresets === true || ListPresetsNew ===false) {\r\n                this.ReloadBasketDataDopPresets(data.DopPresetsData);\r\n                //console.log('АХАХАХ блять ',ListPresetsNew,' -|-|-|- ',ListPresetsOld);\r\n            }\r\n\r\n\r\n\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n    }\r\n\r\n    PlayInfoAudio(a){\r\n            if (this.audio) {\r\n                // this.audio.pause();\r\n                this.audio.stop();\r\n            }\r\n            switch (a) {\r\n                case\"ReloadBasket\":\r\n                   // this.audio = this.state.AudioInfo.ReloadBasket;\r\n                    this.state.AudioInfo.ReloadBasket.play();\r\n                    //alert('Запуск звука');\r\n                    break;\r\n            }\r\n    }\r\n\r\n\r\n    getUserSystemInfo(id_user){\r\n        this.setState({loading: true});\r\n\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/Users&apiKey='+global.ApiKey+'&updateUserSystemInfo=one&idUserVK='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }else{\r\n                this.setUserSystem(data.list[0]);\r\n            }\r\n\r\n            this.setState({\r\n                loadingPage: false\r\n            });\r\n            //console.log(\"userSystemInfo\",this.state.userSystemInfo);\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n        //setUserSystem(e);\r\n    }\r\n\r\n\r\n    setCartServer(id_user,JsonBasket){\r\n        //console.log(JsonBasket,'___А_А_АА_А_А_А_');\r\n        axios('https://sushi-time31.ru/api/setBasketVK&apiKey='+global.ApiKey+'&id_user_vk='+id_user,\r\n            {\r\n            method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            data: {\r\n                basketJson: JsonBasket,\r\n            },\r\n            responseType:'text'\r\n        })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Отправка корзины---  \",err);\r\n            });\r\n    }\r\n\r\n    setCart(e,tE = '+'){\r\n        //console.log('Товар в корзине, вот этот ',e);\r\n        //this.setState({cart:e});\r\n        const counts = this.state.cart.length;\r\n        if(tE == '+'){\r\n            //Добавляем товар\r\n            if(counts<=0) {\r\n               // console.log('Добавляем Новый товар в корзину');\r\n                this.state.cart.push(e);\r\n                const countPlus = counts;\r\n                this.state.cart[countPlus].count = 1;\r\n                this.setcountCartProduct(1);\r\n            }else{\r\n               // console.log('В принципи верно, но цикл не тот', counts);\r\n                var noAdd = true;\r\n\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Добавляем еще такой же товар');\r\n                        this.state.cart[key].count = this.state.cart[key].count + 1;\r\n                        setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                        noAdd =false;\r\n                    }\r\n                    }\r\n                );\r\n\r\n                if(noAdd === true){\r\n                   // console.log('Добавляем новый товар, так как тагого же нет');\r\n                    this.state.cart.push(e);\r\n                    const countPlus = counts;\r\n                    this.state.cart[countPlus].count = 1;\r\n                    setcountCartProductVar++;\r\n                }\r\n\r\n            }\r\n        }else{\r\n            //Удаляем товар\r\n            if(counts<=0) {\r\n\r\n            }else{\r\n                var noAdd = true;\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Удаляем товар 1 товар с этим id и типом');\r\n                        if( this.state.cart[key].count<=1){\r\n                            // delete this.state.cart[key];\r\n                            this.state.cart.splice(key, 1);\r\n                        }else{\r\n                            this.state.cart[key].count = this.state.cart[key].count - 1;\r\n                            setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                            noAdd =false;\r\n                        }\r\n                    }\r\n                    }\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n        {setcountCartProductVar = setcountCartProductVar+CPr.count}\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n        var setDataServer = btoa(encodeURI(JSON.stringify(this.state.cart)));\r\n       // console.log('Вот это отправляем на сервер',setDataServer);\r\n        this.setCartServer(this.state.user.id,setDataServer);\r\n    }\r\n\r\n    setDopProduct(id,type = '+',price){\r\n        const counts = this.state.DopProductUserSet.length;\r\n        switch(type){\r\n            case \"+\":\r\n                if(counts<=0){\r\n                    this.state.DopProductUserSet[id] = {\"count\":1,\"price\":price};\r\n                }else{\r\n                    if(id in this.state.DopProductUserSet) {\r\n                        this.state.DopProductUserSet[id].count++;\r\n                    }else{\r\n                        this.state.DopProductUserSet[id] = {\"count\":1,\"price\":price};\r\n                    }\r\n                }\r\n                break;\r\n            case \"-\":\r\n                if(counts<=0){\r\n\r\n                }else{\r\n                    if(id in this.state.DopProductUserSet) {\r\n                        if(this.state.DopProductUserSet[id].count == 1){\r\n                            //this.state.DopProductUserSet.splice(id, 1);\r\n                            delete this.state.DopProductUserSet[id];\r\n                        }else{\r\n                            this.state.DopProductUserSet[id].count--;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        console.log(this.state.DopProductUserSet);\r\n\r\n        this.setcountCartProduct(0,true);\r\n\r\n        if(!(id in this.state.DopProductUserSet) || this.state.DopProductUserSet[id].count <=0){\r\n            this.setState({\"LoadDopProduct\":false});\r\n            return 0;\r\n        }else{\r\n            this.setState({\"LoadDopProduct\":false});\r\n            return this.state.DopProductUserSet[id].count;\r\n        }\r\n\r\n\r\n        //this.setState({\"DopProductUserSet\":a});\r\n    }\r\n\r\n\r\n    setCountCartVisal(){\r\n       // this.getCartDB(this.state.user.id);\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n            {setcountCartProductVar = setcountCartProductVar+CPr.count;\r\n            }\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n    }\r\n\r\n    setTypeDilivery(e){\r\n        this.setState({checkedTypeDilivery:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setTypeOrderDate(e){\r\n        this.setState({typeOrderDate:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setAddressDefault(e){\r\n        if(e === 'del'){\r\n            e = 0;\r\n        }\r\n        this.setState({addressDefault:e});\r\n        //console.log('По дефолту адрес теперь ',e);\r\n        //Обновляем условия доставки на 3  шаг корзины\r\n    }\r\n\r\n    setAffiliateDefault(e){\r\n        this.state.AffiliateDefault = e;\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setModal(e){\r\n        this.setState({activeModal:e});\r\n    }\r\n\r\n    setOrderShowNumber(a){\r\n        this.setState({numberOrderShow:a,\r\n            activePanelOrders:'OrderShowDetails'});\r\n    }\r\n\r\n    listOrderUserSet(a){\r\n       // console.log(a,'Ну блин');\r\n        this.setState({listOrderUser:a});\r\n    }\r\n\r\n    setHashDataReload(){\r\n\r\n      const HashParam =  this.parseQueryString(window.location.hash);\r\n\r\n        var height=window.screen.height;\r\n        var newHeight = height*0.7;\r\n        //console.log('Какого хрена',newHeight);\r\n\r\n        connect.send(\"VKWebAppResizeWindow\", {\"height\": newHeight});\r\n\r\n        if('noticePageReload' in HashParam){\r\n            this.state.loadingCatalog = false;\r\n            this.setHashNew('notifications');\r\n        }\r\n    }\r\n\r\n\r\n    setHashNew(a){\r\n        setTimeout(function() {\r\n            //console.log('Устанавливаем нулевой ХЕШ');\r\n            this.setState({activeStory:a});\r\n            connect.send(\"VKWebAppSetLocation\", {\"location\": \"notice\"});\r\n            this.setState({loadingCatalog:true});\r\n        }.bind(this), 1000);\r\n    }\r\n\r\n    render () {\r\n        const queryParams = this.parseQueryString(window.location.search);\r\n        const hashParams = this.parseQueryString(window.location.hash);\r\n\r\n        //this.setHashDataReload(hashParams);\r\n        //console.log(hashParams);\r\n        // console.log(noticePage);\r\n\r\n        if(this.state.ParamStart === false) {\r\n            //console.log(\"State = false, но \", queryParams);\r\n        }\r\n\r\n        if(this.state.ParamStart === false) {\r\n            this.state.ParamStart = queryParams;\r\n        }\r\n\r\n        // this.setState({\"ParamStart\":this.parseQueryString(window.location.search)});\r\n        // console.log('Параметры запуска ',this.state.ParamStart,' А URL такой ',window.location.search);\r\n\r\n        const modal = (\r\n            <ModalRoot activeModal={this.state.activeModal}>\r\n                <ModalPage\r\n                    id=\"MODAL_NEWADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Добавить адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Добавление адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formNewAddressData}\r\n                </ModalPage>\r\n\r\n                <ModalPage\r\n                    id=\"MODAL_EditADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Редактировать адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Редактирование адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formEditAddressData}\r\n                </ModalPage>\r\n            </ModalRoot>\r\n        );\r\n\r\n        const osname = platform();\r\n\r\n        if(this.state.CountNoticeNoView === 0 || this.state.CountNoticeNoView === null){\r\n            var countNoticeView = '';\r\n        }else{\r\n            var countNoticeView = this.state.CountNoticeNoView;\r\n        }\r\n\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'catalog'}\r\n                        data-story=\"catalog\"\r\n                        text=\"Каталог\"\r\n                    ><Icon24Note /></TabbarItem>\r\n                    <TabbarItem style={{\"display\":\"none\"}}\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'discover'}\r\n                        data-story=\"discover\"\r\n                        text=\"Поиск\"\r\n                    ><Icon28Search /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'cart'}\r\n                        data-story=\"cart\"\r\n                        label={this.state.countCartProduct}\r\n                        text=\"Корзина\"\r\n                    ><Icon28MarketOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'notifications'}\r\n                        data-story=\"notifications\"\r\n                        label={countNoticeView}\r\n                        text=\"Уведомления\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'user'}\r\n                        data-story=\"user\"\r\n                        text=\"Профиль\"\r\n                    ><Icon28User /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"newOrderInfo\" activePanel=\"newOrders\" header={false}>\r\n                    <Panel id=\"newOrders\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {this.getSuccesOrderPage()}\r\n                    </Panel>\r\n                </View>\r\n\r\n\r\n                <View id=\"UserOrderList\" activePanel={this.state.activePanelOrders} >\r\n                    <Panel id=\"ListTypeOrder\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                        >\r\n                            Мои заказы\r\n                        </PanelHeader>\r\n                        <UserOrderList\r\n                            userData={this.state.user}\r\n                            setTypeOrderList={this.setTypeOrderList.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                    <Panel id=\"OrdersListUserType\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<HeaderButton onClick={() => this.setState({activePanelOrders: 'ListTypeOrder'})}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => this.setState({activePanelOrders: 'ListTypeOrder'})}>Назад</HeaderButton>}\r\n                        >\r\n                            {this.state.typeOrderGetText}\r\n                        </PanelHeader>\r\n                        <OrderTypeList\r\n                            userData={this.state.user}\r\n                            typeOrderGet={this.state.typeOrderGet}\r\n                            setOrderShowNumber={this.setOrderShowNumber.bind(this)}\r\n                            listOrderUserSet={this.listOrderUserSet.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                    <Panel id=\"OrderShowDetails\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<HeaderButton onClick={() => this.setState({activePanelOrders: 'OrdersListUserType'})}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => this.setState({activePanelOrders: 'OrdersListUserType'})}>Назад</HeaderButton>}\r\n                        >\r\n                            {\"Заказ №\"+ this.state.numberOrderShow}\r\n                        </PanelHeader>\r\n                        <OrderShowDeail\r\n                            idOrderDetail={this.state.numberOrderShow}\r\n                            OrderDatas={this.state.listOrderUser[this.state.numberOrderShow]}\r\n                            userData={this.state.user}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n\r\n\r\n\r\n                <View id=\"catalog\" activePanel=\"catalog\" header={false}>\r\n                    <Panel id=\"catalog\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {\r\n                            this.state.loadingCatalog\r\n                                ?\r\n                                <CatalogProduct setCart={this.setCart.bind(this)} CartProducts={this.state.cart} ProductsLists={this.state.products} sliderHeader={this.getSliderGalery.bind(this)} queryParams={queryParams}/>\r\n                                :\r\n                                <ScreenSpinner />\r\n                        }\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"discover\" activePanel=\"discover\">\r\n                    <Panel id=\"discover\">\r\n                        <PanelHeader>Поиск товаров</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"cart\" activePanel=\"cart\" modal={modal}>\r\n                    <Panel id=\"cart\" style={{\"paddingBottom\":\"40px\"}}>\r\n                        <PanelHeader theme=\"light\"\r\n                                     noShadow={false}\r\n                        >\r\n                            Корзина\r\n                        </PanelHeader>\r\n                        <div key=\"Cart_List\" style={{\"paddingBottom\":\"40px\"}}>\r\n                            {/*this.getCartVisual(this.state.cart,this.setCart.bind(this))*/}\r\n                            <GetCartHome\r\n                                ProductList={this.state.cart}\r\n                                DopProductList={this.state.DopProductList}\r\n                                DopProductUserSet={this.state.DopProductUserSet}\r\n                                setDopProduct={this.setDopProduct.bind(this)}\r\n                                LoadDopProduct={this.state.LoadDopProduct}\r\n                                PresetsDopProductList={\r\n                                    {\r\n                                    \"list\": this.state.dopPresets,\r\n                                    \"img\": this.state.imgListPresets\r\n                                    }\r\n                                }\r\n\r\n                                setCart={this.setCart.bind(this)}\r\n                                userSystemInfo={this.state.userSystemInfo}\r\n                                userInfo={this.state.user}\r\n                                getUserSystemInfo={this.getUserSystemInfo.bind(this)}\r\n\r\n                                addressDefault={this.state.addressDefault}\r\n                                setAddressDefault={this.setAddressDefault.bind(this)}\r\n\r\n                                AffiliateDefault={this.state.AffiliateDefault}\r\n                                setAffiliateDefault={this.setAffiliateDefault.bind(this)}\r\n\r\n                                checkedTypeDilivery={this.state.checkedTypeDilivery}\r\n                                setTypeDilivery={this.setTypeDilivery.bind(this)}\r\n\r\n                                commentary={this.state.commentary}\r\n                                setComment={this.setComment.bind(this)}\r\n\r\n                                countPerson={this.state.countPerson}\r\n\r\n                                SalePoints={this.state.SalePoints}\r\n\r\n                                setStates={this.setState.bind(this)}\r\n                                setDeliveryDataItogs={this.getDeliveryDataPriceItog.bind(this)}\r\n                                getDeliveryDataPriceItogAffiliate={this.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                                sumCart={this.state.sumCart}\r\n\r\n                                showModal={this.setModal.bind(this)}\r\n                                hideModals={this.setModal.bind(this,null)}\r\n\r\n                                DataDeliveryInfoPay={\r\n                                    {\r\n                                        typeOrderDate:this.state.typeOrderDate,\r\n                                        setTypeOrderDate:this.setTypeOrderDate.bind(this),\r\n\r\n                                        SelectDatePreorder:this.state.SelectDatePreorder,\r\n                                        SelectTimePreorder:this.state.SelectTimePreorder,\r\n\r\n                                        priceDelivery:this.state.priceDelivery,\r\n                                        minSumOrder:this.state.minSumOrder,\r\n                                        minSumFreeDelivery:this.state.minSumFreeDelivery,\r\n\r\n                                        //Если сумма корзины меньше необходимой для заказа\r\n                                        errorOrderFinal:this.state.errorOrderFinal,\r\n                                        //Если сумма корзины меньше бесплатной доставки\r\n                                        DeliveryPriceItog:this.state.DeliveryPriceItog,\r\n\r\n                                        //Доставка на адрес возможна, сли false, то не возможна\r\n                                        DeliveryAddressOKCity:this.state.DeliveryAddressOKCity,\r\n\r\n                                        addressOrderInfoUser:this.state.addressOrderInfoUser,\r\n\r\n                                        checkedTypeDilivery:this.state.checkedTypeDilivery,\r\n                                        AffiliateDefault:this.state.AffiliateDefault,\r\n                                        addressDefault:this.state.addressDefault,\r\n\r\n                                        listAddressGlobal:this.state.listAddressGlobal,\r\n                                        listAffiliateGlobal: this.state.listAffiliateGlobal,\r\n\r\n                                        comments:this.state.commentary,\r\n                                        typePay:this.state.typePay,\r\n                                        countPerson:this.state.countPerson,\r\n                                        cart:this.state.cart,\r\n                                        DopProductUserSet:this.state.DopProductUserSet\r\n\r\n                                    }\r\n                                }\r\n\r\n                                setOkNewOrderView={this.setOkNewOrderView.bind(this)}\r\n\r\n                            />\r\n\r\n                        <div style={{\"clear\":\"both\"}}></div>\r\n                        </div>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Уведомления</PanelHeader>\r\n                        {this.getNotificationPage()}\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"user\" activePanel=\"user\">\r\n                    <Panel id=\"user\">\r\n                        <PanelHeader>Профиль</PanelHeader>\r\n                        <AppHome\r\n                            id=\"home\"\r\n                            go=\"persik\"\r\n                            dataUsers={this.state.userSystemInfo}\r\n                            setStatusNotification={this.setStatusNotification.bind(this)}\r\n                            setShowUserOrderList={this.setShowUserOrderList.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell, CellButton} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24DoNotDisturb from '@vkontakte/icons/dist/24/do_not_disturb';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\n\r\n\r\nclass UserOrderList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadOrders:false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getAllGroups(){\r\n        return(\r\n            <Group>\r\n                <CellButton\r\n                before={<Icon24Recent /> }\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Текущие заказы\",\"now\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Текущие заказы</span>\r\n                </CellButton>\r\n                <CellButton\r\n                before={<Icon24DoneOutline />}\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Завершенные заказы\",\"old\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Завершенные заказы</span>\r\n                </CellButton>\r\n                <CellButton\r\n                before={<Icon24Cancel />}\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Отмененные заказы\",\"cancel\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Отмененные заказы</span>\r\n                </CellButton>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            this.state.loadOrders\r\n                ?\r\n                <ScreenSpinner />\r\n                :\r\n                this.getAllGroups()\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default UserOrderList;","import React from 'react';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\n\r\n\r\nclass OrderTypeList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listOrderUser:[],\r\n            loadOrders:true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getOrderUserSystem();\r\n    }\r\n\r\n    getOrderUserSystem(){\r\n        this.setState({loadOrders:true});\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getOrdersUserVK&apiKey='+global.ApiKey+'&idUserVK='+this.props.userData.id,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    this.setState({countOrder:0});\r\n                }else{\r\n                    //console.log('Данные по заказам пользователя',data);\r\n                    this.setState({listOrderUser:data.list});\r\n                    this.props.listOrderUserSet(data.list);\r\n                }\r\n                this.setState({loadOrders:false});\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения заказов',err);\r\n            });\r\n    }\r\n\r\n\r\n    ReverceList(Pr){\r\n        var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n            // console.log(last, index);\r\n            return (arr = arr.concat(last))\r\n        }, []);\r\n        return res;\r\n    }\r\n\r\n    getOrderType(type = 'now'){\r\n        var typeNumber = 0;\r\n        var iconsD ='';\r\n        switch(type){\r\n            case 'now': typeNumber = 0; iconsD = <Icon24Recent /> ;break;\r\n            case 'cancel': typeNumber = 3;  iconsD = <Icon24Dismiss /> ;break;\r\n            case 'old': typeNumber = 1;  iconsD = <Icon24DoneOutline /> ;break;\r\n            default:typeNumber =0;\r\n        }\r\n\r\n        //console.log(this.state.listOrderUser)\r\n\r\n        var countOrders = 0;\r\n\r\n        const ListOrder = this.ReverceList(this.state.listOrderUser).map((dataOrder,keyOrder)=>{\r\n            //console.log('Заказ '+dataOrder,'');\r\n            var CurrentOrder = this.state.listOrderUser[dataOrder];\r\n\r\n            var statusY = false;\r\n\r\n\r\n            if(typeNumber === 1){\r\n                if(CurrentOrder.status_order == typeNumber || CurrentOrder.status_order == 6){\r\n                    statusY = true;\r\n                }else{\r\n                    statusY = false;\r\n                }\r\n            }else{\r\n                if(CurrentOrder.status_order == typeNumber){\r\n                    statusY = true;\r\n                }else{\r\n                    statusY = false;\r\n                }\r\n            }\r\n\r\n\r\n            if(CurrentOrder.delete_order == '1'){\r\n                statusY = false;\r\n            }\r\n\r\n            if(statusY === true){\r\n                countOrders++;\r\n                //console.log('Заказ '+dataOrder,' Отмененн');\r\n                var summaOrders = <span>Сумма: <b>{CurrentOrder.sum_order}₽</b></span>;\r\n\r\n                return (\r\n                    <Cell key={\"Orders_\"+dataOrder}\r\n                          before={iconsD}\r\n                          description={<span>{CurrentOrder.date} <i>{CurrentOrder.time}</i> | {summaOrders}</span>}\r\n                          onClick={this.props.setOrderShowNumber.bind(this,CurrentOrder.id_order)}\r\n                    >\r\n                        <b>Заказ №{CurrentOrder.id_order}</b> <span style={{fontSize:\"0.8em\",marginLeft:\"2%\",color:\"#6a97fb\"}}> Подробнее...</span>\r\n                    </Cell>\r\n                );\r\n            }else{\r\n                //console.log('Заказ '+dataOrder,'');\r\n            }\r\n\r\n        });\r\n\r\n        if(countOrders <=0){\r\n            return (\r\n                <Cell key={\"Orders_None\"}\r\n                >\r\n                    Заказы отсутсвуют\r\n                </Cell>\r\n            );\r\n        }\r\n\r\n        return ListOrder;\r\n\r\n    }\r\n\r\n\r\n    getNowOrder(){\r\n        return(\r\n            <Group key=\"ListOrderNow\"\r\n                   title=\"Текущие заказы\"\r\n            >\r\n                {this.getOrderType('now')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    getOldOrder(){\r\n        return(\r\n            <Group key=\"ListOrderOld\"\r\n                   title=\"Завершенные заказы\"\r\n            >\r\n                {this.getOrderType('old')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCancelledOrder(){\r\n        return(\r\n            <Group key=\"ListOrderCancel\"\r\n                   title=\"Отмененные заказы\"\r\n            >\r\n                {this.getOrderType('cancel')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    getOneTypeOrders(){\r\n        var results = '';\r\n        switch(this.props.typeOrderGet){\r\n            case\"now\": results = this.getNowOrder();break;\r\n            case\"old\": results = this.getOldOrder();break;\r\n            case\"cancel\": results = this.getCancelledOrder();break;\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    getAllGroups(){\r\n        return(\r\n            this.getOneTypeOrders()\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(<div> {\r\n                this.state.loadOrders\r\n                    ?\r\n                    <ScreenSpinner/>\r\n                    :\r\n                    this.getAllGroups()\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderTypeList;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell, Div, Counter, Button} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\n\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\r\nimport Icon24MoneyTransfer from '@vkontakte/icons/dist/24/money_transfer';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24User from '@vkontakte/icons/dist/24/user';\r\n\r\nclass OrderShowDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //console.log('Заказ показать этот: ',this.props.OrderDatas);\r\n    }\r\n\r\n    getStatusOrderText(a){\r\n        var ststusReturn = \"Выполнен\";\r\n\r\n        switch(a){\r\n            case\"0\": ststusReturn = \"Принят\"; break;\r\n            case\"1\": ststusReturn = \"Выполнен\"; break;\r\n            case\"3\": ststusReturn = \"Отменен\"; break;\r\n            case\"6\": ststusReturn = \"Принят\"; break;\r\n        }\r\n        return ststusReturn;\r\n    }\r\n\r\n    getStatusOrderReal(statusOld,statusReal){\r\n        if(statusReal === null){\r\n           // console.log('Нет данных');\r\n            return statusOld;\r\n        }else{\r\n            return statusReal.status;\r\n        }\r\n    }\r\n\r\n    getStatusIconText(a){\r\n        var iconsD = '';\r\n\r\n        var ststusReturns = <Icon24Error />;\r\n\r\n        switch(a){\r\n            case\"0\": iconsD = <Icon24Recent /> ;break;\r\n            case\"1\": iconsD = <Icon24DoneOutline /> ;break;\r\n            case\"3\": iconsD = <Icon24Dismiss /> ;break;\r\n            case\"6\": iconsD = <Icon24Recent /> ;break;\r\n        }\r\n        return ststusReturns;\r\n    }\r\n\r\n\r\n    getInfoPreorderBlock(Order){\r\n        if(Order.pre_order.status === 'none'){\r\n            return \"\";\r\n        }else{\r\n            return (\r\n                <Group title=\"Совершен по предзаказу на дату\">\r\n                    <Cell\r\n                        before={<Icon24Recent />}\r\n                    >\r\n                        {Order.pre_order.date_pre_order}\r\n                    </Cell>\r\n                </Group>\r\n            );\r\n        }\r\n    }\r\n\r\n    escapeHtml(text,type) {\r\n        switch(type){\r\n            case\"decode\":\r\n                var map = {\r\n                    '&amp;': '&',\r\n                    '&lt;': '<',\r\n                    '&gt;': '>',\r\n                    '&quot;': '\"',\r\n                    \"&#039;\": \"'\"\r\n                };\r\n                break;\r\n            case\"encode\":\r\n                var map = {\r\n                    '&': '&amp;',\r\n                    '<': '&lt;',\r\n                    '>': '&gt;',\r\n                    '\"': '&quot;',\r\n                    \"'\": '&#039;'\r\n                };\r\n                break;\r\n        }\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n    escapeHtmlDecode(text) {\r\n        return text\r\n            .replace(/&amp;/g, \"&\")\r\n            .replace(/&lt;/g, \"<\")\r\n            .replace(/&gt;/g, \">\")\r\n            .replace(/&quot;/g, \"\\\"\")\r\n            .replace(/&#039;/g, \"'\");\r\n    }\r\n\r\n\r\n    getOrderComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (<Group title=\"Состав заказа\">\r\n                <Div>Данные отсутствуют</Div></Group>);\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            if(data.sale_price != data.product_price){\r\n                var Price_sales = <span><s>{data.product_price} ₽</s> <b>{data.sale_price} ₽</b> </span>;\r\n            }else{\r\n                var Price_sales = <span><b>{data.sale_price} ₽</b> </span>;\r\n            }\r\n\r\n            if(data.discount_amount != '0'){\r\n                var Discount = <b>Скидка: {data.discount_amount} ₽</b>\r\n            }else{\r\n                var Discount = '';\r\n            }\r\n\r\n            return (\r\n                <Cell key={\"Product_cell_\"+key}\r\n                    description={<span key={\"prices_product_\"+key}>{Price_sales} - {data.count} шт. <i>{Discount}</i></span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"product_title_\"+key}>{this.escapeHtmlDecode(data.product_title)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n        return (<Group title=\"Состав заказа\">\r\n            {ListProduct}</Group>);\r\n    }\r\n\r\n\r\n    getOrderDopComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            var Price_sales = <span><b>{data.price_product} ₽</b> </span>;\r\n\r\n\r\n            return (\r\n                <Cell key={\"Dop_Product_cell_\"+key}\r\n                    description={<span key={\"prices_dop_product_\"+key}>{Price_sales} - {data.count} шт.</span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"dop_product_title_\"+key}>{this.escapeHtmlDecode(data.title_product)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n\r\n        if(ListProduct == '' || ListProduct=== null){\r\n            return (\"\");\r\n        }\r\n\r\n        return (<Group title=\"Приправы и соусы\">\r\n            {ListProduct}\r\n        </Group>);\r\n    }\r\n\r\n\r\n    getOrderGiftComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            var Price_sales = <span><b>{data.price_product} ₽</b> </span>;\r\n\r\n\r\n            return (\r\n                <Cell key={\"Gift_Product_cell_\"+key}\r\n                    description={<span key={\"prices_Gift_product_\"+key}>{Price_sales} - {data.count} шт.</span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"Gift_product_title_\"+key}>{this.escapeHtmlDecode(data.title_gift_product)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n\r\n        if(ListProduct == '' || ListProduct=== null){\r\n            return (\"\");\r\n        }\r\n\r\n        return (<Group title=\"Подарки\">\r\n            {ListProduct}\r\n        </Group>);\r\n    }\r\n\r\n\r\n    getOrderDeliveryInfo(Order){\r\n\r\n        if(Order.dilivery.dilivery_type == 'Доставка'){\r\n            var Address = Order.dilivery.dilivery_adres;\r\n            var PriceDeli = Order.dilivery.dilivery_price;\r\n            var TextDel = 'Доставка';\r\n        }else{\r\n            var Address = Order.affiliate.affiliate_info;\r\n            var PriceDeli = \" 0 \";\r\n            var TextDel = 'Самовывоз';\r\n        }\r\n\r\n            return (<Group title=\"Получение заказа\">\r\n                <Cell key={\"Deliv_cell\"}\r\n                    description={Address}\r\n                    indicator={<Counter>&nbsp; {PriceDeli} ₽ &nbsp;</Counter>}\r\n                >\r\n                    {TextDel}\r\n                </Cell>\r\n                </Group>\r\n            )\r\n    }\r\n\r\n    getInfoPromokod(Order){\r\n        if(Order.promo_status == 'active'){\r\n            var PromoInfo = <Group title=\"Промокод\">\r\n                <Div><b>{Order.promo_code}</b> {Order.promo_info.title}</Div>\r\n            </Group>\r\n        }else{\r\n            var PromoInfo = '';\r\n        }\r\n\r\n        return PromoInfo;\r\n    }\r\n\r\n    getInfoPointsOrder(Order){\r\n            var Points = <div>\r\n                <Cell before={<Icon24Coins/>} >Списано Таймов: {Order.point_out}</Cell>\r\n                <Cell  before={<Icon24Coins/>} >Начислено Таймов: {Order.point_in}</Cell>\r\n            </div>;\r\n\r\n        return Points;\r\n    }\r\n\r\n    getComment(Order) {\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n            Order = 'Отсутствует';\r\n        }\r\n\r\n        return (\r\n            <Group title=\"Комментарий\">\r\n                <Div>{Order}</Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getRepeatOrder(OrderId){\r\n        //console.log(OrderId);\r\n        return (\r\n            <Group style={{textAlign:\"center\",padding:\"10px 0\"}}>\r\n                <Button onClick={()=>{\r\n                    this.setRepeatOrder(OrderId.id_order)\r\n                }}>Повторить</Button>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    setRepeatOrder(OrderId){\r\n        //console.log('Повторяем заказ');\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/setRepeatOrder&apiKey='+global.ApiKey+'&idUserVK='+this.props.userData.id+'&OrderIdRepeat='+OrderId,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    console.log(data);\r\n                    alert(data.errorInfo);\r\n                }else{\r\n                   console.log('Повторение заказа инфа: ',data);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка повторения заказа',err);\r\n            });\r\n    }\r\n\r\n    getPerson(Order) {\r\n\r\n        if(Order == '' || Order === null){\r\n            Order = '1';\r\n        }\r\n\r\n        // return (\r\n        //     <Group title=\"Кол-во приборов\">\r\n        //         <Div>{Order}</Div>\r\n        //     </Group>\r\n        // );\r\n\r\n        return (\r\n            <Cell\r\n                before={<Icon24User />}\r\n            >\r\n                Приборы: {Order}\r\n            </Cell>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        const Order = this.props.OrderDatas;\r\n        const StatusIcon = this.getStatusIconText(Order.status_order);\r\n        const detailText = <span>Детали заказа</span>;\r\n\r\n        return(\r\n            <div key=\"InfoOrderBlock\" >\r\n                <Group\r\n                    title={detailText}\r\n                >\r\n                    <Cell\r\n                        before={StatusIcon}\r\n                    >\r\n                        {this.getStatusOrderReal(this.getStatusOrderText(Order.status_order),Order.status_order_real)}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24Recent />}\r\n                    >\r\n                        {Order.date} {Order.time}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24MoneyTransfer />}\r\n                    >\r\n                        {Order.payment.type_pay}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24MoneyCircle />}\r\n                    >\r\n                        {Order.sum_order} ₽\r\n                    </Cell>\r\n                    {this.getPerson(Order.person)}\r\n                    {this.getInfoPointsOrder(Order)}\r\n                </Group>\r\n                    {this.getInfoPreorderBlock(Order)}\r\n                {this.getInfoPromokod(Order.promo)}\r\n                {this.getOrderComposition(Order.productList)}\r\n                {this.getOrderDopComposition(Order.dopProductList)}\r\n                {this.getOrderGiftComposition(Order.giftProductList)}\r\n                {this.getOrderDeliveryInfo(Order)}\r\n                {this.getComment(Order.Comment)}\r\n                {this.getRepeatOrder(Order)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderShowDetail;","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder, Cell } from '@vkontakte/vkui';\r\n\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\n\r\nimport Icon56NotificationOutline from '@vkontakte/icons/dist/56/notification_outline';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass Notice extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n    NoteNotice(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56NotificationOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.setState({activeStory: 'catalog'});}}>В каталог</Button>}\r\n\r\n            >\r\n                <h2>Уведомлений нет</h2>\r\n                <p>Как только для Вас появятся уведомления, они отобразятся здесь!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    ReverceList(Pr){\r\n        var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n            // console.log(last, index);\r\n            return (arr = arr.concat(last))\r\n        }, []);\r\n        return res;\r\n    }\r\n\r\n\r\n    setNoticeData(type,idNotice,statusView){\r\n        if(type == 1) {\r\n            this.props.setNotice(type, idNotice);\r\n            this.props.DeleteNotifi(idNotice);\r\n        }else{\r\n            if(statusView === false){\r\n                this.props.setNotice(type, idNotice);\r\n            }\r\n        }\r\n    }\r\n\r\n    getImagesNotice(img){\r\n        if(img === null || img == ''){return (\"\");}else{\r\n            return(\r\n                <img src={img} style={{width:\"100%\"}}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    getNotice(){\r\n\r\n        const NoticeList = this.ReverceList(this.props.AllNotice).map((Data,id)=>{\r\n\r\n            if(this.props.AllNotice[Data]['notice_view'] == '0'){\r\n                var color = '#ff7300';\r\n                var statusView = false;\r\n            }else{\r\n                var color = '';\r\n                var statusView = true;\r\n            }\r\n\r\n            return(<Group\r\n                key={\"Notice_C_\"+Data}\r\n            >\r\n                <Cell\r\n                    before={<Icon24Notification\r\n                        style={{color:color}}\r\n                        onClick={() => {this.setNoticeData(0,this.props.AllNotice[Data]['id_notification'],statusView)}}\r\n                    />}\r\n                    asideContent={<Icon24Dismiss\r\n                        onClick={() => {this.setNoticeData(1,this.props.AllNotice[Data]['id_notification'],statusView)}}\r\n                    />}\r\n\r\n                >\r\n                    {this.props.AllNotice[Data]['title']}\r\n                </Cell>\r\n                {this.getImagesNotice(this.props.AllNotice[Data]['img'])}\r\n                    <Div key={\"Notice_\"+Data} dangerouslySetInnerHTML={{__html: this.props.AllNotice[Data]['text'].replace(/\\n/g, \"<br />\")}}>\r\n                    </Div>\r\n            </Group>);\r\n        });\r\n\r\n        return(\r\n            NoticeList\r\n        );\r\n    }\r\n\r\n    getNotificationPage(){\r\n        if(this.props.StatusNotification === true){\r\n            if(Object.keys(this.props.AllNotice).length<=0){\r\n                return(this.NoteNotice());\r\n            }else{\r\n                return(this.getNotice());\r\n            }\r\n        }else{\r\n            return(\r\n                <Placeholder stretched\r\n                             icon={<Icon56NotificationOutline />}\r\n                             action={<Button size=\"l\" level=\"tertiary\"\r\n                                             onClick={()=>{this.props.PushClick()}}\r\n                             >Включить уведомления</Button>}\r\n                             style={{textAlign:\"center\"}}\r\n                >\r\n                    Для просмотра уведомлений, их нужно включить\r\n                </Placeholder>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            this.getNotificationPage()\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default Notice;","import React from 'react';\r\nimport { Div, Search } from '@vkontakte/vkui';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\n// import Icon24Back from '@vkontakte/icons/dist/24/back';\r\n// import ModalProduct from '../ModalProduct.js';\r\nimport OneProduct from \"./OneProduct\";\r\n\r\nimport axios from \"axios\";\r\nrequire('../../panels/global/index.js');\r\n\r\nclass ProductList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activePanel: 'panel1',\r\n            nameCategory: 'none',\r\n            productsLists: null,\r\n            products:[{\"1\":{\"title\":\"ЕКАРНЫЙ БАБАЙ\"}}],\r\n            search: global.searchProduct\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        //console.log('Обновился каталог');\r\n    }\r\n\r\n    onChange (e) {\r\n        this.setState({ search: e});\r\n        global.searchProduct = e;\r\n    }\r\n\r\n    render() {\r\n\r\n        function ReverceCatalog(Pr){\r\n            var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n                // console.log(last, index);\r\n                return (arr = arr.concat(last))\r\n            }, []);\r\n            return res;\r\n        }\r\n\r\n        function SearchProductTitle(Pr,DSr){\r\n            //console.log(Pr);\r\n\r\n            const Objs = Object.keys(Pr);\r\n\r\n            const retr = [];\r\n\r\n           Objs.forEach(function (oneProduct, keyId, array) {\r\n               if(testInput(DSr, Pr[oneProduct][0]['title'])){\r\n                   retr[keyId] = oneProduct;\r\n               }\r\n\r\n                    // if (Pr[oneProduct][0]['title'] == DSr) {\r\n                    //     retr[keyId] = oneProduct;\r\n                    //     //return oneProduct;\r\n                    // } else {\r\n                    //     //return keyId;\r\n                    // }\r\n                }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n        function testInput(re, str) {\r\n            re = re.toLowerCase().replace(/ /g,\"_\").replace(/-/g,\"_\");\r\n            str = str.toLowerCase().replace(/ /g,\"_\").replace(/-/g,\"_\");\r\n\r\n            var midstring;\r\n            if (str.search(re) != -1) {\r\n                midstring = true;\r\n            } else {\r\n                midstring = false;\r\n            }\r\n\r\n            return midstring;\r\n        }\r\n\r\n        function compare(a, b) {\r\n            if (a.price < b.price) {\r\n                return -1;\r\n            }\r\n            if (a.price > b.price) {\r\n                return 1;\r\n            }\r\n            // a должно быть равным b\r\n            return 0;\r\n        }\r\n\r\n        function comparePrice(Pr){\r\n            //console.log(Pr);\r\n            return Object.keys(Pr).sort(compare)\r\n        }\r\n\r\n\r\n        function ArrayProducts(Pr,ClickProductF,setProductModal,setCart, getButtonInCartProduct,ReverceStatus = 0,SearchText = null) {\r\n            var CatalogLists = [];\r\n            if(ReverceStatus === 0){\r\n                CatalogLists = ReverceCatalog(Pr);\r\n            }\r\n            if(ReverceStatus === 1){\r\n                CatalogLists = comparePrice(Pr);\r\n            }\r\n\r\n            if(ReverceStatus === 2){\r\n                CatalogLists = Object.keys(Pr);\r\n            }\r\n\r\n            if(ReverceStatus === 3){\r\n                CatalogLists = SearchProductTitle(Pr,SearchText);\r\n            }\r\n\r\n            //console.log('|||||||||||||||||||||||||||||||',CatalogLists.length);\r\n\r\n            const ArrayPr = CatalogLists.map((oneProduct, keyId) =>\r\n                <OneProduct key={'Products_'+keyId} product={Pr[oneProduct]} ClickProduct={ClickProductF.bind(this)} setCart={setCart.bind(this)} setProductModal={setProductModal.bind(this)} getButtonInCartProduct={getButtonInCartProduct.bind(this)}/>\r\n            );\r\n            return ArrayPr;\r\n        }\r\n\r\n\r\n        function ShowProductCategory(nameCategorys){\r\n            //console.log('ShowProductCategory ',nameCategorys);\r\n            if(nameCategorys.nameCategorys === 'sets'){\r\n                // console.log('d-d-d-d-',nameCategorys.productsLists[nameCategorys.idCategory]);\r\n                return (<GetSets\r\n                    SearchState={nameCategorys.SearchState}\r\n                    key={nameCategorys.key}\r\n                    names={nameCategorys.nameCategorys}\r\n                    ProductArray={nameCategorys.productsLists}\r\n                    ClickProduct={nameCategorys.ClickProduct.bind(this)}\r\n                    setCart={nameCategorys.setCart.bind(this)}\r\n                    setProductModal={nameCategorys.setProductModal.bind(this)}\r\n                    getButtonInCartProduct={nameCategorys.getButtonInCartProduct.bind(this)}\r\n                />);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'sushi'){\r\n                return (<GetSushi names={nameCategorys.nameCategorys}/>);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'roli'){\r\n                return (<GetRoli names={nameCategorys.nameCategorys}/>);\r\n            }else{\r\n                return (<GetNoneCat names={nameCategorys.nameCategorys}/>);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        function GetSets(ArrayPr) {\r\n           //console.log('ArrayPr ',ArrayPr);\r\n            if(ArrayPr.SearchState == '' || ArrayPr.SearchState === false){\r\n                return (\r\n                    <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                        {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),0)}\r\n                    </Div>\r\n                );\r\n            }else{\r\n                return (\r\n                    <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                        {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),3,ArrayPr.SearchState)}\r\n                    </Div>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        function SearchFn(ArrayPr,SrText) {\r\n           //console.log('ArrayPr ',ArrayPr);\r\n            return (\r\n                <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                    {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),3,SrText)}\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetSushi(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с креветкой</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши краб</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши копченый лосот</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetRoli(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с тунцом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл Филадельфия</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Филадельфия с крабом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetNoneCat(names){\r\n            return (\r\n                <Div id={names} className=\"blockCategoryFlex\">\r\n                <h1>К сожаление категория пуста!</h1>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        // function GetModalProduct(product){\r\n        //     return(\r\n        //\r\n        //     )\r\n        // }\r\n\r\n        return (\r\n            <div>\r\n                <Search value={this.state.search} onChange={this.onChange} after={null} />\r\n            <ShowProductCategory\r\n                SearchState={this.state.search}\r\n                productsLists={this.props.productsLists}\r\n                nameCategorys={this.props.nameCategory}\r\n                idCategory={this.props.idCategorys}\r\n                ClickProduct={this.props.onClickProduct.bind(this,'Panels_Product')}\r\n                setCart={this.props.setCart.bind(this)}\r\n                setProductModal={this.props.setProductModal.bind(this)}\r\n                getButtonInCartProduct={this.props.getButtonInCartProduct.bind(this)}\r\n            />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Placeholder, Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar,Textarea, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon16Clear from '@vkontakte/icons/dist/16/clear';\r\nimport DiliveryAddress from \"./DiliveryAddress\";\r\nimport AffiliateList from \"./AffiliateList\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Preorder from \"../preorder\";\r\nimport NoPreorder from \"../noPreorder\";\r\n\r\n\r\nconst orangeBackground = {\r\n    backgroundImage: 'linear-gradient(135deg, #ffb73d, #ffa000)'\r\n};\r\n\r\nconst blueBackground = {\r\n    backgroundColor: '#ffffff'\r\n};\r\n\r\nclass Dilivery extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            UserCard:{phone:\"\",email:\"\"},\r\n            CheckSMSCode:false,\r\n            phoneValue:\"\",\r\n            codeValue:\"\",\r\n            resultVerificationCode:true,\r\n            tooltip: true,\r\n            snackbar: null,\r\n            showBTNNewAddress:false,\r\n            showFormNewAddress:false\r\n        };\r\n\r\n        this.openBase = this.openBase.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.openBase();\r\n\r\n        async function getPhoneUserVK(setState){\r\n            connect.sendPromise(\"VKWebAppGetPhoneNumber\",{\"sign\":\"T3in3QPDby8GsRNAfsEnEoYmVt7Se2dy0XUOhnCSlSw\"})\r\n                .then((data ) => {\r\n                    //console.log(data,\"Данные пользователя\");\r\n                    setState({ UserCard:{phone: data.phone_number} });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ------  \",err);\r\n                });\r\n        }\r\n\r\n        //console.log(\"Получаем телефон\");\r\n        {this.props.userSystemInfo.error === true && getPhoneUserVK(this.setState.bind(this));}\r\n    }\r\n\r\n\r\n    openBase (e = null) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Clear fill=\"#ff0000\" width={16} height={16} /></Avatar>}\r\n                >\r\n                    {e===null && <span>Проверочный код введен не верно, повторите попытку!</span>}\r\n                    {e!==null && e}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n\r\n    setVerificationPhone(){\r\n        //console.log('Отправили запрос на верификацию');\r\n        axios('https://sushi-time31.ru/api/VerificationPhone&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_SMS\"){\r\n                        //console.log('СМС отправлено, выводим поле для ввода кода');\r\n                        this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase('Номер телефона введен не верно!');\r\n                    }\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    checkVerificationCode(){\r\n        //console.log('Отправили запрос на проверку кода',this.props.userInfo.id);\r\n        axios('https://sushi-time31.ru/api/VerificationCode&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                    VerificationCode: this.state.codeValue,\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_CODE_V\"){\r\n                        //console.log('Данные сохранены, можно обновить приложение, пользователь авторизован');\r\n                        this.props.getUserSystemInfo(this.props.userInfo.id);\r\n                        //this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    getValueInputPhone(event){\r\n        this.setState({UserCard:{phone: event.target.value}});\r\n        //console.log(this.state.UserCard.phone);\r\n    }\r\n\r\n    getValueInputCode(event){\r\n        this.setState({codeValue: event.target.value});\r\n    }\r\n\r\n    getCommentsData(e){\r\n        this.props.setComment(e.target.value);\r\n    }\r\n\r\n    getDataCountPerson(types){\r\n        var values_count = this.props.countPerson;\r\n        switch(types){\r\n            case '-': values_count -= 1; break;\r\n            case '+': values_count += 1; break;\r\n            default: console.log('Нет параметра');\r\n        }\r\n\r\n        if(values_count<=0){ values_count = 1;}\r\n        if(values_count === ''){ values_count = 1;}\r\n        if(values_count >9){ values_count = 9;}\r\n\r\n        this.props.setStates({countPerson: values_count});\r\n    }\r\n\r\n    getCountPersonInput(){\r\n        return (\r\n            <Group title=\"Кол-во приборов\">\r\n                <Div style={{display: 'flex',justifyContent:'center'}}>\r\n                    <Button size=\"l\" stretched style={{marginRight: 10,maxWidth:50,background:\"#ff7300\"}} onClick={this.getDataCountPerson.bind(this,'-')}>-</Button>\r\n                    <Input type=\"number\" style={{maxWidth:80,textAlign:\"center\"}} value={this.props.countPerson} readOnly=\"readOnly\"/>\r\n                    <Button size=\"l\" stretched style={{marginLeft: 10,maxWidth:50,background:\"#ff7300\"}} onClick={this.getDataCountPerson.bind(this,'+')}>+</Button>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth(){\r\n        return(<Group>\r\n            <FormLayout>\r\n                {this.state.CheckSMSCode === true && <FormLayoutGroup top=\"Введите одноразовый код из СМС\">\r\n\r\n                    <Input type=\"number\" placeholder=\"1234\" onChange={this.getValueInputCode.bind(this)} />\r\n\r\n\r\n                    <Button level=\"commerce\" style={{\"background\":\"#ff7300\"}}\r\n                            onClick={()=> {\r\n                                //console.log(this.state.codeValue);\r\n                                this.checkVerificationCode()\r\n                                }\r\n                            }\r\n                    >Подтвердить\r\n                    </Button>\r\n                    <Button level=\"secondary\" style={{\"float\":\"right\"}} onClick={() => {this.setState({CheckSMSCode:false})}}>Выслать повторно</Button>\r\n                </FormLayoutGroup>}\r\n\r\n                {this.state.CheckSMSCode === false && <FormLayoutGroup top=\"Подтвердите номер телефона\">\r\n                    <Input type=\"number\" placeholder=\"79876543210\" defaultValue={this.state.UserCard.phone} onChange={this.getValueInputPhone.bind(this)}/>\r\n                    <Button level=\"commerce\" style={{\"background\":\"#ff7300\"}}\r\n                            onClick={\r\n                                () => {\r\n                                    this.setVerificationPhone();\r\n                                    //console.log(this.state.UserCard.phone)\r\n                                }\r\n                            }\r\n                    >\r\n                        Получить код\r\n                    </Button>\r\n                    <Button onClick={() => {this.setState({CheckSMSCode:true})}} level=\"secondary\" style={{\"float\":\"right\"}}>Уже есть код</Button>\r\n                </FormLayoutGroup>}\r\n            </FormLayout>\r\n            {this.state.snackbar}\r\n        </Group>);\r\n    }\r\n\r\n    getButtonTypeDilivery(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"0\"}}>\r\n            <Button size=\"l\" stretched style={{marginRight: 8}} level={this.props.checkedTypeDilivery === 1 ? \"secondary\" : \"commerce\"} onClick={()=>{this.props.setTypeDilivery(0)}}>Доставка</Button>\r\n            <Button size = \"l\" stretched level={this.props.checkedTypeDilivery === 0 ? \"secondary\" : \"commerce\"}  onClick={()=>{this.props.setTypeDilivery(1)}}>Самовывоз</Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getButtonTypeOrder(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"20\",\"paddingTop\":\"0\"}}>\r\n                <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"commerce\" : \"secondary\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(true);}}\r\n                >\r\n                    Ближайшее\r\n                </Button>\r\n                <Button size = \"l\" stretched\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"secondary\" : \"commerce\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(false);}}\r\n                >\r\n                    Ко времени\r\n                </Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n\r\n    getPreorderBlock(){\r\n        return(\r\n            <Group\r\n                title=\"Время получение заказа\"\r\n            >\r\n                {this.getButtonTypeOrder()}\r\n                {\r\n                    this.props.DataDeliveryInfo.typeOrderDate\r\n                        ?\r\n                        <NoPreorder\r\n                            typeDelivery={this.props.DataDeliveryInfo.checkedTypeDilivery}\r\n                        />\r\n                        :\r\n                        <Preorder\r\n                            DataInfos={this.props.DataDeliveryInfo}\r\n                            setStates={this.props.setStates.bind(this)}\r\n                            key=\"Preorders\"\r\n                        />\r\n                }\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserAuth(){\r\n        //console.log('По дефолту адрес ',this.props.addressDefault)\r\n        return(\r\n            <div>\r\n                {this.getButtonTypeDilivery()}\r\n                {this.props.checkedTypeDilivery === 0 ?\r\n                    this.getListAddress()\r\n                    :\r\n                    this.getListAffiliate()\r\n                }\r\n                {this.getPreorderBlock()}\r\n                {this.getCountPersonInput()}\r\n                {this.getCommentsTextarea()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getNoneCartProduct(){\r\n        return(\r\n            <Placeholder\r\n                icon={<Icon56ErrorOutline />}\r\n                action={false}\r\n\r\n            >\r\n                <h2>В корзине отсутствуют товары</h2>\r\n                <p>Для совершения заказа, нужно положить хотябы 1 товар в корзину!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n\r\n    getListAddress(){\r\n        //console.log(this.state.showBTNNewAddress);\r\n        return(\r\n            <Group\r\n                className=\"GroupBlockListAddress\"\r\n                title=\"Адреса доставки\"\r\n                   description={this.state.showBTNNewAddress ?\r\n                       <Button\r\n                           size=\"l\"\r\n                           level=\"secondary\"\r\n                           style={{ background: '#FF7300',color:\"#FFFFFF\" }}\r\n                           // onClick={()=>{this.setState({showFormNewAddress:true})}}\r\n                           onClick={()=>{\r\n                               this.props.showModal('MODAL_NEWADDRESS');\r\n                           }}\r\n                       >Добавить адрес</Button>\r\n                       :\r\n                       \"\"}\r\n            >\r\n                <DiliveryAddress\r\n                    userInfo={this.props.userInfo}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    setShowBTNNewAddress={this.setState.bind(this)}\r\n                    showFormNewAddress={this.state.showFormNewAddress}\r\n                    setStates={this.props.setStates.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n                    showModals={this.props.showModal.bind(this)}\r\n                    hideModals={this.props.hideModals.bind(this)}\r\n                />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getListAffiliate(){\r\n        return (\r\n            <Group title=\"Адреса самовывоза\">\r\n            <AffiliateList\r\n                userInfo={this.props.userInfo}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n                setStates={this.props.setStates.bind(this)}\r\n            />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCommentsTextarea () {\r\n        return (\r\n            <Group title=\"Комментарий к заказу\">\r\n                <Div>\r\n                <Textarea value={this.props.commentary} onChange={this.getCommentsData.bind(this)} placeholder=\"Ваш комментарий\"/>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getOkListAddress(Param){\r\n        return(\r\n            Param <=0 ? this.getNoneCartProduct() : this.getInfoUserAuth()\r\n        )\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                {this.props.userSystemInfo.error === true &&\r\n                    this.getInfoUserNoneAuth()\r\n                }\r\n\r\n                {this.props.userSystemInfo.error === false &&\r\n                    this.getOkListAddress(this.props.ProductList.length)\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Dilivery;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAddress from \"./GetOneAddress\";\r\nimport GetOneAddressOff from \"./GetOneAddressOff\";\r\nimport OneProduct from \"../catalog/OneProduct\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport FormNewAddress from './FormNewAddress';\r\n\r\nclass DiliveryAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAddress:[],\r\n            listAddressOff:[],\r\n            addressOk:false,\r\n            dataAddress:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAddressUserSystem();\r\n        this.props.setStates({formNewAddressData: <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n    }\r\n\r\n    setAddressEdit(e){\r\n        //console.log(this.state.listAddress);\r\n        this.props.setStates({formEditAddressData: <FormNewAddress AddressEdit={this.state.listAddress[e]} setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n        this.props.showModals('MODAL_EditADDRESS');\r\n    }\r\n\r\n\r\n    getAddressUserSystem(delUpdate = false){\r\n        axios('https://sushi-time31.ru/api/getAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_UserVK: this.props.userInfo.id,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                    if(data.error === 'Address not found'){\r\n                        console.log('Нужно вывести форму для создания первого адреса пользователя');\r\n                        this.getFormNewAddress();\r\n                    }else{\r\n\r\n                    }\r\n                }else{\r\n                   // console.log(data);\r\n                    this.setState({listAddress:data.listAddress});\r\n                    this.props.setStates({listAddressGlobal:data.listAddress});\r\n\r\n                    this.setState({listAddressOff:data.ListAddressNoDelivery});\r\n                    this.props.setStates({listAddressGlobalOff:data.ListAddressNoDelivery});\r\n\r\n                    if(delUpdate === true){\r\n                        this.getAddressUsers(this.state.listAddress,true);\r\n                    }else{\r\n                        this.getAddressUsers(this.state.listAddress);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n\r\n    setAddressInfoUsers(e,type=0){\r\n            if (type === 0) {\r\n                var listAddressU = Object.keys(this.state.listAddress);\r\n                if(listAddressU.length > 0) {\r\n                    // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n                    // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n                    var DataSetAddress = this.state.listAddress[listAddressU[e]];\r\n                    this.props.setStates({\r\n                        addressOrderInfoUser: 'г. ' + DataSetAddress.city + ', ул. ' + DataSetAddress.street + ', д. ' + DataSetAddress.home\r\n                    });\r\n                }\r\n            }\r\n    }\r\n\r\n    getFormNewAddress(){\r\n        this.props.setAddressDefault(null);\r\n        this.state.dataAddress = <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)}/>;\r\n        this.setState({addressOk:true});\r\n        this.props.setShowBTNNewAddress({showBTNNewAddress:false});\r\n\r\n    }\r\n\r\n    setDataDiliveryPrice(n,ee = 'Дефолт 0'){\r\n        var listAddressU = Object.keys(this.state.listAddress);\r\n        // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n        // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n        if(listAddressU.length <= 0){\r\n            console.log('Адресов нет, должны вернуть только не доступные адреса');\r\n            this.props.setAddressDefault(null);\r\n            //return this.getAddressUsers(this.state.listAddress, true);\r\n        }else {\r\n            if (listAddressU[n] in this.state.listAddress) {\r\n                //console.log('Все ок, продолжаем по адресам');\r\n            } else {\r\n               // console.log('Адреса такого нет, ставим в дефаулт');\r\n                this.props.setAddressDefault(0);\r\n               // console.log('Должны переустановить дефаултный адрес на 0, адреса есть');\r\n                return this.getAddressUsers(this.state.listAddress, true);\r\n            }\r\n        }\r\n\r\n        if(listAddressU.length <= 0){\r\n           // console.log('Адресов нет, но продолжаем');\r\n           //  console.log('Установили значения стоимости доставки ', ee);\r\n        }else {\r\n            var DataSetAddress = this.state.listAddress[listAddressU[n]].diliveryData;\r\n            this.props.setStates({\r\n                priceDelivery: DataSetAddress.priceDilivery,\r\n                minSumOrder: DataSetAddress.min_sum_order,\r\n                minSumFreeDelivery: DataSetAddress.min_sum_free_dilivery\r\n            });\r\n           // console.log('Установили значения стоимости доставки ', ee);\r\n        }\r\n\r\n    }\r\n\r\n    getAddressUsers(listAddress,delUpdate = false) {\r\n        if(this.props.addressDefault === null & Object.keys(listAddress).length > 0){\r\n          //  console.log('Устанавливаем дефаултное значение адреса на 0','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(0);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n        if(this.props.addressDefault !== null & Object.keys(listAddress).length <= 0){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0 с условием что адресов нет','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(null);\r\n            this.setDataDiliveryPrice(0);\r\n        }\r\n\r\n        if(delUpdate === true){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0');\r\n            this.props.setAddressDefault(0);\r\n            this.getAddressUsers(listAddress,false);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }else{\r\n            this.state.dataAddress = Object.keys(listAddress).map((dataAddress, keyId) =>\r\n                <GetOneAddress\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId}\r\n                    AddresInfo={listAddress[dataAddress]}\r\n                    NumberAddress={keyId}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n\r\n            this.state.dataAddressOff = Object.keys(this.state.listAddressOff).map((dataAddress2, keyId2) =>\r\n                <GetOneAddressOff\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId2}\r\n                    AddresInfo={this.state.listAddressOff[dataAddress2]}\r\n                    NumberAddress={keyId2}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n            this.setState({addressOk:true});\r\n            this.props.setShowBTNNewAddress({showBTNNewAddress:true});\r\n            this.setDataDiliveryPrice(this.props.addressDefault, 'На '+this.props.addressDefault);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n    }\r\n\r\n    getListAddressVisual(){\r\n        return(\r\n            <div>\r\n                {this.state.dataAddress}\r\n                {this.state.dataAddressOff}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (this.state.addressOk === false ? <div>Загрузка адресов доставки <ScreenSpinner/></div> : this.getListAddressVisual()\r\n            );\r\n    };\r\n}\r\n\r\nexport default DiliveryAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n            axios('https://sushi-time31.ru/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:{id:a},\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            this.props.setAddressDefault('del');\r\n                           // console.log('Обновляем адреса',data);\r\n                            this.props.getAddressUserSystem(true);\r\n                            this.props.setPopout({ popout:null});\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    openDefault (a) {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Отмена',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }, {\r\n                        title: 'Удалить',\r\n                        autoclose: true,\r\n                        action: () => this.deletedAddress(a),\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Удаление адреса</h2>\r\n                    <p>Вы уверены что хотите удалить адрес?</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n    getAddressFull(n){\r\n        return(<div>\r\n                <span style={{width:\"75%\",float:\"left\"}}>\r\n                 г. {this.props.AddresInfo.city}, ул. {this.props.AddresInfo.street}, д. {this.props.AddresInfo.home}, подъезд {this.props.AddresInfo.podezd}, этаж {this.props.AddresInfo.etaj}, кв. {this.props.AddresInfo.kvartira}\r\n                </span>\r\n                <span style={{width:\"24%\",float:\"right\"}}><Icon28EditOutline\r\n                    onClick={\r\n                        ()=>{\r\n                            // console.log('Редактируем адрес ',n);\r\n                            this.props.setAddressEdit(this.props.AddresInfo.id);\r\n                        }\r\n                    }\r\n                    style={{float:\"left\",marginRight:\"10px\"}}/> <Icon28CancelCircleOutline style={{float:\"left\"}}\r\n                                                                                           onClick={\r\n                                                                                               ()=>{\r\n                                                                                                   // console.log('Удаляем адрес ');\r\n                                                                                                   this.openDefault(this.props.AddresInfo.id);\r\n                                                                                               }\r\n                                                                                           }\r\n                /></span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} defaultChecked onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n,'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n, 'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddressOff extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n        this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n        axios('https://sushi-time31.ru/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    addressInfo:{id:a},\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.result.result_add === true){\r\n                        this.props.setAddressDefault('del');\r\n                        //console.log('Обновляем адреса',data);\r\n                        this.props.getAddressUserSystem(true);\r\n                        this.props.setPopout({ popout:null});\r\n                    }else{\r\n                        console.log('Ошибка ',data);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n            });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'У Вас в корзине лежат товары, которые на этот адрес не доставляются!'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'У Вас в корзине лежат товары, которые на этот адрес не доставляются!'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddressOff;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAffiliateAddress from \"./GetOneAffiliateAddress\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass AffiliateList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAffiliate:[],\r\n            addressAffiliateOk:false,\r\n            dataAffiliate:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios('https://sushi-time31.ru/api/getAffiliate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_City: 1,\r\n                    id_UserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo,'Самовывоз');\r\n                }else{\r\n                    //console.log(data,'Самовывоз');\r\n                    if(Object.keys(data.listOffAffiliate).length>0){\r\n                       // console.log('Есть запрещенные точки, проводим цикл');\r\n                        Object.keys(data.listOffAffiliate).map((datas,keys)=>\r\n                            {\r\n                                if(this.props.AffiliateDefault === keys){\r\n                                    //console.log('Точка самовывоза по умолчанию совпадает с запрещенной, ставим нуль ', keys);\r\n                                    this.props.setAffiliateDefault(0);\r\n                                }else{\r\n                                   // console.log('Точка по умолчанию не совпадает с запрещенной, ничего не делаем ',keys);\r\n                                }\r\n                            }\r\n                        );\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }else{\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    setAddressInfoUsers(e,type=1){\r\n        if(type===1){\r\n            var listAddressU = Object.keys(this.state.listAffiliate);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.state.listAffiliate[listAddressU[e]];\r\n            this.props.setStates({\r\n                addressOrderInfoUser: DataSetAddress.title\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    getAddressAffiliate(listAddress) {\r\n        this.props.getDeliveryDataPriceItogAffiliate();\r\n        this.setAddressInfoUsers(this.props.AffiliateDefault);\r\n        this.state.dataAffiliate = Object.keys(listAddress).map((dataAffiliate, keyId) =>\r\n            <GetOneAffiliateAddress\r\n                key={'Affiliate_'+keyId}\r\n                AddresInfo={listAddress[dataAffiliate]}\r\n                NumberAddress={keyId}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n            />\r\n        );\r\n       this.setState({addressAffiliateOk:true});\r\n        //this.state.addressOk:true;\r\n        //return ArrayPr;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            this.state.addressAffiliateOk === false ? <div><h3>Ареса самовывоза</h3> <ScreenSpinner/> <p></p></div> : this.state.dataAffiliate\r\n        );\r\n    };\r\n}\r\n\r\nexport default AffiliateList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\n\r\nclass GetOneAffiliateAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n    }\r\n\r\n    getAddressTitle(){\r\n        return(\r\n            <span>\r\n               {this.props.AddresInfo.title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    getAddressFull(){\r\n        return(\r\n            <span style={{\"color\":\"#ffae6b\"}} dangerouslySetInnerHTML={{__html: this.props.AddresInfo.operating_mode}}>\r\n\r\n            </span>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    defaultChecked onClick={() => {\r\n                        this.props.setAffiliateDefault(n);\r\n                    ;this.props.setAddressInfoUsers(n);\r\n                    }\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    onClick={() => {\r\n                        this.props.setAffiliateDefault(n)}\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.AffiliateDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAffiliateAddress;","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch, Select, FormLayout} from '@vkontakte/vkui/';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Preorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockPreorder:false,\r\n            listDatePreorder:[],\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null\r\n        }\r\n\r\n        this.onChangeS = this.onChangeS.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockPreorder:true});\r\n        this.getDateList();\r\n        this.setState({\r\n            SelectDatePreorder:this.props.DataInfos.SelectDatePreorder,\r\n            SelectTimePreorder:this.props.DataInfos.SelectTimePreorder\r\n        });\r\n        console.log(this.props.DataInfos.SelectDatePreorder);\r\n    }\r\n\r\n    getDateList(){\r\n        axios('https://sushi-time31.ru/api/getPreorderDate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    this.setState({listDatePreorder:data.list});\r\n                    console.log(data.list);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    onChangeS(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n        this.props.setStates({[name]: value});\r\n        //console.log(this.state);\r\n    }\r\n\r\n    getSelectDate(){\r\n        const ListDate = Object.keys(this.state.listDatePreorder).map((data,n)=>{\r\n            return(\r\n                <option key={data+\"preorderDates\"} value={data}>{this.state.listDatePreorder[data].title}</option>\r\n            );\r\n        });\r\n        return (\r\n            <div>\r\n            <Cell>\r\n                <Select\r\n                    top=\"Дата получения заказа\"\r\n                    key=\"datePreorder\"\r\n                    placeholder=\"Дата получения\"\r\n                    name=\"SelectDatePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectDatePreorder}\r\n            >{ListDate}</Select>\r\n            </Cell>\r\n            <Cell>\r\n                {this.getSelectTime()}\r\n            </Cell>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSelectTime(){\r\n        if(this.state.SelectDatePreorder in this.state.listDatePreorder) {\r\n            var ListTimes = this.state.listDatePreorder[this.state.SelectDatePreorder].timeList;\r\n            const ListTime = Object.keys(ListTimes).map((times, n) => {\r\n                if(ListTimes[times].false === true){\r\n                    return ('');\r\n                }else {\r\n                    return (\r\n                        <option key={times + \"preorderTimes\"}\r\n                                value={times}\r\n                        >\r\n                            {ListTimes[times].title}\r\n                        </option>\r\n                    );\r\n                }\r\n            });\r\n            return (\r\n                <Cell>\r\n                    <Select\r\n                    top=\"Время получения заказа\"\r\n                    key=\"datePreorderTime\"\r\n                    placeholder=\"Время получения\"\r\n                    name=\"SelectTimePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectTimePreorder}\r\n                >{ListTime}</Select>\r\n                </Cell>\r\n            );\r\n        }else{\r\n            return ('');\r\n        }\r\n    }\r\n\r\n    getBlockPreorder(){\r\n        return(\r\n                <Div key=\"DivPreorder\">\r\n                    {\r\n                        this.state.loadBlockPreorder ?\r\n                            this.getSelectDate()\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlockPreorder()\r\n        );\r\n    }\r\n}\r\nexport default Preorder;\r\n","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\n\r\n\r\nclass NoPreorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockOrder:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockOrder:true});\r\n    }\r\n\r\n    getBlocknoPreorder(){\r\n        return(\r\n                <Cell\r\n                    before={<Icon24Recent />}\r\n                    style={{paddingBottom:\"10px\"}}\r\n                >\r\n                    {\r\n                        this.state.loadBlockOrder ?\r\n                            <div>{this.props.typeDelivery ? \"Забрать в ближайшее время\" : \"Доставить в ближайшее время\"}</div>\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Cell>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlocknoPreorder()\r\n        );\r\n    }\r\n}\r\nexport default NoPreorder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\n\r\nclass NewOrderServer extends React.Component{\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    setDataServer(){\r\n        this.props.setStates({statusNewOrder:'Запрос прошел'});\r\n        axios('https://sushi-time31.ru/api/setNewOrder&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    idUserVK: this.props.userInfo.id,\r\n                    dataOrder:this.props.DataOrderInfo\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                   // console.log('Ответ сервера ',data);\r\n                    if(data.status == \"OK\"){\r\n                        this.props.getPageOkOrderSet({newOrderStats:true});\r\n                        this.props.setOkNewOrderView();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button size=\"xl\" onClick={()=>{this.setDataServer()}} className=\"WeightFontBold\">Завершить заказ</Button>\r\n        );\r\n    };\r\n}\r\n\r\nexport default NewOrderServer;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\n\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport {List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\n\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\n\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            StatusNotification:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getStatusNotificate();\r\n    }\r\n\r\n    getPanelProfil(){\r\n        return(\r\n            <div id={this.props.id} style={{maxWidth:'1200px',margin:'0 auto'}} them='white'>\r\n                {this.props.fetchedUser &&\r\n                    <Group title=\"Ваши данные\r\n    \">\r\n                        <Cell\r\n                            before={this.props.fetchedUser.photo_200 ? <Avatar src={this.props.fetchedUser.photo_200}/> : null}\r\n                            description={this.props.fetchedUser.city && this.props.fetchedUser.city.title ? this.props.fetchedUser.city.title : ''}\r\n                        >\r\n                            {`${this.props.fetchedUser.first_name} ${this.props.fetchedUser.last_name}`}\r\n                        </Cell>\r\n                    </Group>\r\n                }\r\n\r\n                <Group>\r\n                    <Cell\r\n                        before={<Icon24Note />}\r\n                        description=\"Список совершенных Вами онлайн заказов\"\r\n                        onClick={this.props.setShowUserOrderList.bind()}\r\n                    >\r\n                        Мои заказы\r\n                    </Cell>\r\n                </Group>\r\n\r\n\r\n                {this.props.dataUsers.dataUsers.error ?\r\n                    this.getInfoUserNoneAuth()\r\n                    :\r\n\r\n                    <Group title=\"Активность\">\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Coins />}\r\n                            >\r\n                                Бонус Таймы: {this.props.dataUsers.dataUsers.dataUser.point}\r\n                            </Cell>\r\n                        </List>\r\n                    </Group>\r\n                }\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24Notification />}\r\n                            asideContent={<Switch\r\n                                checked={this.state.StatusNotification}\r\n                                onChange={()=>{this.PushClick()}} />}\r\n                            description=\"Изменение статуса заказа, акциии...\"\r\n                        >\r\n                            PUSH - уведомления\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24CommentOutline />}\r\n                        >\r\n                            <a style={{color:\"#252622\",textDecoration:\"none\"}}\r\n                               href=\"//vk.com/im?sel=-87074888\" target=\"_blank\">\r\n                                Связаться с нами\r\n                            </a>\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth() {\r\n        return (\r\n            <Div>\r\n                Авторизуйтесь по номеру телефона, чтобы просматривать данные!\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n                this.props.setStatusNotification(datas.response.is_allowed);\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            });\r\n    }\r\n\r\n    //defaultChecked\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            })\r\n            .catch((err)=> {\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getPanelProfil()\r\n        );\r\n    }\r\n}\r\nexport default UserInfo;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport { View, Group, List, Cell } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Persik = props => (\r\n    <Panel id={props.id}>\r\n        <PanelHeader\r\n            left={<HeaderButton onClick={props.go} data-to=\"home\">\r\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n            </HeaderButton>}\r\n        >\r\n            Persik\r\n        </PanelHeader>\r\n        <Div>\r\n            <h2 size=\"x3\" level=\"1\">Это не совсем персик</h2>\r\n            <View activePanel=\"main\">\r\n                <Panel id=\"main\">\r\n                    <PanelHeader>VKUI</PanelHeader>\r\n                    <Group title=\"Items\">\r\n                        <List>\r\n                            <Cell>Hello</Cell>\r\n                            <Cell>World</Cell>\r\n                        </List>\r\n                    </Group>\r\n                </Panel>\r\n            </View>\r\n        </Div>\r\n        <img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\r\n    </Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport UserInfo from './ProfileUser/UserInfo';\r\nimport Persik from './Persik';\r\nimport NoPersik from './Nopersik';\r\n\r\nconst ProfileUserPage = (dataUsers) => {\r\n\tconst [activePanel, setActivePanel] = useState('homeUsers');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\t//const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// connect.subscribe(({ detail: { type, data }}) => {\r\n\t\t// \tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t// \t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t// \t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t// \t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t// \t}\r\n\t\t// });\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\t//setPopout(null);\r\n\t\t\t//console.log(connect);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<View activePanel={activePanel}>\r\n\t\t\t<UserInfo\r\n\t\t\t\tid='homeUsers'\r\n\t\t\t\tfetchedUser={fetchedUser}\r\n\t\t\t\tgo={go}\r\n\t\t\t\tdataUsers={dataUsers}\r\n\t\t\t\tsetActivePanels={setActivePanel.bind(this)}\r\n\t\t\t\tsetStatusNotification={dataUsers.setStatusNotification.bind(this)}\r\n\t\t\t\tsetShowUserOrderList={dataUsers.setShowUserOrderList.bind(this)}\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default ProfileUserPage;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport NewOrderServer from './NewOrderServer';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Info from '@vkontakte/icons/dist/24/info';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Flash from '@vkontakte/icons/dist/24/flash';\r\n\r\nclass PaymentsPage extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            SalePoints:this.props.SalePoints,\r\n            value2:0,\r\n            statusNewOrder:'11'\r\n        }\r\n\r\n        this.props.getReloadInfODeliveryPay();\r\n    }\r\n\r\n    setPointsDefaultsSale(SalePoints){\r\n        SalePoints = SalePoints*1;\r\n        this.setState({SalePoints});\r\n        this.props.setStates({SalePoints:SalePoints});\r\n    }\r\n\r\n    options () {\r\n        let options = [];\r\n        for (let i = 0; i <= this.props.userSystemInfo.dataUser.point*1; i += 1) {\r\n            options.push(<option value={`${i}`} key={`${i}`}>{i}</option>)\r\n        }\r\n        return options;\r\n    }\r\n\r\n    getCountsTimeBonus(){\r\n        var points = this.props.userSystemInfo.dataUser.point*1;\r\n        if(points >0){\r\n            return(\r\n                <div>\r\n                        <Div>Доступно таймов для списания: <b>{points}</b></Div>\r\n                    <FormLayout>\r\n                        <Slider\r\n                            step={1}\r\n                            min={0}\r\n                            max={points}\r\n                            value={Number(this.state.SalePoints)}\r\n                            onChange={(SalePoints)=> this.setPointsDefaultsSale(SalePoints)}\r\n                            top=\"Списать в оплату\"\r\n                        />\r\n                        <Select onChange={e => this.setPointsDefaultsSale(e.target.value)} value={String(this.state.SalePoints)}>\r\n                            {this.options()}\r\n                        </Select>\r\n\r\n                    <div style={{display: 'none',justifyContent:'center'}}>\r\n                        <Button size=\"l\" stretched style={{marginRight: 10}}>Выбранное кол-во</Button>\r\n                        <Button size=\"l\" stretched style={{marginLeft: 10}}>Списать все</Button>\r\n                    </div>\r\n                    </FormLayout>\r\n                </div>);\r\n        }else{\r\n            return(<Cell className=\"IconColorOrange\" before={<Icon24Coins />}> К сожалению у Вас <b>0</b> таймов</Cell>);\r\n        }\r\n    }\r\n\r\n    getSumCartItogo(){\r\n        var sum = this.props.sumCart-this.props.SalePoints;\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog) {\r\n            sum = sum + (this.props.DataDeliveryInfo.priceDelivery * 1);\r\n        }\r\n        if(sum<0){sum = 0;}\r\n        return (sum);\r\n    }\r\n\r\n\r\n    checkMinSummaCart(){\r\n        if(this.props.DataDeliveryInfo.errorOrderFinal){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={false}\r\n\r\n                >\r\n                    <h2>Сумма минимального заказа {this.props.DataDeliveryInfo.minSumOrder} рублей</h2>\r\n                    <p>Мы не можем принять Ваш заказ, так как сумма Вашей покупки, меньше необходимой</p>\r\n                </Placeholder>\r\n            );\r\n        }else{\r\n            return(\r\n                this.checkTypeDiliveryInfo()\r\n            );\r\n        }\r\n    }\r\n\r\n    PriceInfoVisual(){\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog){\r\n            return(\r\n                <Cell before={<Icon24Info />}> Стоимость доставки: <b>{this.props.DataDeliveryInfo.priceDelivery} ₽</b></Cell>\r\n            );\r\n        }else{\r\n            return('');\r\n        }\r\n    }\r\n\r\n    getAddressDelivery(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAddressGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAddressGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAddressGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getAddressAffiliate(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAffiliateGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getDataOrder(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === true) {\r\n            var checkPreorderActive = false;\r\n        }else{\r\n            var checkPreorderActive = true;\r\n        }\r\n        var DataOrder = {};\r\n\r\n        var DataAddressDelivery = this.getAddressDelivery(this.props.DataDeliveryInfo.addressDefault);\r\n        var DataAddressAffiliate = this.getAddressAffiliate(this.props.DataDeliveryInfo.AffiliateDefault);\r\n\r\n        DataOrder.idUserVK = this.props.userInfo.id;\r\n        DataOrder.typeDelivery = this.props.DataDeliveryInfo.checkedTypeDilivery;\r\n        DataOrder.AddressDelivery = {\"Info\":DataAddressDelivery,\"idAddress\":DataAddressDelivery.id};\r\n        DataOrder.idAffiliatePickup = {\"Info\":DataAddressAffiliate,\"idAffiliate\":DataAddressAffiliate.id};\r\n        DataOrder.PointsSale = this.props.SalePoints;\r\n        DataOrder.DeliverySum = this.props.DataDeliveryInfo.DeliveryPriceItog ? this.props.DataDeliveryInfo.priceDelivery : 0;\r\n        DataOrder.Comments = this.props.DataDeliveryInfo.comments;\r\n        DataOrder.DopInfo = this.props.DataDeliveryInfo.commentary;\r\n        DataOrder.typePay = this.props.DataDeliveryInfo.typePay;\r\n        DataOrder.countPerson = this.props.DataDeliveryInfo.countPerson;\r\n        DataOrder.cart = this.props.DataDeliveryInfo.cart;\r\n        DataOrder.DopProductUserSet = this.props.DataDeliveryInfo.DopProductUserSet;\r\n        DataOrder.Preorder = {\"active\":checkPreorderActive,\"datePreorder\":this.props.DataDeliveryInfo.SelectDatePreorder+'T'+this.props.DataDeliveryInfo.SelectTimePreorder};\r\n        return DataOrder;\r\n    }\r\n\r\n    getMountsDate(a,b = null){\r\n        if(b){\r\n            a = a+1;\r\n            if(a<10){return '0'+a;}\r\n        }else {\r\n            switch (a) {\r\n                case 0:\r\n                    return 'Января';\r\n                    break;\r\n                case 1 :\r\n                    return 'Февраля';\r\n                    break;\r\n                case 2 :\r\n                    return 'Марта';\r\n                    break;\r\n                case 3 :\r\n                    return 'Апреля';\r\n                    break;\r\n                case 4 :\r\n                    return 'Мая';\r\n                    break;\r\n                case 5 :\r\n                    return 'Июня';\r\n                    break;\r\n                case 6 :\r\n                    return 'Июля';\r\n                    break;\r\n                case 7 :\r\n                    return 'Августа';\r\n                    break;\r\n                case 8 :\r\n                    return 'Сенятбря';\r\n                    break;\r\n                case 9 :\r\n                    return 'Октября';\r\n                    break;\r\n                case 10 :\r\n                    return 'Ноября';\r\n                    break;\r\n                case 11 :\r\n                    return 'Декабря';\r\n                    break;\r\n                default:\r\n                    return a;\r\n            }\r\n        }\r\n    }\r\n\r\n    returnPlaceholderPreorder(a){\r\n        switch(a){\r\n            case true:\r\n                var dateObj = new Date(this.props.DataDeliveryInfo.SelectDatePreorder);\r\n                //var formated_date = dateObj.format(\"dd.mm.YYYY\");\r\n\r\n\r\n                return(<div>\r\n                        <Group title=\"Оплата бонусными баллами\">\r\n                            {this.getCountsTimeBonus()}\r\n\r\n                        </Group>\r\n                        <Group title=\"Итоговые данные по заказу\">\r\n                            <List>\r\n                                <Cell\r\n                                    before={<Icon24Place />}\r\n                                    description={<span>\r\n                                      <i>{this.props.DataDeliveryInfo.addressOrderInfoUser}</i>\r\n                                  </span>}\r\n                                    size=\"l\">\r\n                                    {this.props.checkedTypeDilivery === 0 ? \" Доставка курьером\" : \" Заберу заказ сам\"}\r\n                                </Cell>\r\n                                <Cell\r\n                                before={<Icon24Flash />}\r\n                                description={this.props.DataDeliveryInfo.typeOrderDate ? <i> В ближайшее время</i> :\r\n                                    <i> {dateObj.getDate()+' '+this.getMountsDate(dateObj.getMonth(),false)+' '+dateObj.getUTCFullYear()+'г. к '+this.props.DataDeliveryInfo.SelectTimePreorder}</i>\r\n                                }\r\n                                >\r\n                                    Время получения заказа\r\n                                </Cell>\r\n                                <Cell before={<Icon24Coins />}> Списано таймов: <b>{this.props.SalePoints}</b></Cell>\r\n                                {this.PriceInfoVisual()}\r\n                                <Cell before={<Icon24MoneyCircle />}> К оплате: <b className=\"OrangeColor\">{this.getSumCartItogo()} ₽</b></Cell>\r\n                            </List>\r\n                        </Group>\r\n                        <Group title=\"Способ оплаты\">\r\n                            <List>\r\n                                <Cell>\r\n                                    <Radio name=\"typePayments\" value=\"1\"\r\n                                           description=\"Оплата наличными при получении\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 1 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:1})}}>Наличные</Radio>\r\n                                    <Radio name=\"typePayments\" value='2' description=\"Оплата банковской картой, по терминалу\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 2 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:2})}}>Терминал</Radio>\r\n\r\n                                </Cell>\r\n                                <Cell>\r\n                                    <Div>\r\n                                        <NewOrderServer setStates={this.setState.bind(this)}\r\n                                                        userInfo={this.props.userInfo}\r\n                                                        DataOrderInfo={this.getDataOrder()}\r\n                                                        getPageOkOrderSet={this.props.setStates.bind(this)}\r\n                                                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                                        />\r\n                                    </Div>\r\n                                </Cell>\r\n                            </List>\r\n                        </Group>\r\n                    </div>\r\n                );\r\n                break;\r\n            default:\r\n                return(\r\n                    <Placeholder\r\n                        icon={<Icon56ErrorOutline />}\r\n                        action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Указать вариант получения</Button>}\r\n\r\n                    >\r\n                        <h2>Не указана дата и время получения</h2>\r\n                        <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите дату получения заказа.</p>\r\n                    </Placeholder>\r\n                );\r\n        }\r\n    }\r\n\r\n    checkPreorderType(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === false) {\r\n            if(this.props.DataDeliveryInfo.SelectDatePreorder === null){\r\n                return this.returnPlaceholderPreorder(false);\r\n            }else{\r\n                if(this.props.DataDeliveryInfo.SelectTimePreorder === null){\r\n                    return this.returnPlaceholderPreorder(false);\r\n                }else{\r\n                    return this.returnPlaceholderPreorder(true);\r\n                }\r\n            }\r\n\r\n        }else{\r\n            return this.returnPlaceholderPreorder(true);\r\n        }\r\n    }\r\n\r\n\r\n    checkTypeDiliveryInfo(){\r\n        if(this.props.checkedTypeDilivery === 0 && this.props.addressDefault === null){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Выбрать адрес</Button>}\r\n\r\n                >\r\n                <h2>Вы не выбрали адрес доставки</h2>\r\n                    <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите адрес доставки, либо адрес точки самовывоза, откуда Вам будет удобно забрать заказ.</p>\r\n                </Placeholder>\r\n\r\n            );\r\n        }else{\r\n            return (this.checkPreorderType());\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.checkMinSummaCart()\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentsPage;","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\nimport Dilivery from \"./Dilivery\";\r\n\r\nimport './styleCart.css';\r\n\r\nimport ButtonCart from \"../catalog/ButtonInCart\";\r\nimport PaymentsPage from \"./PaymentsPage\";\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass GetCartHome extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null,\r\n            LoadDopProduct:this.props.LoadDopProduct\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n    componentDidMount() {\r\n        async function PopupLoadDop(LoadStatus,setPopout){\r\n            if(LoadStatus === true) {\r\n                setPopout();\r\n            }else {\r\n                setPopout(null);\r\n            }\r\n        }\r\n\r\n        PopupLoadDop(this.state.LoadDopProduct,this.setPopout.bind(this));\r\n    }\r\n\r\n\r\n    ReloadDeliveryPay(){\r\n\r\n    }\r\n\r\n    GetPresetsVisual(){\r\n        if(Object.keys(this.props.PresetsDopProductList.list).length >0){\r\n            const ListPresets = this.props.PresetsDopProductList.list.map((datas,number)=>{\r\n                return(\r\n                    <div key={number+'PresetsTitle'}>{datas.title} -  {datas.count} {datas.typeCount}</div>\r\n                );\r\n            });\r\n            return(\r\n                <Group\r\n                title=\"В заказ так же входит\"\r\n                    style={{textAlign:\"center\",overflow: \"hidden\"}}>\r\n                    <img src={this.props.PresetsDopProductList.img}\r\n                         style={{\r\n                             float: \"left\",\r\n                             width: \"35%\",\r\n                             marginLeft:\"3%\",\r\n                             marginRight:\"3%\"\r\n                         }}\r\n                    />\r\n                    <Div style={{textAlign:\"left\",\"lineHeight\":\"2.1em\",paddingRight:\"0\"}}>{ListPresets}</Div>\r\n                </Group>\r\n            );\r\n        }else{\r\n            //console.log('oo',Object.keys(this.props.PresetsDopProductList.list).length);\r\n            return('');\r\n        }\r\n    }\r\n\r\n    DopProductListVisual(){\r\n        //console.log('Запускаемся');\r\n        if(Object.keys(this.props.DopProductList).length > 0) {\r\n            const ListDopProduct = Object.keys(this.props.DopProductList).map(\r\n                (datas,number) => {\r\n                    return (\r\n                        <div className=\"BlockOneDopProductCart\" key={datas}>\r\n                            <div className=\"imgDopProductBlock\">\r\n                                <img src={\"//sushi-time31.ru\"+this.props.DopProductList[datas].img} />\r\n                            </div>\r\n                            <div className=\"titleDopProductBlock\">\r\n                                {this.props.DopProductList[datas].title}\r\n                            </div>\r\n                            <div className=\"priceDopProductBlock WeightFontBold\">\r\n                                {this.props.DopProductList[datas].price} ₽\r\n                            </div>\r\n                            <div className=\"buttonDopProductBlock\">\r\n                                {this.getButtonDopProduct(\r\n                                    this.props.DopProductList[datas].id,\r\n                                    this.props.setDopProduct.bind(this),\r\n                                    this.getCountDopProductIcon(\r\n                                        this.props.DopProductList[datas].id,\r\n                                        this.props.DopProductUserSet\r\n                                    ),\r\n                                    this.props.DopProductList[datas].price\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n            );\r\n\r\n            return (\r\n                <Group title=\"Добавить к заказу\">\r\n                    <HorizontalScroll>\r\n                        <div key=\"AllDopProductBlock\"\r\n                             style={{display:\"flex\",paddingBottom:\"20px\"}}\r\n                        >{ListDopProduct}\r\n                            <div style={{display:\"block\",width:\"20px\",height:\"2px\",minWidth:\"2px\"}}></div>\r\n                        </div>\r\n                        <div className=\"clr\"></div>\r\n                    </HorizontalScroll>\r\n\r\n                </Group>\r\n            );\r\n        }else{\r\n            return (\"\");\r\n        }\r\n    }\r\n\r\n    getCountDopProductIcon(Prod,alls){\r\n        //console.log(Prod,alls);\r\n        if(Prod in alls){\r\n            return alls[Prod].count;\r\n        }else{\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    getButtonDopProduct(idProduct,setCart,counts = 0,price){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\" style={{float:\"none\",margin:\"auto\",display:\"block\",width:\"132px\"}}>\r\n                <div className=\"minus\" onClick={() => {\r\n                this.setState({\"LoadDopProduct\":true});\r\n                    setCart(idProduct,'-',price);\r\n                }}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {\r\n                    this.setState({\"LoadDopProduct\":true});\r\n                    setCart(idProduct,'+',price);}\r\n                }>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    setPopout(e){\r\n        if(e === ''){\r\n            // useState(<ScreenSpinner size='large' />);\r\n            this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n        }else{\r\n            // useState(e);\r\n            this.setState({popout: e});\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        function setPopout(e){\r\n            if(e === ''){\r\n                // useState(<ScreenSpinner size='large' />);\r\n                this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n            }else{\r\n                // useState(e);\r\n                this.setState({popout: e});\r\n            }\r\n        }\r\n\r\n       function go(e){\r\n         setActivePanel(e);\r\n         // setActivePanel(e.currentTarget.dataset.to);\r\n       };\r\n\r\n       function setActivePanel(e){\r\n           // useState(e);\r\n          // this.setState({activePanel: e});\r\n           this.ActivePanels(e);\r\n       }\r\n\r\n       function  getCartVisual(id, Products,setCart){\r\n           //setPopout(null);\r\n            if(Products.length<=0){\r\n                return(<div style={{\"textAlign\":\"center\",\"padding\":\"5px 10px\",\"marginTop\":\"30px\"}}><h2>Корзина пуста</h2><p>К сожалению, для того чтобы что-то заказать, Вам нужно положить этот товар в корзину!</p></div>);\r\n            }else {\r\n\r\n                var results = Products.map((cartProduct,idProducts) =>\r\n                    <div className=\"ProductInCartBlock\" key={\"blockProducts_\"+idProducts}>\r\n                        <div\r\n\r\n                        className=\"blockProduct\"\r\n                        style={{\r\n                            \"width\": \" 100%\",\r\n                            \"margin\": \"5% 0\",\r\n                            \"padding\": \"0%\",\r\n                            \"float\":\"none\",\r\n                            marginBottom:10\r\n                        }}\r\n                        >\r\n                            <div className=\"imgPrewieProduct\">\r\n                                <img src={cartProduct.img}/>\r\n                            </div>\r\n                            <div className=\"titleProduct\">\r\n                                {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                                {cartProduct.title} <span className=\"redTextP\">{cartProduct.type_info}</span>\r\n                            </div>\r\n                            <div className=\"DescrProduct2\">\r\n                                {cartProduct.description}\r\n                            </div>\r\n                            <div style={{clear:\"both\"}}>\r\n                                {/*Товаров: {cartProduct.count} <br/>*/}\r\n                                <span className=\"priceProduct\">Сумма: {getPriceProducts(cartProduct)}</span>\r\n                                <div className=\"priceProductBig\"style={{width:\"100%\",bottom:-8}}><ButtonCart CartProducts={Products} typeProduct2={cartProduct}\r\n                                                                             setCarts={setCart.bind(this)}/></div>\r\n                            </div>\r\n                        </div>\r\n                        <Separator style={{ margin: '20px 0' }} />\r\n                    </div>\r\n                );\r\n\r\n                return(<div className=\"CartBlockProducts\">{results}</div>);\r\n\r\n            }\r\n        }\r\n\r\n        function getDiliveryData(){\r\n            return (<div><h2>Доставка</h2></div>);\r\n        }\r\n\r\n\r\n        function getPriceProducts(cartProduct){\r\n          // console.log(cartProduct);\r\n            if(!(\"price_discount\" in cartProduct) || cartProduct.price_discount === false){\r\n                return (<span className=\"WeightFontBold\">\r\n                {cartProduct.count * cartProduct.price} ₽\r\n                </span>\r\n                );\r\n            }else{\r\n                return(\r\n                    <span className=\"WeightFontBold\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\",color:\"#c2c2c2\"}}>{cartProduct.count * cartProduct.price_discount.old_price} ₽</s>\r\n                        {cartProduct.count * cartProduct.price_discount.new_price} ₽\r\n                </span>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n\r\n        function getButtonNavigation(typeNav, action){\r\n\r\n           switch(typeNav){\r\n               case\"1\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button className=\"activeButons\" onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"2\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"3\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>; break;\r\n           }\r\n\r\n           return(\r\n               <HorizontalScroll>\r\n                   {ButtonBlock}\r\n               </HorizontalScroll>\r\n           );\r\n        }\r\n\r\n        function getOneStepCartNone(){\r\n           return(\r\n               <Panel id=\"home\">\r\n\r\n                   <Placeholder\r\n                       icon={<Icon56MarketOutline />}\r\n                       action={false}\r\n\r\n                   >\r\n                       <h2>Корзина пуста</h2>\r\n                       <p>Для совершения заказа, положите в нее хотя-бы 1 товар</p>\r\n                   </Placeholder>\r\n\r\n               </Panel>\r\n           );\r\n        }\r\n\r\n        function getOneStepCart(ProductList,setCart,sumCart,setState,GetPresetsVisual,DopProductList){\r\n           return (\r\n               <Panel id=\"home\" >\r\n               <PanelHeader theme=\"light\"> {getButtonNavigation('1', setState.bind(this))}</PanelHeader>\r\n               <Group title=\"Товары\">\r\n                <Div className=\"CartBlockProductsOneStep\">\r\n                {getCartVisual(\"homes\", ProductList, setCart.bind())}\r\n            <div style={{clear:\"both\"}}></div>\r\n            </Div>\r\n        </Group>\r\n                   {GetPresetsVisual}\r\n                   {DopProductList}\r\n        <Group>\r\n            <Div className=\"SumItogOneSTepCart\">Сумма итого: <span className=\"OrangeColor\">{sumCart} ₽</span></Div>\r\n        </Group>\r\n        <Div><Button size=\"xl\" onClick={()=> {setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button></Div>\r\n               </Panel>\r\n        );\r\n        }\r\n\r\n\r\n\r\n        return(\r\n            <View\r\n                activePanel={this.state.activePanel}\r\n                className={\r\n                    osName === IOS ?\r\n                        \"IOSCLASSCSS\"\r\n                        :\r\n                        \"AndroidCLASSCSS\"\r\n                }\r\n                popout={this.state.popout}\r\n                header={this.props.ProductList.length<=0\r\n                    ?\r\n                    false\r\n                    :\r\n                    true\r\n                }\r\n            >\r\n\r\n\r\n                    {this.props.ProductList.length<=0 ? getOneStepCartNone() :\r\n\r\n                        getOneStepCart(this.props.ProductList, this.props.setCart.bind(),this.props.sumCart, this.setState.bind(this),this.GetPresetsVisual(),this.DopProductListVisual())\r\n                    }\r\n\r\n                <Panel id=\"dilivery\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('2', this.setState.bind(this))}</PanelHeader>\r\n                    <Dilivery\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        getUserSystemInfo={this.props.getUserSystemInfo.bind()}\r\n\r\n                        addressDefault={this.props.addressDefault}\r\n                        setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n\r\n                        AffiliateDefault={this.props.AffiliateDefault}\r\n                        setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        setTypeDilivery={this.props.setTypeDilivery.bind(this)}\r\n\r\n                        commentary={this.props.commentary}\r\n                        setComment={this.props.setComment.bind(this)}\r\n\r\n                        countPerson={this.props.countPerson}\r\n\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                        getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                        /*Для вычисления суммы бесплатной доставки*/\r\n                        sumCart={this.props.sumCart}\r\n\r\n                        setPopout={this.setState.bind(this)}\r\n                        ProductList={this.props.ProductList}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n                        hideModals={this.props.hideModals.bind(this)}\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" stretched level=\"secondary\"  style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"home\"});}}>В корзину</Button>\r\n                        <Button size=\"l\" stretched className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"order\"});}}>К оплате</Button>\r\n                    </Div>\r\n                </Panel>\r\n                <Panel id=\"order\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('3', this.setState.bind(this))}</PanelHeader>\r\n                    <PaymentsPage\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        SalePoints={this.props.SalePoints}\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        sumCart={this.props.sumCart}\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        addressDefault={this.props.addressDefault}\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                        getReloadInfODeliveryPay={this.props.checkedTypeDilivery ? this.props.getDeliveryDataPriceItogAffiliate.bind(this) : this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n\r\n                        action={this.setState.bind(this)}\r\n\r\n                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" level=\"secondary\" stretched style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button>\r\n\r\n                    </Div>\r\n                </Panel>\r\n            </View>\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default GetCartHome;","import React from 'react';\r\nimport {Div, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport ProductList from \"./ProductList\";\r\n\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nclass CategoryList extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            loadingPage: true,\r\n            activePanel: 'brand',\r\n            products: [],\r\n            panelCategory: '',\r\n            ActiveCategory: 0,\r\n            productModal:[{\"title\":\"Название товара\",\"description\":\"Описание товара\",\"typeproduct\":\"0\",\"price\":\"1000\"}]\r\n        };\r\n        //console.log('А вот и перезагрузка');\r\n    }\r\n\r\n    hndlClick = (aP) => {\r\n        //console.log('--- ', 'Нажали на кнопку '+aP);\r\n        this.setState({ activePanel: aP })\r\n    };\r\n\r\n    setProductModal = (aP) => {\r\n       // console.log('--- ', 'Установили товар в модалку '+aP+' - - - -XTTT');\r\n        this.setState({ productModal: aP })\r\n    };\r\n\r\n    setActiveCategory = (aP) => {\r\n       // console.log('--- ', 'Установили категорию '+aP);\r\n        this.setState({ ActiveCategory: aP })\r\n    };\r\n\r\n\r\n    getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getButtonInCartProduct(typeProduct,setCart){\r\n        //console.log(this.props.CartProducts,'---0---');\r\n        if(!!this.props.CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            this.props.CartProducts.map((data,key)=>{\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  this.getCountButton(typeProduct,this.props.CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return this.getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return this.getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true});\r\n        this.setState({products:this.props.ProductsLists,loadingPage: false});\r\n        //console.log('Передали: ',this.props.ProductsLists);\r\n            }\r\n\r\n    classNameDivCategory(){\r\n        //console.log(this.props.queryParams.vk_platform);\r\n        if(this.props.queryParams.vk_platform == \"desktop_web\"){\r\n            return \"GroupBlockCategory DivBlockDesctopCategoys\";\r\n        }else{\r\n            return \"GroupBlockCategory\";\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n\r\n        function ModalProductInfo(OPT){\r\n            if(OPT.Loadings === false){\r\n               // console.log(OPT);\r\n                return(\r\n                    <div className=\"blockProduct\" style={{\"margin\":\"0\",\"textAlign\":\"left\",\"background\":\"#ffffff\"}}>\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            noShadow={false}\r\n                            left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                        >\r\n                            {escapeHtmlDecode(OPT.ProductInfo[0].title)}\r\n                        </PanelHeader>\r\n                        <Div id={'product_type_'+OPT.ProductInfo[0].type_info}>\r\n                            <div className=\"imgPrewieProduct\"><img src={OPT.ProductInfo[0].img} alt={OPT.ProductInfo[0].title}/></div>\r\n                            <div className=\"titleProduct\">{escapeHtmlDecode(OPT.ProductInfo[0].title)} <span className=\"redTextP\">{OPT.ProductInfo[0].type_info}</span></div>\r\n                            <div className=\"DescrProduct\">{escapeHtmlDecode(OPT.ProductInfo[0].description)}</div>\r\n                            <div className=\"priceProductBig\">{getPriceProducts(OPT.ProductInfo[0])}\r\n                                {OPT.getButtonInCartProduct(OPT.ProductInfo[0],OPT.setCart)}\r\n                            </div>\r\n                        </Div>\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <div>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                    >Ошибка</PanelHeader>\r\n                        <div style={{\"textAlign\":\"center\",\"padding\":\"5% 0\"}}>Ошибка, вернитесь назад</div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        function getPriceProducts(typeProduct){\r\n            if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n                return (<span className=\"priceProduct\">\r\n                {typeProduct.price} ₽\r\n                </span>\r\n                );\r\n            }else{\r\n                return(\r\n                    <span className=\"priceProduct\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\"}}>{typeProduct.price_discount.old_price} ₽</s>\r\n                        {typeProduct.price_discount.new_price} ₽\r\n                </span>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        function GetCategorys(OPT){\r\n            //console.log('Грузим каталог');\r\n            if(OPT.Loadings === false) {\r\n               // console.log(OPT,'-0-0-0-');\r\n               // console.log('Загрузилось', OPT.CategoryList);\r\n                //console.log('Товары ', OPT.CategoryList[OPT.ShowCategory].ProductList);\r\n                return (<div style={{background:\"#FFFFFF\"}}>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>Назад</HeaderButton>}\r\n                    >\r\n                        {OPT.CategoryList[OPT.ShowCategory].Title}\r\n                    </PanelHeader>\r\n                    <ProductList\r\n                        onClickProduct={OPT.ClickProduct.bind(this)}\r\n                        productsLists={OPT.CategoryList[OPT.ShowCategory].ProductList} key={OPT.CategoryList[OPT.ShowCategory].id_Category}\r\n                        idCategorys={OPT.ShowCategory}\r\n                        nameCategory=\"sets\"\r\n                        setCart={OPT.setCart.bind(this)}\r\n                        getButtonInCartProduct={OPT.getButtonInCartProduct.bind(this)}\r\n                        setProductModal={OPT.setProductModal.bind(this)}\r\n                    />\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <PanelHeader>Ошибка</PanelHeader>\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        function GetBrandPanels(OPT,Loadings){\r\n           // console.log(OPT,' - - - категории грузим',OPT.Loadings);\r\n\r\n\r\n            if(CategoryList.length === 0){\r\n                return '';\r\n            }else {\r\n                if(OPT.Loadings === false) {\r\n                    //ProductObject = Object.keys(OPT.CategoryList);\r\n                    //console.log('Преобразовали',ProductObject);\r\n                    // const ArrayBrands = Object.keys(OPT.CategoryList).map((CategoryProdcuts, key) =>\r\n                    const ArrayBrands = Object.keys(OPT.CategoryList).map((idCategorys, key) =>\r\n\r\n                        <Div\r\n                            style={{\"background\":\"linear-gradient( rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4) ), url(//sushi-time31.ru/images/API_IMG/\"+OPT.CategoryList[idCategorys].imgCategory+\")\",\"backgroundSize\":\"100%\"}}\r\n                            className=\"DivCategoryBlock\"\r\n                            key={key+'_'+idCategorys}\r\n                            onClick={\r\n                                () => {\r\n                                    OPT.ActiveCategory(idCategorys);\r\n                                    OPT.ClickCategory('Panels_38');\r\n                                }\r\n                            }\r\n                        >\r\n                            {OPT.CategoryList[idCategorys].Title}\r\n                        </Div>\r\n                    );\r\n                    return ArrayBrands;\r\n                }\r\n                else {\r\n                    return 'Loading ...';\r\n                }\r\n                // return '';\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        const osname = platform();\r\n\r\n        return (\r\n            <View activePanel={this.state.activePanel}>\r\n                <Panel id=\"brand\">\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                    >\r\n                        Категории\r\n                    </PanelHeader>\r\n                    <Group>\r\n                        <Div className=\"logoBlock\">\r\n                            <img src=\"//sushi-time31.ru/images/API_IMG/logo_susshi_time.png\"/>\r\n                            {this.props.queryParams.vk_platform == \"desktop_web\"\r\n                                ?\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a>+7 (4722) 777-498</a>\r\n                                </Div>\r\n                                :\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a href=\"tel:+74722777498\">Позвонить</a>\r\n                                </Div>\r\n                            }\r\n                        </Div>\r\n                        <div id=\"SliderHeader\">\r\n                            {this.props.sliderHeader()}\r\n                        </div>\r\n                    </Group>\r\n                        <Group\r\n                            //title=\"Выбери категорию\"\r\n                            className={this.classNameDivCategory()} >\r\n                        <GetBrandPanels key=\"BrandPanels\" CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)} ActiveCategory={this.setActiveCategory.bind(this)}/>\r\n                    </Group>\r\n                </Panel>\r\n                {/*{this.state.loadingPage ? <Panel id=\"Panels_38\" />  : <Panel id=\"Panels_38\" ><PanelHeader >Суши</PanelHeader></Panel> && <GetCategory CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)}/>}*/}\r\n                <Panel id=\"Panels_38\">\r\n                    <GetCategorys\r\n                        CategoryList={this.state.products}\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickCategory={this.hndlClick.bind(this)}\r\n                        ClickProduct={this.hndlClick.bind(this,'Panels_Product')}\r\n                        setProductModal={this.setProductModal.bind(this)}\r\n                        ShowCategory={this.state.ActiveCategory}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                    />\r\n                </Panel>\r\n                <Panel id=\"Panels_Product\">\r\n\r\n                    <ModalProductInfo\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickBack={this.hndlClick.bind(this)}\r\n                        ProductInfo={this.state.productModal}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                    />\r\n                </Panel>\r\n                {/*<Panel id=\"Panels_38\" />*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}*/}\r\n                {/*    >*/}\r\n                {/*        Cуши*/}\r\n                {/*    </PanelHeader>*/}\r\n\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sushi\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"light2\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Роллы*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"roli\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Сеты*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sets\" idCategorys=\"0\"/>*/}\r\n                {/*</Panel>*/}\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CategoryList;","import React, {useEffect} from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n//import ModalProduct from './panels/ModalProduct';\r\nimport CategoryList from './CategoryList';\r\n//import App from \"./Profile\";\r\n\r\nconst CatalogProduct = (OPT) => {\r\n    // const [activePanel, setActivePanel] = useState('home');\r\n    // const [fetchedUser, setUser] = useState(null);\r\n    // const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\r\n\r\n    useEffect(() => {\r\n        // connect.subscribe(({ detail: { type, data }}) => {\r\n        //     if (type === 'VKWebAppUpdateConfig') {\r\n        //         const schemeAttribute = document.createAttribute('scheme');\r\n        //         schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n        //         document.body.attributes.setNamedItem(schemeAttribute);\r\n        //     }\r\n        // });\r\n        async function fetchData() {\r\n            // const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            // setUser(user);\r\n            // setPopout(null);\r\n           // console.log(OPT.ProductsLists,'--- ВОТ');\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n            <CategoryList setCart={OPT.setCart.bind(this)} CartProducts={OPT.CartProducts} ProductsLists={OPT.ProductsLists} sliderHeader={OPT.sliderHeader.bind(this)} queryParams={OPT.queryParams}/>\r\n    );\r\n\r\n};\r\n\r\nexport default CatalogProduct;\r\n\r\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './StartPageVKapp';\n// import App from './App2';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert, Div,Input,FormLayout, Button, Select } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass FormNewAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                city: '',\r\n                street: '',\r\n                home: '',\r\n                entrance: '',\r\n                level: '',\r\n                flat: '',\r\n                comment:''\r\n        }\r\n\r\n        this.addressItems = [\r\n            // { label: 'Город', name: 'city', statusChech:'yes', minValue:5, valPls:'' },\r\n            { label: 'Название улицы', name: 'street', statusChech:'yes', minValue:4, valPls:'' },\r\n            { label: '№ дома', name: 'home', statusChech:'yes', minValue:0, valPls:'' },\r\n            { label: '№ квартиры/офиса', name: 'flat', statusChech:'', minValue:0, valPls:'' },\r\n            { label: '№ подъезда', name: 'entrance', statusChech:'', minValue:0, valPls:'' },\r\n            { label: 'Этаж', name: 'level', statusChech:'', minValue:0, valPls:''},\r\n            { label: 'Примечание', name: 'comment', statusChech:'', minValue:0, valPls:'Пример: Квартира сестры' }\r\n        ];\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.openDefault = this.openDefault.bind(this);\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n\r\n        if(this.props.AddressEdit){\r\n            this.state = {\r\n                    id:this.props.AddressEdit.id,\r\n                    city: this.props.AddressEdit.city,\r\n                    street: this.props.AddressEdit.street,\r\n                    home: this.props.AddressEdit.home,\r\n                    entrance: this.props.AddressEdit.podezd,\r\n                    level: this.props.AddressEdit.etaj,\r\n                    flat: this.props.AddressEdit.kvartira,\r\n                    comment: this.props.AddressEdit.comment\r\n                }\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n       // console.log(this.state);\r\n    }\r\n\r\n\r\n    openDefault () {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Исправить',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Не все поля адреса заполнены</h2>\r\n                    <p>Внимательно заполните все поля, для сохранения адреса доставки!</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n\r\n    saveNewAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://sushi-time31.ru/api/setAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n    saveEditAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://sushi-time31.ru/api/editAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            //this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n    getCitySelect(idCity,def = null){\r\n        if(idCity in global.CityListBind) {\r\n            const ListCityOrigin = global.CityListBind[idCity].listCity;\r\n            const ListCitys = Object.keys(global.CityListBind[idCity].listCity);\r\n            const ListOption = ListCitys.map((data, key) => {\r\n                return (<option\r\n                    key={key}\r\n                    value={ListCityOrigin[data].title}\r\n                >\r\n                    {\r\n                        ListCityOrigin[data].title\r\n                    }\r\n                </option>);\r\n            });\r\n            return (\r\n                ListOption\r\n            );\r\n        }else{\r\n            return (\"\");\r\n        }\r\n    }\r\n\r\n    getNulledForm(){\r\n        return(\r\n            <FormLayout>\r\n                <Select placeholder=\"Город / Населенный пункт\" onChange={this.onChange} name=\"city\" key={\"input_city\"} top=\"Город\">\r\n                    {this.getCitySelect(1)}\r\n                </Select>\r\n                {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                    <Input\r\n                        type=\"text\"\r\n                        name={name}\r\n                        key={\"input_\"+name}\r\n                        top={label}\r\n                        onChange={this.onChange}\r\n                        status={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >=minValue  ? 'valid' : 'error'\r\n                                    : 'error'\r\n                                : \"\"\r\n                        }\r\n                        bottom={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >=minValue  ? '' : 'Введенные значение не корректно '+this.state[name].length\r\n                                    : 'Обязательно к заполнению'\r\n                                : \"\"\r\n                        }\r\n                        placeholder={valPls}\r\n                    />\r\n                ))}\r\n                <Button size=\"l\" style={{background:\"#ff7300\"}} onClick={()=>{this.saveNewAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Подтвердить адрес</Button>\r\n            </FormLayout>\r\n        );\r\n    }\r\n\r\n\r\n    getEditForm(){\r\n        return(\r\n            <FormLayout>\r\n                <Select placeholder=\"Город / Населенный пункт\" onChange={this.onChange} name=\"city\" key={\"input_city\"} top=\"Город\" defaultValue={this.state.city}>\r\n                    {this.getCitySelect(1)}\r\n                </Select>\r\n                {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                    <Input\r\n                        type=\"text\"\r\n                        name={name}\r\n                        key={\"input_\"+name}\r\n                        top={label}\r\n                        onChange={this.onChange}\r\n                        status={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >minValue  ? 'valid' : 'error'\r\n                                    : 'error'\r\n                                : \"\"\r\n                        }\r\n                        value={this.state[name]}\r\n                        bottom={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >minValue  ? '' : 'Введенные значение не корректно'\r\n                                    : 'Обязательно к заполнению'\r\n                                : \"\"\r\n                        }\r\n                        placeholder={valPls}\r\n                    />\r\n                ))}\r\n                <Button size=\"l\" style={{background:\"#ff7300\"}} onClick={()=>{this.saveEditAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Завершить редактирование</Button>\r\n            </FormLayout>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Div>\r\n                {this.props.AddressEdit ? this.getEditForm() : this.getNulledForm()}\r\n            </Div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default FormNewAddress;","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\n\r\nexport default function ButtonInCart({CartProducts,typeProduct2,setCarts}){\r\n\r\n    function getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getButtonInCartProduct(typeProduct,setCart){\r\n       // console.log(CartProducts,'---0---',typeProduct,setCart);\r\n        if(!!CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            CartProducts.map((data,key)=>{\r\n                //console.log(data.id_Product,typeProduct.id_Product, data.type_product,typeProduct.type_product,'++++++++++++++++++');\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  getCountButton(typeProduct,CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return(getButtonInCartProduct(typeProduct2,setCarts));\r\n\r\n}\r\n","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nexport default function OneProduct({product,idCategory, ClickProduct, setCart, setProductModal, getButtonInCartProduct}) {\r\n// console.log('ут должна функция должна быть',ClickProduct);\r\n    // const ArrayProducts = product.map(oneProduct =>\r\n    //     //<OneProduct key={oneProduct.id} product={oneProduct} />\r\n    //     <Div className=\"blockProduct\" key={\"id_product_\"+oneProduct.id_Product}>\r\n    //         <Div className=\"imgPrewieProduct\"><img alt={oneProduct.title} src={oneProduct.img}/></Div><Div className=\"titleProduct\">{oneProduct.title}</Div><Div className=\"DescrProduct\">{oneProduct.description}</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">{oneProduct.price} руб.</span></Div>\r\n    //     </Div>\r\n    // );\r\n\r\n    // console.log(key);\r\n\r\n    function escapeHtml(text) {\r\n        var map = {\r\n            '&': '&amp;',\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '\"': '&quot;',\r\n            \"'\": '&#039;'\r\n        };\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n\r\n    function number_format(number, decimals, dec_point, separator ) {\r\n        number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\r\n        var n = !isFinite(+number) ? 0 : +number,\r\n            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n            sep = (typeof separator === 'undefined') ? ',' : separator ,\r\n            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n            s = '',\r\n            toFixedFix = function(n, prec) {\r\n                var k = Math.pow(10, prec);\r\n                return '' + (Math.round(n * k) / k)\r\n                    .toFixed(prec);\r\n            };\r\n        // Фиксим баг в IE parseFloat(0.55).toFixed(0) = 0;\r\n        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))\r\n            .split('.');\r\n        if (s[0].length > 3) {\r\n            s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n        }\r\n        if ((s[1] || '')\r\n            .length < prec) {\r\n            s[1] = s[1] || '';\r\n            s[1] += new Array(prec - s[1].length + 1)\r\n                .join('0');\r\n        }\r\n        return s.join(dec);\r\n    }\r\n\r\n    function getWeightProduct(Product_Weight,Product_WeightType){\r\n        if(Product_WeightType != 'л'){\r\n            return(\r\n                number_format(Product_Weight,'0','.', ' ')+' '+Product_WeightType\r\n            );\r\n        }else{\r\n            return(\r\n                Product_Weight+' '+Product_WeightType\r\n            );\r\n        }\r\n    }\r\n\r\n    function getModyficateBlock(ArrayMod){\r\n        var ListMod = Object.keys(ArrayMod);\r\n        if(ListMod.length <=0){\r\n            return \"\";\r\n        }else{\r\n            var VisualList = ListMod.map((datas,keys)=>{\r\n                return (<div key={keys} className=\"ModyficateProduct\"><img src={ArrayMod[datas].mod_img} /></div>);\r\n            });\r\n            return(\r\n                <div className=\"ModyficateBlock\">{VisualList}</div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function getProductDiv(productList,idCategory,ClickProduct,setCart,setProductModal ,getButtonInCartProduct){\r\n\r\n         //console.log(ClickProduct,'в корзину функция');\r\n        var ProductCat = productList;\r\n\r\n        const WeightProduct = '';\r\n\r\n\r\n\r\n        const ArrayProducts = ProductCat.map((typeProduct,idTypeProduct) =>\r\n            <Div key={\"blockProducts_\"+typeProduct.id_Product+\"_\"+idTypeProduct} className=\"blockProduct\" id={\"id_product_\"+typeProduct.id_Product+\"_type_\"+typeProduct.type_product}>\r\n                {getModyficateBlock(typeProduct.modyficate)}\r\n                <Div className=\"imgPrewieProduct\">\r\n                    <img\r\n                        alt={typeProduct.title}\r\n                        src={typeProduct.img}\r\n                        onClick={() =>{\r\n                            ClickProduct('Panels_Product');\r\n                            setProductModal([typeProduct]);\r\n                            console.log('Нажали на фотку',ProductCat,idTypeProduct)}\r\n                        }\r\n                    />\r\n                </Div>\r\n                <Div className=\"titleProduct\">\r\n                    {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                    {escapeHtmlDecode(typeProduct.title)}\r\n                    <span className=\"redTextP\">\r\n                        {getWeightProduct(typeProduct.weight,typeProduct.weight_type)}\r\n                    </span>\r\n                </Div>\r\n                <Div className=\"DescrProduct\">\r\n                    {escapeHtmlDecode(typeProduct.description)}\r\n                    <div>\r\n                    </div>\r\n                    {typeProduct.type_info != '' ?\r\n                        <div className=\"WeightBlock\">\r\n                            {typeProduct.type_info}\r\n                        </div>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                </Div>\r\n                <Div className=\"priceProductBig\">\r\n\r\n                        {getPriceProducts(typeProduct)}\r\n\r\n                    {getButtonInCartProduct(typeProduct,setCart)}\r\n                </Div>\r\n            </Div>\r\n        );\r\n\r\n\r\n        return ArrayProducts;\r\n    }\r\n\r\n    function getPriceProducts(typeProduct){\r\n        if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n            return (<span className=\"priceProduct\">\r\n                {number_format(typeProduct.price,'0','.',' ')} ₽\r\n                </span>\r\n            );\r\n        }else{\r\n            return(\r\n                <span className=\"priceProduct\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\"}}>{number_format(typeProduct.price_discount.old_price,'0','.',' ')} ₽</s>\r\n                    {number_format(typeProduct.price_discount.new_price,'0','.',' ')} ₽\r\n                </span>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        getProductDiv(product,idCategory,ClickProduct, setCart , setProductModal, getButtonInCartProduct)\r\n    );\r\n}"],"sourceRoot":""}