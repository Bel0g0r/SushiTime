{"version":3,"sources":["panels/Cart/PaymentsPage.js","panels/Cart/CartHome.js","StartPageVKapp.js","panels/ProfileUser/UserOrderList.js","panels/ProfileUser/OrderTypeList.js","panels/ProfileUser/OrderShowDeail.js","panels/Notice/index.js","panels/catalog/CatalogProduct.js","panels/catalog/CategoryList.js","panels/catalog/ProductList.js","panels/Cart/Dilivery.js","panels/Cart/DiliveryAddress.js","panels/Cart/GetOneAddress.js","panels/Cart/GetOneAddressOff.js","panels/Cart/AffiliateList.js","panels/Cart/GetOneAffiliateAddress.js","panels/preorder/index.js","panels/noPreorder/index.js","panels/Cart/NewOrderServer.js","panels/ProfileUser/UserInfo.js","panels/Persik.js","panels/Nopersik.js","panels/Profile.js","index.js","img/persik.png","panels/Cart/FormNewAddress.js","panels/global/index.js","panels/catalog/ButtonInCart.js","panels/catalog/OneProduct.js"],"names":["PaymentsPage","props","state","SalePoints","value2","statusNewOrder","getReloadInfODeliveryPay","this","setState","setStates","options","i","userSystemInfo","dataUser","point","push","value","key","points","step","min","max","Number","onChange","setPointsDefaultsSale","top","e","target","String","style","display","justifyContent","size","stretched","marginRight","marginLeft","className","before","sum","sumCart","DataDeliveryInfo","DeliveryPriceItog","priceDelivery","errorOrderFinal","icon","action","minSumOrder","checkTypeDiliveryInfo","Object","keys","listAddressGlobal","length","listAddressU","DataSetAddress","id","listAffiliateGlobal","typeOrderDate","checkPreorderActive","DataOrder","DataAddressDelivery","getAddressDelivery","addressDefault","DataAddressAffiliate","getAddressAffiliate","AffiliateDefault","idUserVK","userInfo","typeDelivery","checkedTypeDilivery","AddressDelivery","idAffiliatePickup","PointsSale","DeliverySum","Comments","comments","DopInfo","commentary","typePay","countPerson","cart","DopProductUserSet","Preorder","SelectDatePreorder","SelectTimePreorder","a","b","dateObj","Date","title","getCountsTimeBonus","description","addressOrderInfoUser","getDate","getMountsDate","getMonth","getUTCFullYear","PriceInfoVisual","getSumCartItogo","name","defaultChecked","onClick","NewOrderServer","bind","DataOrderInfo","getDataOrder","getPageOkOrderSet","setOkNewOrderView","level","activePanel","returnPlaceholderPreorder","checkPreorderType","checkMinSummaCart","React","Component","osName","platform","GetCartHome","popout","LoadDopProduct","LoadStatus","setPopout","async","PresetsDopProductList","list","ListPresets","map","datas","number","count","typeCount","textAlign","overflow","src","img","float","width","paddingRight","DopProductList","ListDopProduct","price","getButtonDopProduct","setDopProduct","getCountDopProductIcon","paddingBottom","height","minWidth","Prod","alls","idProduct","setCart","counts","Buttons","margin","getCartVisual","Products","results","cartProduct","idProducts","marginBottom","type_info","clear","price_discount","fontWeight","fontSize","color","old_price","new_price","getPriceProducts","bottom","CartProducts","typeProduct2","setCarts","getButtonNavigation","typeNav","ButtonBlock","data-to","IOS","header","ProductList","GetPresetsVisual","theme","getOneStepCart","DopProductListVisual","Dilivery","getUserSystemInfo","setAddressDefault","setAffiliateDefault","setTypeDilivery","setComment","setDeliveryDataItogs","getDeliveryDataPriceItogAffiliate","showModal","hideModals","DataDeliveryInfoPay","require","App","parseQueryString","string","slice","split","queryParam","kvp","reduce","query","AudioInfo","ReloadBasket","Audio","countReloadBasket","Notice","CountNotice","CountNoticeNoView","typeOrderGetText","typeOrderGet","numberOrderShow","listOrderUser","ParamStart","products","loadingCatalog","activeStory","activePanelOrders","loadingPage","user","error","countCartProduct","dopPresets","imgListPresets","activeModal","formNewAddressData","formEditAddressData","minSumFreeDelivery","DeliveryAddressOKCity","newOrderStats","StatusLoadSlide","slideHeaderArray","slideIndex","StatusNotification","CityListBind","settingsFilterSearch","typeSearch","global","onStoryChange","axios","method","url","ApiKey","responseType","then","data","ListCitySelect","catch","err","console","log","idUsers","CountNoticeNoCheck","result","type","idNotice","getNotice","getCartDB","as","bs","currentTarget","dataset","story","aa","sumCartItog","CPr","getSumCartOnDiscount","SumDopsProduct","n","document","cookie","typeProduct","vk_platform","headers","typeSlide","getTypeSlideGet","setSlideArray","listSlide","ArraySlide","status","StatusReloadBasketData","JSON","stringify","ArraySlides","Bullets","AutoPlays","SliderVisual","maxWidth","autoplay","slideWidth","bullets","getSlideHeaderArray","setTimeout","reloadSlideHeaderSetTime","connect","sendPromise","response","is_allowed","PushClick","AllNotice","setNotice","setNoticeServer","DeleteNotifi","OffPushNotyfication","OnPushNotyfication","getStatusNotificate","getCityUser","setUser","fetchData","setInterval","getIntervalCart","setHashDataReload","dataOld","dataNew","ListProduct","setCountCartVisal","ListDopPresets","listPresetProduct","imgPresetProduct","id_user","loading","ia","listProduct","errorInfo","ListOld","ListNew","ListPresetsOld","ListPresetsNew","DopPresetsData","statusBasket","statusPresets","ReloadBasketDataFN","PlayInfoAudio","ListDopOld","ListDopNew","ReloadBasketDataDopPresets","audio","stop","play","setUserSystem","JsonBasket","basketJson","tE","countPlus","setcountCartProduct","noAdd","cartProducts","id_Product","type_product","setcountCartProductVar","splice","setDataServer","btoa","encodeURI","setCartServer","HashParam","window","location","hash","newHeight","screen","send","setHashNew","def","some","queryParams","search","modal","onClose","setModal","right","dynamicContentHeight","caption","actions","getFilterBlockModal","osname","countNoticeView","tabbar","selected","data-story","text","label","getSuccesOrderPage","userData","setTypeOrderList","left","addon","setOrderShowNumber","listOrderUserSet","idOrderDetail","OrderDatas","ProductsLists","sliderHeader","getSliderGalery","noShadow","getDeliveryDataPriceItog","setTypeOrderDate","getNotificationPage","go","dataUsers","setStatusNotification","setShowUserOrderList","UserOrderList","loadOrders","getAllGroups","OrderTypeList","getOrderUserSystem","countOrder","Pr","reduceRight","arr","last","index","coll","concat","typeNumber","iconsD","countOrders","ListOrder","ReverceList","dataOrder","keyOrder","CurrentOrder","statusY","status_order","delete_order","summaOrders","sum_order","date","time","id_order","getOrderType","getNowOrder","getOldOrder","getCancelledOrder","getOneTypeOrders","OrderShowDetail","ststusReturn","statusOld","statusReal","ststusReturns","Order","pre_order","date_pre_order","replace","m","sale_price","product_price","Price_sales","discount_amount","Discount","indicator","cost","escapeHtmlDecode","product_title","price_product","title_product","title_gift_product","dilivery","dilivery_type","Address","dilivery_adres","PriceDeli","dilivery_price","TextDel","affiliate","affiliate_info","promo_status","PromoInfo","promo_code","promo_info","point_out","point_in","OrderId","padding","setRepeatOrder","alert","StatusIcon","getStatusIconText","detailText","getStatusOrderReal","getStatusOrderText","status_order_real","payment","type_pay","getPerson","person","getInfoPointsOrder","getInfoPreorderBlock","getInfoPromokod","promo","getOrderComposition","productList","getOrderDopComposition","dopProductList","getOrderGiftComposition","giftProductList","getOrderDeliveryInfo","getComment","Comment","getRepeatOrder","statusView","Data","setNoticeData","asideContent","getImagesNotice","dangerouslySetInnerHTML","__html","NoteNotice","CatalogProduct","OPT","useEffect","CategoryList","hndlClick","aP","setProductModal","productModal","setActiveCategory","ActiveCategory","panelCategory","searchProduct","ButOk","id_CartPr","getCountButton","getInCarts","href","classNameDivCategory","Loadings","idCategorys","imgCategory","ClickCategory","Title","after","background","ShowCategory","onClickProduct","ClickProduct","productsLists","id_Category","nameCategory","getButtonInCartProduct","ClickBack","ProductInfo","alt","testInput","re","str","toLowerCase","compare","ArrayProducts","ClickProductF","ReverceStatus","SearchText","CatalogLists","ReverceCatalog","sort","comparePrice","DSr","Objs","retr","forEach","oneProduct","keyId","array","SearchProductTitle","SearchProductDescription","ListIdProduct","modyficate","mod","testType","SearchProductType","product","GetSets","ArrayPr","SearchState","names","ProductArray","GetSushi","GetRoli","GetNoneCat","nameCategorys","idCategory","blueBackground","backgroundColor","UserCard","phone","email","CheckSMSCode","phoneValue","codeValue","resultVerificationCode","tooltip","snackbar","showBTNNewAddress","showFormNewAddress","openBase","phone_number","layout","fill","phoneVerification","VerificationCode","event","types","values_count","getDataCountPerson","readOnly","placeholder","getValueInputCode","checkVerificationCode","defaultValue","getValueInputPhone","setVerificationPhone","getButtonTypeOrder","DataInfos","getButtonTypeDilivery","getListAddress","getListAffiliate","getPreorderBlock","getCountPersonInput","getCommentsTextarea","setShowBTNNewAddress","showModals","getCommentsData","Param","getNoneCartProduct","getInfoUserAuth","getInfoUserNoneAuth","getOkListAddress","DiliveryAddress","listAddress","listAddressOff","addressOk","dataAddress","getAddressUserSystem","AddressEdit","delUpdate","id_UserVK","getFormNewAddress","ListAddressNoDelivery","listAddressGlobalOff","getAddressUsers","city","street","home","diliveryData","priceDilivery","min_sum_order","min_sum_free_dilivery","setDataDiliveryPrice","setAddressInfoUsers","setDataDeliveryPrice","setAddressEdit","AddresInfo","NumberAddress","dataAddressOff","dataAddress2","keyId2","getListAddressVisual","GetOneAddress","AddressN","closePopout","comment","addressInfo","result_add","autoclose","deletedAddress","podezd","etaj","kvartira","openDefault","getAddressFull","getAddressTitle","defaultCheckedR","GetOneAddressOff","disabled","AffiliateList","listAffiliate","addressAffiliateOk","dataAffiliate","id_City","listOffAffiliate","GetOneAffiliateAddress","operating_mode","loadBlockPreorder","listDatePreorder","onChangeS","getDateList","ListDate","getSelectTime","ListTimes","timeList","ListTime","times","false","getSelectDate","getBlockPreorder","NoPreorder","loadBlockOrder","getBlocknoPreorder","UserInfo","them","fetchedUser","photo_200","first_name","last_name","checked","textDecoration","getPanelProfil","ProfileUserPage","useState","setActivePanel","to","setActivePanels","ReactDOM","render","getElementById","module","exports","FormNewAddress","entrance","flat","addressItems","statusChech","minValue","valPls","idCity","ListCityOrigin","listCity","ListCitys","ListOption","getCitySelect","saveNewAddress","saveEditAddress","getEditForm","getNulledForm","ii","ButtonInCart","OneProduct","number_format","decimals","dec_point","separator","isFinite","prec","Math","abs","sep","dec","s","k","pow","round","toFixed","toFixedFix","Array","join","ProductCat","idTypeProduct","ArrayMod","ListMod","VisualList","mod_img","getModyficateBlock","Product_Weight","weight","Product_WeightType","weight_type","getProductDiv"],"mappings":"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","file":"static/js/main.7cd44f5c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport NewOrderServer from './NewOrderServer';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Info from '@vkontakte/icons/dist/24/info';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Flash from '@vkontakte/icons/dist/24/flash';\r\n\r\nclass PaymentsPage extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            SalePoints:this.props.SalePoints,\r\n            value2:0,\r\n            statusNewOrder:'11'\r\n        }\r\n\r\n        this.props.getReloadInfODeliveryPay();\r\n    }\r\n\r\n    setPointsDefaultsSale(SalePoints){\r\n        SalePoints = SalePoints*1;\r\n        this.setState({SalePoints});\r\n        this.props.setStates({SalePoints:SalePoints});\r\n    }\r\n\r\n    options () {\r\n        let options = [];\r\n        for (let i = 0; i <= this.props.userSystemInfo.dataUser.point*1; i += 1) {\r\n            options.push(<option value={`${i}`} key={`${i}`}>{i}</option>)\r\n        }\r\n        return options;\r\n    }\r\n\r\n    getCountsTimeBonus(){\r\n        var points = this.props.userSystemInfo.dataUser.point*1;\r\n        if(points >0){\r\n            return(\r\n                <div>\r\n                        <Div>Доступно таймов для списания: <b>{points}</b></Div>\r\n                    <FormLayout>\r\n                        <Slider\r\n                            step={1}\r\n                            min={0}\r\n                            max={points}\r\n                            value={Number(this.state.SalePoints)}\r\n                            onChange={(SalePoints)=> this.setPointsDefaultsSale(SalePoints)}\r\n                            top=\"Списать в оплату\"\r\n                        />\r\n                        <Select onChange={e => this.setPointsDefaultsSale(e.target.value)} value={String(this.state.SalePoints)}>\r\n                            {this.options()}\r\n                        </Select>\r\n\r\n                    <div style={{display: 'none',justifyContent:'center'}}>\r\n                        <Button size=\"l\" stretched style={{marginRight: 10}}>Выбранное кол-во</Button>\r\n                        <Button size=\"l\" stretched style={{marginLeft: 10}}>Списать все</Button>\r\n                    </div>\r\n                    </FormLayout>\r\n                </div>);\r\n        }else{\r\n            return(<Cell className=\"IconColorOrange\" before={<Icon24Coins />}> К сожалению у Вас <b>0</b> таймов</Cell>);\r\n        }\r\n    }\r\n\r\n    getSumCartItogo(){\r\n        var sum = this.props.sumCart-this.props.SalePoints;\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog) {\r\n            sum = sum + (this.props.DataDeliveryInfo.priceDelivery * 1);\r\n        }\r\n        if(sum<0){sum = 0;}\r\n        return (sum);\r\n    }\r\n\r\n\r\n    checkMinSummaCart(){\r\n        if(this.props.DataDeliveryInfo.errorOrderFinal){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={false}\r\n\r\n                >\r\n                    <h2>Сумма минимального заказа {this.props.DataDeliveryInfo.minSumOrder} рублей</h2>\r\n                    <p>Мы не можем принять Ваш заказ, так как сумма Вашей покупки, меньше необходимой</p>\r\n                </Placeholder>\r\n            );\r\n        }else{\r\n            return(\r\n                this.checkTypeDiliveryInfo()\r\n            );\r\n        }\r\n    }\r\n\r\n    PriceInfoVisual(){\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog){\r\n            return(\r\n                <Cell before={<Icon24Info />}> Стоимость доставки: <b>{this.props.DataDeliveryInfo.priceDelivery} ₽</b></Cell>\r\n            );\r\n        }else{\r\n            return('');\r\n        }\r\n    }\r\n\r\n    getAddressDelivery(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAddressGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAddressGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAddressGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getAddressAffiliate(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAffiliateGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getDataOrder(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === true) {\r\n            var checkPreorderActive = false;\r\n        }else{\r\n            var checkPreorderActive = true;\r\n        }\r\n        var DataOrder = {};\r\n\r\n        var DataAddressDelivery = this.getAddressDelivery(this.props.DataDeliveryInfo.addressDefault);\r\n        var DataAddressAffiliate = this.getAddressAffiliate(this.props.DataDeliveryInfo.AffiliateDefault);\r\n\r\n        DataOrder.idUserVK = this.props.userInfo.id;\r\n        DataOrder.typeDelivery = this.props.DataDeliveryInfo.checkedTypeDilivery;\r\n        DataOrder.AddressDelivery = {\"Info\":DataAddressDelivery,\"idAddress\":DataAddressDelivery.id};\r\n        DataOrder.idAffiliatePickup = {\"Info\":DataAddressAffiliate,\"idAffiliate\":DataAddressAffiliate.id};\r\n        DataOrder.PointsSale = this.props.SalePoints;\r\n        DataOrder.DeliverySum = this.props.DataDeliveryInfo.DeliveryPriceItog ? this.props.DataDeliveryInfo.priceDelivery : 0;\r\n        DataOrder.Comments = this.props.DataDeliveryInfo.comments;\r\n        DataOrder.DopInfo = this.props.DataDeliveryInfo.commentary;\r\n        DataOrder.typePay = this.props.DataDeliveryInfo.typePay;\r\n        DataOrder.countPerson = this.props.DataDeliveryInfo.countPerson;\r\n        DataOrder.cart = this.props.DataDeliveryInfo.cart;\r\n        DataOrder.DopProductUserSet = this.props.DataDeliveryInfo.DopProductUserSet;\r\n        DataOrder.Preorder = {\"active\":checkPreorderActive,\"datePreorder\":this.props.DataDeliveryInfo.SelectDatePreorder+'T'+this.props.DataDeliveryInfo.SelectTimePreorder};\r\n        return DataOrder;\r\n    }\r\n\r\n    getMountsDate(a,b = null){\r\n        if(b){\r\n            a = a+1;\r\n            if(a<10){return '0'+a;}\r\n        }else {\r\n            switch (a) {\r\n                case 0:\r\n                    return 'Января';\r\n                    break;\r\n                case 1 :\r\n                    return 'Февраля';\r\n                    break;\r\n                case 2 :\r\n                    return 'Марта';\r\n                    break;\r\n                case 3 :\r\n                    return 'Апреля';\r\n                    break;\r\n                case 4 :\r\n                    return 'Мая';\r\n                    break;\r\n                case 5 :\r\n                    return 'Июня';\r\n                    break;\r\n                case 6 :\r\n                    return 'Июля';\r\n                    break;\r\n                case 7 :\r\n                    return 'Августа';\r\n                    break;\r\n                case 8 :\r\n                    return 'Сенятбря';\r\n                    break;\r\n                case 9 :\r\n                    return 'Октября';\r\n                    break;\r\n                case 10 :\r\n                    return 'Ноября';\r\n                    break;\r\n                case 11 :\r\n                    return 'Декабря';\r\n                    break;\r\n                default:\r\n                    return a;\r\n            }\r\n        }\r\n    }\r\n\r\n    returnPlaceholderPreorder(a){\r\n        switch(a){\r\n            case true:\r\n                var dateObj = new Date(this.props.DataDeliveryInfo.SelectDatePreorder);\r\n                //var formated_date = dateObj.format(\"dd.mm.YYYY\");\r\n\r\n\r\n                return(<div>\r\n                        <Group title=\"Оплата бонусными баллами\">\r\n                            {this.getCountsTimeBonus()}\r\n\r\n                        </Group>\r\n                        <Group title=\"Итоговые данные по заказу\">\r\n                            <List>\r\n                                <Cell\r\n                                    before={<Icon24Place />}\r\n                                    description={<span>\r\n                                      <i>{this.props.DataDeliveryInfo.addressOrderInfoUser}</i>\r\n                                  </span>}\r\n                                    size=\"l\">\r\n                                    {this.props.checkedTypeDilivery === 0 ? \" Доставка курьером\" : \" Заберу заказ сам\"}\r\n                                </Cell>\r\n                                <Cell\r\n                                before={<Icon24Flash />}\r\n                                description={this.props.DataDeliveryInfo.typeOrderDate ? <i> В ближайшее время</i> :\r\n                                    <i> {dateObj.getDate()+' '+this.getMountsDate(dateObj.getMonth(),false)+' '+dateObj.getUTCFullYear()+'г. к '+this.props.DataDeliveryInfo.SelectTimePreorder}</i>\r\n                                }\r\n                                >\r\n                                    Время получения заказа\r\n                                </Cell>\r\n                                <Cell before={<Icon24Coins />}> Списано таймов: <b>{this.props.SalePoints}</b></Cell>\r\n                                {this.PriceInfoVisual()}\r\n                                <Cell before={<Icon24MoneyCircle />}> К оплате: <b className=\"OrangeColor\">{this.getSumCartItogo()} ₽</b></Cell>\r\n                            </List>\r\n                        </Group>\r\n                        <Group title=\"Способ оплаты\">\r\n                            <List>\r\n                                <Cell>\r\n                                    <Radio name=\"typePayments\" value=\"1\"\r\n                                           description=\"Оплата наличными при получении\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 1 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:1})}}>Наличные</Radio>\r\n                                    <Radio name=\"typePayments\" value='2' description=\"Оплата банковской картой, по терминалу\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 2 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:2})}}>Терминал</Radio>\r\n\r\n                                </Cell>\r\n                                <Cell>\r\n                                    <Div>\r\n                                        <NewOrderServer setStates={this.setState.bind(this)}\r\n                                                        userInfo={this.props.userInfo}\r\n                                                        DataOrderInfo={this.getDataOrder()}\r\n                                                        getPageOkOrderSet={this.props.setStates.bind(this)}\r\n                                                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                                        />\r\n                                    </Div>\r\n                                </Cell>\r\n                            </List>\r\n                        </Group>\r\n                    </div>\r\n                );\r\n                break;\r\n            default:\r\n                return(\r\n                    <Placeholder\r\n                        icon={<Icon56ErrorOutline />}\r\n                        action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Указать вариант получения</Button>}\r\n\r\n                    >\r\n                        <h2>Не указана дата и время получения</h2>\r\n                        <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите дату получения заказа.</p>\r\n                    </Placeholder>\r\n                );\r\n        }\r\n    }\r\n\r\n    checkPreorderType(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === false) {\r\n            if(this.props.DataDeliveryInfo.SelectDatePreorder === null){\r\n                return this.returnPlaceholderPreorder(false);\r\n            }else{\r\n                if(this.props.DataDeliveryInfo.SelectTimePreorder === null){\r\n                    return this.returnPlaceholderPreorder(false);\r\n                }else{\r\n                    return this.returnPlaceholderPreorder(true);\r\n                }\r\n            }\r\n\r\n        }else{\r\n            return this.returnPlaceholderPreorder(true);\r\n        }\r\n    }\r\n\r\n\r\n    checkTypeDiliveryInfo(){\r\n        if(this.props.checkedTypeDilivery === 0 && this.props.addressDefault === null){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Выбрать адрес</Button>}\r\n\r\n                >\r\n                <h2>Вы не выбрали адрес доставки</h2>\r\n                    <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите адрес доставки, либо адрес точки самовывоза, откуда Вам будет удобно забрать заказ.</p>\r\n                </Placeholder>\r\n\r\n            );\r\n        }else{\r\n            return (this.checkPreorderType());\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.checkMinSummaCart()\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentsPage;","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\nimport Dilivery from \"./Dilivery\";\r\n\r\nimport './styleCart.css';\r\n\r\nimport ButtonCart from \"../catalog/ButtonInCart\";\r\nimport PaymentsPage from \"./PaymentsPage\";\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass GetCartHome extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null,\r\n            LoadDopProduct:this.props.LoadDopProduct\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n    componentDidMount() {\r\n        async function PopupLoadDop(LoadStatus,setPopout){\r\n            if(LoadStatus === true) {\r\n                setPopout();\r\n            }else {\r\n                setPopout(null);\r\n            }\r\n        }\r\n\r\n        PopupLoadDop(this.state.LoadDopProduct,this.setPopout.bind(this));\r\n    }\r\n\r\n\r\n    ReloadDeliveryPay(){\r\n\r\n    }\r\n\r\n    GetPresetsVisual(){\r\n        if(Object.keys(this.props.PresetsDopProductList.list).length >0){\r\n            const ListPresets = this.props.PresetsDopProductList.list.map((datas,number)=>{\r\n                return(\r\n                    <div key={number+'PresetsTitle'}>{datas.title} -  {datas.count} {datas.typeCount}</div>\r\n                );\r\n            });\r\n            return(\r\n                <Group\r\n                title=\"В заказ так же входит\"\r\n                    style={{textAlign:\"center\",overflow: \"hidden\"}}>\r\n                    <img src={this.props.PresetsDopProductList.img}\r\n                         style={{\r\n                             float: \"left\",\r\n                             width: \"35%\",\r\n                             marginLeft:\"3%\",\r\n                             marginRight:\"3%\"\r\n                         }}\r\n                    />\r\n                    <Div style={{textAlign:\"left\",\"lineHeight\":\"2.1em\",paddingRight:\"0\"}}>{ListPresets}</Div>\r\n                </Group>\r\n            );\r\n        }else{\r\n            //console.log('oo',Object.keys(this.props.PresetsDopProductList.list).length);\r\n            return('');\r\n        }\r\n    }\r\n\r\n    DopProductListVisual(){\r\n        //console.log('Запускаемся');\r\n        if(Object.keys(this.props.DopProductList).length > 0) {\r\n            const ListDopProduct = Object.keys(this.props.DopProductList).map(\r\n                (datas,number) => {\r\n                    return (\r\n                        <div className=\"BlockOneDopProductCart\" key={datas}>\r\n                            <div className=\"imgDopProductBlock\">\r\n                                <img src={\"//sushi-time31.ru\"+this.props.DopProductList[datas].img} />\r\n                            </div>\r\n                            <div className=\"titleDopProductBlock\">\r\n                                {this.props.DopProductList[datas].title}\r\n                            </div>\r\n                            <div className=\"priceDopProductBlock WeightFontBold\">\r\n                                {this.props.DopProductList[datas].price} ₽\r\n                            </div>\r\n                            <div className=\"buttonDopProductBlock\">\r\n                                {this.getButtonDopProduct(\r\n                                    this.props.DopProductList[datas].id,\r\n                                    this.props.setDopProduct.bind(this),\r\n                                    this.getCountDopProductIcon(\r\n                                        this.props.DopProductList[datas].id,\r\n                                        this.props.DopProductUserSet\r\n                                    ),\r\n                                    this.props.DopProductList[datas].price\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n            );\r\n\r\n            return (\r\n                <Group title=\"Добавить к заказу\">\r\n                    <HorizontalScroll>\r\n                        <div key=\"AllDopProductBlock\"\r\n                             style={{display:\"flex\",paddingBottom:\"20px\"}}\r\n                        >{ListDopProduct}\r\n                            <div style={{display:\"block\",width:\"20px\",height:\"2px\",minWidth:\"2px\"}}></div>\r\n                        </div>\r\n                        <div className=\"clr\"></div>\r\n                    </HorizontalScroll>\r\n\r\n                </Group>\r\n            );\r\n        }else{\r\n            return (\"\");\r\n        }\r\n    }\r\n\r\n    getCountDopProductIcon(Prod,alls){\r\n        //console.log(Prod,alls);\r\n        if(Prod in alls){\r\n            return alls[Prod].count;\r\n        }else{\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    getButtonDopProduct(idProduct,setCart,counts = 0,price){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\" style={{float:\"none\",margin:\"auto\",display:\"block\",width:\"132px\"}}>\r\n                <div className=\"minus\" onClick={() => {\r\n                this.setState({\"LoadDopProduct\":true});\r\n                    setCart(idProduct,'-',price);\r\n                }}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {\r\n                    this.setState({\"LoadDopProduct\":true});\r\n                    setCart(idProduct,'+',price);}\r\n                }>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    setPopout(e){\r\n        if(e === ''){\r\n            // useState(<ScreenSpinner size='large' />);\r\n            this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n        }else{\r\n            // useState(e);\r\n            this.setState({popout: e});\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        function setPopout(e){\r\n            if(e === ''){\r\n                // useState(<ScreenSpinner size='large' />);\r\n                this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n            }else{\r\n                // useState(e);\r\n                this.setState({popout: e});\r\n            }\r\n        }\r\n\r\n       function go(e){\r\n         setActivePanel(e);\r\n         // setActivePanel(e.currentTarget.dataset.to);\r\n       };\r\n\r\n       function setActivePanel(e){\r\n           // useState(e);\r\n          // this.setState({activePanel: e});\r\n           this.ActivePanels(e);\r\n       }\r\n\r\n       function  getCartVisual(id, Products,setCart){\r\n           //setPopout(null);\r\n            if(Products.length<=0){\r\n                return(<div style={{\"textAlign\":\"center\",\"padding\":\"5px 10px\",\"marginTop\":\"30px\"}}><h2>Корзина пуста</h2><p>К сожалению, для того чтобы что-то заказать, Вам нужно положить этот товар в корзину!</p></div>);\r\n            }else {\r\n\r\n                var results = Products.map((cartProduct,idProducts) =>\r\n                    <div className=\"ProductInCartBlock\" key={\"blockProducts_\"+idProducts}>\r\n                        <div\r\n\r\n                        className=\"blockProduct\"\r\n                        style={{\r\n                            \"width\": \" 100%\",\r\n                            \"margin\": \"5% 0\",\r\n                            \"padding\": \"0%\",\r\n                            \"float\":\"none\",\r\n                            marginBottom:10\r\n                        }}\r\n                        >\r\n                            <div className=\"imgPrewieProduct\">\r\n                                <img src={cartProduct.img}/>\r\n                            </div>\r\n                            <div className=\"titleProduct\">\r\n                                {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                                {cartProduct.title} <span className=\"redTextP\">{cartProduct.type_info}</span>\r\n                            </div>\r\n                            <div className=\"DescrProduct2\">\r\n                                {cartProduct.description}\r\n                            </div>\r\n                            <div style={{clear:\"both\"}}>\r\n                                {/*Товаров: {cartProduct.count} <br/>*/}\r\n                                <span className=\"priceProduct\">Сумма: {getPriceProducts(cartProduct)}</span>\r\n                                <div className=\"priceProductBig\"style={{width:\"100%\",bottom:-8}}><ButtonCart CartProducts={Products} typeProduct2={cartProduct}\r\n                                                                             setCarts={setCart.bind(this)}/></div>\r\n                            </div>\r\n                        </div>\r\n                        <Separator style={{ margin: '20px 0' }} />\r\n                    </div>\r\n                );\r\n\r\n                return(<div className=\"CartBlockProducts\">{results}</div>);\r\n\r\n            }\r\n        }\r\n\r\n        function getDiliveryData(){\r\n            return (<div><h2>Доставка</h2></div>);\r\n        }\r\n\r\n\r\n        function getPriceProducts(cartProduct){\r\n          // console.log(cartProduct);\r\n            if(!(\"price_discount\" in cartProduct) || cartProduct.price_discount === false){\r\n                return (<span className=\"WeightFontBold\">\r\n                {cartProduct.count * cartProduct.price} ₽\r\n                </span>\r\n                );\r\n            }else{\r\n                return(\r\n                    <span className=\"WeightFontBold\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\",color:\"#c2c2c2\"}}>{cartProduct.count * cartProduct.price_discount.old_price} ₽</s>\r\n                        {cartProduct.count * cartProduct.price_discount.new_price} ₽\r\n                </span>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n\r\n        function getButtonNavigation(typeNav, action){\r\n\r\n           switch(typeNav){\r\n               case\"1\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button className=\"activeButons\" onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"2\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"3\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>; break;\r\n           }\r\n\r\n           return(\r\n               <HorizontalScroll>\r\n                   {ButtonBlock}\r\n               </HorizontalScroll>\r\n           );\r\n        }\r\n\r\n        function getOneStepCartNone(){\r\n           return(\r\n               <Panel id=\"home\">\r\n\r\n                   <Placeholder\r\n                       icon={<Icon56MarketOutline />}\r\n                       action={false}\r\n\r\n                   >\r\n                       <h2>Корзина пуста</h2>\r\n                       <p>Для совершения заказа, положите в нее хотя-бы 1 товар</p>\r\n                   </Placeholder>\r\n\r\n               </Panel>\r\n           );\r\n        }\r\n\r\n        function getOneStepCart(ProductList,setCart,sumCart,setState,GetPresetsVisual,DopProductList){\r\n           return (\r\n               <Panel id=\"home\" >\r\n               <PanelHeader theme=\"light\"> {getButtonNavigation('1', setState.bind(this))}</PanelHeader>\r\n               <Group title=\"Товары\">\r\n                <Div className=\"CartBlockProductsOneStep\">\r\n                {getCartVisual(\"homes\", ProductList, setCart.bind())}\r\n            <div style={{clear:\"both\"}}></div>\r\n            </Div>\r\n        </Group>\r\n                   {GetPresetsVisual}\r\n                   {DopProductList}\r\n        <Group>\r\n            <Div className=\"SumItogOneSTepCart\">Сумма итого: <span className=\"OrangeColor\">{sumCart} ₽</span></Div>\r\n        </Group>\r\n        <Div><Button size=\"xl\" onClick={()=> {setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button></Div>\r\n               </Panel>\r\n        );\r\n        }\r\n\r\n\r\n\r\n        return(\r\n            <View\r\n                activePanel={this.state.activePanel}\r\n                className={\r\n                    osName === IOS ?\r\n                        \"IOSCLASSCSS\"\r\n                        :\r\n                        \"AndroidCLASSCSS\"\r\n                }\r\n                popout={this.state.popout}\r\n                header={this.props.ProductList.length<=0\r\n                    ?\r\n                    false\r\n                    :\r\n                    true\r\n                }\r\n            >\r\n\r\n\r\n                    {this.props.ProductList.length<=0 ? getOneStepCartNone() :\r\n\r\n                        getOneStepCart(this.props.ProductList, this.props.setCart.bind(),this.props.sumCart, this.setState.bind(this),this.GetPresetsVisual(),this.DopProductListVisual())\r\n                    }\r\n\r\n                <Panel id=\"dilivery\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('2', this.setState.bind(this))}</PanelHeader>\r\n                    <Dilivery\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        getUserSystemInfo={this.props.getUserSystemInfo.bind()}\r\n\r\n                        addressDefault={this.props.addressDefault}\r\n                        setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n\r\n                        AffiliateDefault={this.props.AffiliateDefault}\r\n                        setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        setTypeDilivery={this.props.setTypeDilivery.bind(this)}\r\n\r\n                        commentary={this.props.commentary}\r\n                        setComment={this.props.setComment.bind(this)}\r\n\r\n                        countPerson={this.props.countPerson}\r\n\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                        getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                        /*Для вычисления суммы бесплатной доставки*/\r\n                        sumCart={this.props.sumCart}\r\n\r\n                        setPopout={this.setState.bind(this)}\r\n                        ProductList={this.props.ProductList}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n                        hideModals={this.props.hideModals.bind(this)}\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" stretched level=\"secondary\"  style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"home\"});}}>В корзину</Button>\r\n                        <Button size=\"l\" stretched className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"order\"});}}>К оплате</Button>\r\n                    </Div>\r\n                </Panel>\r\n                <Panel id=\"order\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('3', this.setState.bind(this))}</PanelHeader>\r\n                    <PaymentsPage\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        SalePoints={this.props.SalePoints}\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        sumCart={this.props.sumCart}\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        addressDefault={this.props.addressDefault}\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                        getReloadInfODeliveryPay={this.props.checkedTypeDilivery ? this.props.getDeliveryDataPriceItogAffiliate.bind(this) : this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n\r\n                        action={this.setState.bind(this)}\r\n\r\n                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" level=\"secondary\" stretched style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button>\r\n\r\n                    </Div>\r\n                </Panel>\r\n            </View>\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default GetCartHome;","import React, {useState} from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport {platform, IOS, Group, Cell, ModalRoot,Radio, ModalPage, ModalPageHeader, HeaderButton, Placeholder, Button, Gallery, Switch} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Icon56CheckCircleOutline from '@vkontakte/icons/dist/56/check_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport UserOrderList from './panels/ProfileUser/UserOrderList';\r\nimport OrderTypeList from './panels/ProfileUser/OrderTypeList';\r\nimport OrderShowDeail from './panels/ProfileUser/OrderShowDeail';\r\n\r\n\r\nimport Notice from './panels/Notice/index';\r\n\r\nimport ButtonCart from  \"./panels/catalog/ButtonInCart\";\r\n\r\n\r\nimport {Div, Epic, Tabbar, TabbarItem, Panel, PanelHeader} from '@vkontakte/vkui';\r\n//import Icon28Messages from '@vkontakte/icons/dist/28/messages';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\r\nimport Icon28User from '@vkontakte/icons/dist/28/user';\r\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport AppHome from \"./panels/Profile\";\r\nimport CatalogProduct from \"./panels/catalog/CatalogProduct\";\r\nimport './panels/catalog/product.css';\r\n\r\nimport GetCartHome from \"./panels/Cart/CartHome\";\r\n\r\nrequire('./panels/global/index.js');\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AudioInfo:{\r\n                ReloadBasket: new Audio('//sushi-time31.ru/audio/ReloadBasketInfo2.mp3')\r\n            },\r\n\r\n            countReloadBasket:0,\r\n\r\n            Notice:[],\r\n            CountNotice:0,\r\n            CountNoticeNoView:null,\r\n\r\n            typeOrderGetText:'Текущие заказы',\r\n            typeOrderGet:'now',\r\n            numberOrderShow:0,\r\n            listOrderUser:[],\r\n\r\n            ParamStart:false,\r\n            products:[],\r\n            DopProductList:[],\r\n            DopProductUserSet:{},\r\n            LoadDopProduct:false,\r\n            loadingCatalog:false,\r\n            activeStory: 'catalog',\r\n            activePanelOrders:\"ListTypeOrder\",\r\n            loadingPage: true,\r\n            user:[],\r\n            userSystemInfo:{error:true,dataUser:\"\"},\r\n            cart:[],\r\n            countCartProduct:'',\r\n\r\n            dopPresets: [],\r\n            imgListPresets: false,\r\n\r\n            addressDefault:null,\r\n            AffiliateDefault:0,\r\n            checkedTypeDilivery:0,\r\n            commentary:\"\",\r\n            typePay:1,\r\n            countPerson:1,\r\n            SalePoints:0,\r\n            sumCart:0,\r\n            activeModal:null,\r\n            formNewAddressData:'',\r\n            formEditAddressData:'',\r\n\r\n            listAddressGlobal:[],\r\n            listAffiliateGlobal:[],\r\n\r\n            priceDelivery:0,\r\n            minSumOrder:300,\r\n            minSumFreeDelivery:0,\r\n\r\n            //Если сумма корзины меньше необходимой для заказа\r\n            errorOrderFinal:false,\r\n            //Если сумма корзины меньше бесплатной доставки\r\n            DeliveryPriceItog:false,\r\n\r\n            //Доставка на адрес возможна, сли false, то не возможна\r\n            DeliveryAddressOKCity:true,\r\n\r\n            //Адрес, для отображения в последнем блоке корзины\r\n            addressOrderInfoUser:'',\r\n            newOrderStats:false,\r\n\r\n            StatusLoadSlide:false,\r\n            slideHeaderArray:[],\r\n            slideIndex: 0,\r\n\r\n            StatusNotification:false,\r\n\r\n            CityListBind:[],\r\n\r\n            typeOrderDate:true,\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null,\r\n\r\n            settingsFilterSearch:{\r\n                typeSearch: global.settingsFilterSearch.typeSearch\r\n            }\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    getCityUser(){\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getCity&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n\r\n                }else{\r\n                    this.state.ListCitySelect = data.list;\r\n                    global.CityListBind = data.list;\r\n                   // console.log('Установили города',global.CityListBind);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения городов',err);\r\n            });\r\n    }\r\n\r\n    getNotice(idUsers){\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getNotice&idUserVK='+idUsers+'&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    //console.log('Получили уведомления',data);\r\n                    this.state.CountNotice = null;\r\n                    this.state.CountNoticeNoView = null;\r\n                    this.state.Notice = [];\r\n                }else{\r\n                    if((this.state.CountNoticeNoView !== data.CountNoticeNoCheck) || (this.state.CountNotice !== data.CountNotice)) {\r\n                        this.state.Notice = data.result;\r\n                        this.state.CountNotice = data.CountNotice;\r\n                        this.state.CountNoticeNoView = data.CountNoticeNoCheck;\r\n                        console.log('Получили уведомления', this.state.Notice);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения уведомлений', err);\r\n            });\r\n    }\r\n\r\n\r\n    setNoticeServer(type,idNotice){\r\n        var idUsers = this.state.user.id;\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/setNoticeStatus&idUserVK='+idUsers+'&idNotice='+idNotice+'&typeSet='+type+'&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    console.log('Получили уведомления',data);\r\n                }else{\r\n                    this.getNotice(idUsers);\r\n                    console.log('Получили уведомления',data);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения уведомлений', err);\r\n            });\r\n    }\r\n\r\n    parseQueryString = (string) => {\r\n        return string.slice(1).split('&')\r\n            .map((queryParam) => {\r\n                let kvp = queryParam.split('=');\r\n                return {key: kvp[0], value: kvp[1]}\r\n            })\r\n            .reduce((query, kvp) => {\r\n                query[kvp.key] = kvp.value;\r\n                return query\r\n            }, {})\r\n    };\r\n\r\n\r\n    setOkNewOrderView(){\r\n        console.log('Показать окно');\r\n        if(this.state.newOrderStats) {\r\n            this.getCartDB(this.state.user.id,this.state.countReloadBasket);\r\n            this.setState({activeStory: 'newOrderInfo',\r\n                typeOrderDate:true,\r\n                SelectDatePreorder:null,\r\n                SelectTimePreorder:null,\r\n                DopProductUserSet:{}\r\n            });\r\n            this.getUserSystemInfo(this.state.user.id);\r\n        }else{\r\n            console.log('Ну не совсем');\r\n        }\r\n    }\r\n\r\n    setShowUserOrderList(){\r\n        this.setState({activeStory: 'UserOrderList'});\r\n    }\r\n\r\n    setTypeOrderList(as,bs){\r\n        this.setState({\r\n            typeOrderGetText:as,\r\n            typeOrderGet:bs,\r\n            activePanelOrders: 'OrdersListUserType'\r\n        });\r\n    }\r\n\r\n\r\n    getSuccesOrderPage(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56CheckCircleOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.setState({\r\n                             typeOrderGetText:\"Текущие заказы\",\r\n                             typeOrderGet:\"now\",\r\n                             activePanelOrders: 'OrdersListUserType',\r\n                             activeStory: 'UserOrderList'\r\n                         });}}>Узнать статус заказа</Button>}\r\n\r\n            >\r\n                <h2>Ваш заказ принят</h2>\r\n                <p>Мы приняли Ваш заказ и отправили его в производство. Узнать детали заказа Вы можете по ссылке</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    getDeliveryDataPriceItog(){\r\n        if(this.state.minSumOrder < this.state.sumCart){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.minSumFreeDelivery <= this.state.sumCart){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет ',this.state.minSumFreeDelivery+' < '+this.state.sumCart);\r\n    }\r\n\r\n\r\n    getDeliveryDataPriceItogAffiliate(){\r\n        this.setState({\r\n            priceDelivery: 0,\r\n            minSumOrder: 300,\r\n            minSumFreeDelivery: 0\r\n        });\r\n\r\n        if(this.state.sumCart > 300){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.sumCart > 0){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет на самовывоз');\r\n    }\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n\r\n    setcountCartProduct(e,aa = false){\r\n        if(e == 0){e = '';}\r\n        if(aa === false) {\r\n            this.setState({\r\n                countCartProduct: e\r\n            });\r\n        }\r\n\r\n        var sumCartItog = 0;\r\n        this.state.cart.map((CPr)=>{\r\n                sumCartItog += this.getSumCartOnDiscount(CPr);\r\n            }\r\n        );\r\n\r\n        var SumDopsProduct = 0;\r\n        if(Object.keys(this.state.DopProductUserSet).length > 0){\r\n\r\n            Object.keys(this.state.DopProductUserSet).map((id,n)=>{\r\n                    SumDopsProduct += this.state.DopProductUserSet[id].count*(this.state.DopProductUserSet[id].price*1)\r\n            });\r\n        }\r\n\r\n        //console.log(SumDopsProduct);\r\n        this.setState({sumCart:sumCartItog+SumDopsProduct});\r\n\r\n        document.cookie = \"cart = \"+this.state.cart;\r\n    }\r\n\r\n    getSumCartOnDiscount(typeProduct){\r\n        if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n            return (typeProduct.price*typeProduct.count);\r\n        }else{\r\n            return(typeProduct.price_discount.new_price*typeProduct.count);\r\n        }\r\n    }\r\n\r\n    setComment(e){\r\n        this.setState({\r\n            commentary:e\r\n        });\r\n    }\r\n\r\n    setUser(e){\r\n        this.setState({user:e});\r\n    }\r\n\r\n    setUserSystem(e){\r\n        this.setState({userSystemInfo:{error:false,dataUser:e}});\r\n    }\r\n\r\n    getTypeSlideGet(){\r\n        switch(this.state.ParamStart.vk_platform){\r\n            case\"desktop_web\": return \"desktop\";break;\r\n            default: return \"mobile\";\r\n        }\r\n    }\r\n\r\n\r\n    getSlideHeaderArray(){\r\n        if(this.state.ParamStart === false){\r\n\r\n        }else {\r\n            //console.log(this.state.ParamStart);\r\n            axios('https://sushi-time31.ru/api/getSlideHeader&apiKey='+global.ApiKey,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n                    data: {\r\n                        typeSlide: this.getTypeSlideGet(),\r\n                    },\r\n                    responseType: 'text'\r\n                })\r\n                .then(({data}) => {\r\n                    if (\"error\" in data) {\r\n                        this.setSlideArray([], false);\r\n                        // console.log(data.error, '|', data.errorInfo);\r\n                    } else {\r\n                        //console.log(data.listSlide);\r\n                        this.setSlideArray(data.listSlide, true);\r\n                    }\r\n                })\r\n                .catch(({err}) => {\r\n                    console.log(\"ERROR: ---Получение слайдов---  \", err);\r\n                });\r\n        }\r\n    }\r\n\r\n    setSlideArray(ArraySlide,status){\r\n        if(status === true) {\r\n            var ststusSlideData = this.StatusReloadBasketData(JSON.stringify(this.state.slideHeaderArray),JSON.stringify(ArraySlide));\r\n            if(ststusSlideData === true) {\r\n                this.setState({slideHeaderArray: ArraySlide});\r\n                if (this.state.StatusLoadSlide === false) {\r\n                    this.setState({StatusLoadSlide: true});\r\n                }\r\n            }\r\n\r\n        }else{\r\n            if (this.state.StatusLoadSlide === true) {\r\n                this.setState({StatusLoadSlide: false});\r\n            }\r\n        }\r\n    }\r\n\r\n    getSliderGalery(){\r\n        var ArraySlides = Object.keys(this.state.slideHeaderArray);\r\n        var Bullets = \"dark\";\r\n        var AutoPlays = \"7000\";\r\n        var countNumber = ArraySlides.length;\r\n        if(ArraySlides.length <= 1){Bullets = false;AutoPlays = false;}\r\n        if(this.state.StatusLoadSlide === true & ArraySlides.length > 0) {\r\n            var SliderVisual = ArraySlides.map((datas,keys) => {\r\n                //console.log(datas);\r\n                return (<img key={keys} src={this.state.slideHeaderArray[datas].img} style={{maxWidth:\"100%\"}}/>);\r\n            });\r\n\r\n            return (\r\n                <Gallery\r\n                    autoplay={AutoPlays}\r\n                    //slideIndex={this.state.slideIndex}\r\n                    //onEnd={()=>{this.setState({\"slideIndex\":0})}}\r\n                    slideWidth=\"100%\"\r\n                    style={{width:\"100%\",height: \"auto\"}}\r\n                    bullets={Bullets}\r\n                >\r\n                    {SliderVisual}\r\n                </Gallery>\r\n            );\r\n        }else{\r\n            return(\r\n                \"\"\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    reloadSlideHeaderSetTime(){\r\n        this.getSlideHeaderArray();\r\n        setTimeout(this.reloadSlideHeaderSetTime.bind(this),5000);\r\n    }\r\n\r\n\r\n\r\n\r\n    ///////Уведомления PUSH\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n            });\r\n    }\r\n\r\n    setStatusNotification(e){\r\n        this.setState({StatusNotification:e});\r\n    }\r\n\r\n    DeleteNotifi(idNotice){\r\n        // this.Notice[idNotice]\r\n        delete this.state.Notice[idNotice];\r\n        // Object.keys(this.state.Notice).splice(idNotice, 1);\r\n    }\r\n\r\n\r\n    getNotificationPage(){\r\n        return(\r\n            <Notice\r\n                StatusNotification={this.state.StatusNotification}\r\n                PushClick={this.PushClick.bind(this)}\r\n                setState={this.setState.bind(this)}\r\n\r\n                AllNotice={this.state.Notice}\r\n\r\n                setNotice={this.setNoticeServer.bind(this)}\r\n                DeleteNotifi={this.DeleteNotifi.bind(this)}\r\n            />\r\n        );\r\n    }\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n            })\r\n            .catch((err)=> {\r\n                    this.setState({StatusNotification: false});\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    ///////\r\n\r\n    componentDidMount() {\r\n        this.getCityUser();\r\n        this.getStatusNotificate();\r\n        async function fetchData(setUser,getCartDB,getUserSystemInfo,getNotice,countReloadBasket) {\r\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            setUser(user);\r\n            //setPopout(null);\r\n            //setModal(MODAL_CARD_MONEY_SEND);\r\n            //console.log('...','Получили данные пользователя',user.id);\r\n            getCartDB(user.id,countReloadBasket);\r\n            getNotice(user.id);\r\n            getUserSystemInfo(user.id);\r\n        }\r\n\r\n        axios({\r\n            method:'get',\r\n            // url:'https://sushi-time31.ru/test.json',\r\n            // url:'https://sushi-time31.ru/test2.json',\r\n            url:'https://sushi-time31.ru/api/Catalog&apiKey='+global.ApiKey+'&idCategoryKeyArray=true&idProductKeyArray=true',\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data.list);\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                products: data.list,\r\n                loadingCatalog:true\r\n            });\r\n        })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n\r\n        fetchData(this.setUser.bind(this),this.getCartDB.bind(this),this.getUserSystemInfo.bind(this),this.getNotice.bind(this),this.state.countReloadBasket);\r\n        this.reloadSlideHeaderSetTime();\r\n            setInterval(function() {this.getIntervalCart(1)}.bind(this), 3000);\r\n            setInterval(function() {this.getNotice(this.state.user.id)}.bind(this), 3000);\r\n            this.setHashDataReload(this);\r\n    }\r\n\r\n    getIntervalCart(i){\r\n        this.getCartDB(this.state.user.id,this.state.countReloadBasket);\r\n        // console.log('Запустили получение корзины '+i);\r\n        i++;\r\n        // setTimeout(function() {this.getIntervalCart(i)}.bind(this), 3000);\r\n    }\r\n\r\n    StatusReloadBasketData(dataOld,dataNew){\r\n        if(dataOld === dataNew){return false;}else{return true;}\r\n    }\r\n\r\n\r\n    ReloadBasketDataFN(ListProduct){\r\n       // console.log('Обновили корзину');\r\n        this.setState({\r\n            // products: data.list[0].ProductList\r\n            cart: ListProduct,\r\n            loadingPage: false\r\n        });\r\n        this.setCountCartVisal();\r\n    }\r\n\r\n\r\n    ReloadBasketDataDopPresets(ListDopPresets){\r\n        if(ListDopPresets !== false){\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: ListDopPresets.listPresetProduct,\r\n                imgListPresets: ListDopPresets.imgPresetProduct\r\n            });\r\n        }else{\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: [],\r\n                imgListPresets: false\r\n            });\r\n        }\r\n    }\r\n\r\n    getCartDB(id_user,countReloadBasket = 0){\r\n\r\n        if(countReloadBasket>0){\r\n           // console.log('Ну вроде как работает, но нет');\r\n        }else {\r\n            if (this.state.loading === false) {\r\n                this.setState({loading: true});\r\n                var ia = this.state.countReloadBasket+1;\r\n                this.setState({countReloadBasket:ia});\r\n               // console.log('АХАХАХ блять ',ia);\r\n            }\r\n\r\n        }\r\n\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getBasketVK&apiKey='+global.ApiKey+'&updateBasket=1minute&id_user_vk='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n                data.listProduct = [];\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }\r\n\r\n            if(data.listProduct === null){\r\n                data.listProduct = [];\r\n            }\r\n\r\n            var ListOld = JSON.stringify(this.state.cart);\r\n            var ListNew = JSON.stringify(data.listProduct);\r\n            var ListPresetsOld = JSON.stringify(this.state.dopPresets);\r\n\r\n            var ListPresetsNew = JSON.stringify(data.DopPresetsData);\r\n            if(ListPresetsNew == 'false'){\r\n                ListPresetsNew = '[]';\r\n            }else{\r\n                ListPresetsNew = JSON.stringify(data.DopPresetsData.listPresetProduct)\r\n            }\r\n\r\n            var statusBasket = this.StatusReloadBasketData(ListOld,ListNew);\r\n            var statusPresets = this.StatusReloadBasketData(ListPresetsOld,ListPresetsNew);\r\n\r\n            if(statusBasket === true) {\r\n                this.ReloadBasketDataFN(data.listProduct);\r\n                this.PlayInfoAudio('ReloadBasket');\r\n            }\r\n\r\n            if(\"DopProductList\" in data) {\r\n                var ListDopOld = JSON.stringify(this.state.DopProductList);\r\n                var ListDopNew = JSON.stringify(data.DopProductList);\r\n\r\n                var statusDopProduct = this.StatusReloadBasketData(ListDopOld,ListDopNew);\r\n\r\n                if(statusDopProduct === true) {\r\n                    this.setState({\"DopProductList\": data.DopProductList});\r\n                    //console.log(ListDopOld,ListDopNew,'|||||',data.DopProductList);\r\n                }else{\r\n                   // console.log(ListDopOld,ListDopNew,'|||||',data.DopProductList);\r\n                }\r\n            }\r\n\r\n            if(statusPresets === true || ListPresetsNew ===false) {\r\n                this.ReloadBasketDataDopPresets(data.DopPresetsData);\r\n                //console.log('АХАХАХ блять ',ListPresetsNew,' -|-|-|- ',ListPresetsOld);\r\n            }\r\n\r\n\r\n\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n    }\r\n\r\n    PlayInfoAudio(a){\r\n            if (this.audio) {\r\n                // this.audio.pause();\r\n                this.audio.stop();\r\n            }\r\n            switch (a) {\r\n                case\"ReloadBasket\":\r\n                   // this.audio = this.state.AudioInfo.ReloadBasket;\r\n                    this.state.AudioInfo.ReloadBasket.play();\r\n                    //alert('Запуск звука');\r\n                    break;\r\n            }\r\n    }\r\n\r\n\r\n    getUserSystemInfo(id_user){\r\n        this.setState({loading: true});\r\n\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/Users&apiKey='+global.ApiKey+'&updateUserSystemInfo=one&idUserVK='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }else{\r\n                this.setUserSystem(data.list[0]);\r\n            }\r\n\r\n            this.setState({\r\n                loadingPage: false\r\n            });\r\n            //console.log(\"userSystemInfo\",this.state.userSystemInfo);\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n        //setUserSystem(e);\r\n    }\r\n\r\n\r\n    setCartServer(id_user,JsonBasket){\r\n        //console.log(JsonBasket,'___А_А_АА_А_А_А_');\r\n        axios('https://sushi-time31.ru/api/setBasketVK&apiKey='+global.ApiKey+'&id_user_vk='+id_user,\r\n            {\r\n            method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            data: {\r\n                basketJson: JsonBasket,\r\n            },\r\n            responseType:'text'\r\n        })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Отправка корзины---  \",err);\r\n            });\r\n    }\r\n\r\n    setCart(e,tE = '+'){\r\n        //console.log('Товар в корзине, вот этот ',e);\r\n        //this.setState({cart:e});\r\n        const counts = this.state.cart.length;\r\n        if(tE == '+'){\r\n            //Добавляем товар\r\n            if(counts<=0) {\r\n               // console.log('Добавляем Новый товар в корзину');\r\n                this.state.cart.push(e);\r\n                const countPlus = counts;\r\n                this.state.cart[countPlus].count = 1;\r\n                this.setcountCartProduct(1);\r\n            }else{\r\n               // console.log('В принципи верно, но цикл не тот', counts);\r\n                var noAdd = true;\r\n\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Добавляем еще такой же товар');\r\n                        this.state.cart[key].count = this.state.cart[key].count + 1;\r\n                        setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                        noAdd =false;\r\n                    }\r\n                    }\r\n                );\r\n\r\n                if(noAdd === true){\r\n                   // console.log('Добавляем новый товар, так как тагого же нет');\r\n                    this.state.cart.push(e);\r\n                    const countPlus = counts;\r\n                    this.state.cart[countPlus].count = 1;\r\n                    setcountCartProductVar++;\r\n                }\r\n\r\n            }\r\n        }else{\r\n            //Удаляем товар\r\n            if(counts<=0) {\r\n\r\n            }else{\r\n                var noAdd = true;\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Удаляем товар 1 товар с этим id и типом');\r\n                        if( this.state.cart[key].count<=1){\r\n                            // delete this.state.cart[key];\r\n                            this.state.cart.splice(key, 1);\r\n                        }else{\r\n                            this.state.cart[key].count = this.state.cart[key].count - 1;\r\n                            setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                            noAdd =false;\r\n                        }\r\n                    }\r\n                    }\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n        {setcountCartProductVar = setcountCartProductVar+CPr.count}\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n        var setDataServer = btoa(encodeURI(JSON.stringify(this.state.cart)));\r\n       // console.log('Вот это отправляем на сервер',setDataServer);\r\n        this.setCartServer(this.state.user.id,setDataServer);\r\n    }\r\n\r\n    setDopProduct(id,type = '+',price){\r\n        const counts = this.state.DopProductUserSet.length;\r\n        switch(type){\r\n            case \"+\":\r\n                if(counts<=0){\r\n                    this.state.DopProductUserSet[id] = {\"count\":1,\"price\":price};\r\n                }else{\r\n                    if(id in this.state.DopProductUserSet) {\r\n                        this.state.DopProductUserSet[id].count++;\r\n                    }else{\r\n                        this.state.DopProductUserSet[id] = {\"count\":1,\"price\":price};\r\n                    }\r\n                }\r\n                break;\r\n            case \"-\":\r\n                if(counts<=0){\r\n\r\n                }else{\r\n                    if(id in this.state.DopProductUserSet) {\r\n                        if(this.state.DopProductUserSet[id].count == 1){\r\n                            //this.state.DopProductUserSet.splice(id, 1);\r\n                            delete this.state.DopProductUserSet[id];\r\n                        }else{\r\n                            this.state.DopProductUserSet[id].count--;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        console.log(this.state.DopProductUserSet);\r\n\r\n        this.setcountCartProduct(0,true);\r\n\r\n        if(!(id in this.state.DopProductUserSet) || this.state.DopProductUserSet[id].count <=0){\r\n            this.setState({\"LoadDopProduct\":false});\r\n            return 0;\r\n        }else{\r\n            this.setState({\"LoadDopProduct\":false});\r\n            return this.state.DopProductUserSet[id].count;\r\n        }\r\n\r\n\r\n        //this.setState({\"DopProductUserSet\":a});\r\n    }\r\n\r\n\r\n    setCountCartVisal(){\r\n       // this.getCartDB(this.state.user.id);\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n            {setcountCartProductVar = setcountCartProductVar+CPr.count;\r\n            }\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n    }\r\n\r\n    setTypeDilivery(e){\r\n        this.setState({checkedTypeDilivery:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setTypeOrderDate(e){\r\n        this.setState({typeOrderDate:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setAddressDefault(e){\r\n        if(e === 'del'){\r\n            e = 0;\r\n        }\r\n        this.setState({addressDefault:e});\r\n        //console.log('По дефолту адрес теперь ',e);\r\n        //Обновляем условия доставки на 3  шаг корзины\r\n    }\r\n\r\n    setAffiliateDefault(e){\r\n        this.state.AffiliateDefault = e;\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setModal(e){\r\n        this.setState({activeModal:e});\r\n    }\r\n\r\n    setOrderShowNumber(a){\r\n        this.setState({numberOrderShow:a,\r\n            activePanelOrders:'OrderShowDetails'});\r\n    }\r\n\r\n    listOrderUserSet(a){\r\n       // console.log(a,'Ну блин');\r\n        this.setState({listOrderUser:a});\r\n    }\r\n\r\n    setHashDataReload(){\r\n\r\n      const HashParam =  this.parseQueryString(window.location.hash);\r\n\r\n        var height=window.screen.height;\r\n        var newHeight = height*0.7;\r\n        //console.log('Какого хрена',newHeight);\r\n\r\n        connect.send(\"VKWebAppResizeWindow\", {\"height\": newHeight});\r\n\r\n        if('noticePageReload' in HashParam){\r\n            this.state.loadingCatalog = false;\r\n            this.setHashNew('notifications');\r\n        }\r\n    }\r\n\r\n\r\n    setHashNew(a){\r\n        setTimeout(function() {\r\n            //console.log('Устанавливаем нулевой ХЕШ');\r\n            this.setState({activeStory:a});\r\n            connect.send(\"VKWebAppSetLocation\", {\"location\": \"notice\"});\r\n            this.setState({loadingCatalog:true});\r\n        }.bind(this), 1000);\r\n    }\r\n\r\n    getFilterBlockModal(def){\r\n\r\n        var defs = {0:\"\",1:\"\"};\r\n        defs[def] = \"defaultChecked\";\r\n\r\n        return(\r\n            <div>\r\n                <Group\r\n                    title=\"Искать\"\r\n                >\r\n                    <Cell>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeSearch === 0 ? true : false}\r\n                            name=\"typeSearch\" value=\"0\"\r\n                            description=\"Поиск по наименованию товара\"\r\n                            onClick={() => {\r\n                                var some = {...this.state.settingsFilterSearch}\r\n                                some.typeSearch = 0;\r\n                                this.setState({some})\r\n                                global.settingsFilterSearch.typeSearch = 0;\r\n                                // console.log(some);\r\n                                //console.log(global.settingsFilterSearch);\r\n                            }}\r\n                        >По названиям</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeSearch === 1 ? true : false}\r\n                            name=\"typeSearch\"\r\n                            value=\"1\"\r\n                            description=\"Поиск по описанию товара\"\r\n                                onClick={() => {\r\n                                    var some = {...this.state.settingsFilterSearch}\r\n                                    some.typeSearch = 1;\r\n                                    global.settingsFilterSearch.typeSearch = 1;\r\n                                    this.setState({some})\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >По составу</Radio>\r\n                    </Cell>\r\n                </Group>\r\n                <Group\r\n                    title=\"Тип товара\"\r\n                >\r\n                    <Cell>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === false ? true : false}\r\n                            name=\"typeSearchProduct\" value=\"0\"\r\n                            onClick={() => {\r\n                                global.settingsFilterSearch.typeProduct = false;\r\n                                // console.log(some);\r\n                                //console.log(global.settingsFilterSearch);\r\n                            }}\r\n                        >Все</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"new\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"new\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"new\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Новинки</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"hot\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"hot\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"hot\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Запеченные</Radio>\r\n                    </Cell>\r\n                </Group>\r\n                <Group>\r\n                <Cell></Cell>\r\n                </Group>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    stateRadio(a){\r\n        var some = {...this.state.settingsFilterSearch}\r\n        some.typeSearch = a;\r\n        this.setState({some});\r\n    }\r\n\r\n    render () {\r\n        const queryParams = this.parseQueryString(window.location.search);\r\n        const hashParams = this.parseQueryString(window.location.hash);\r\n\r\n        //this.setHashDataReload(hashParams);\r\n        //console.log(hashParams);\r\n        // console.log(noticePage);\r\n\r\n        if(this.state.ParamStart === false) {\r\n            //console.log(\"State = false, но \", queryParams);\r\n        }\r\n\r\n        if(this.state.ParamStart === false) {\r\n            this.state.ParamStart = queryParams;\r\n        }\r\n\r\n        // this.setState({\"ParamStart\":this.parseQueryString(window.location.search)});\r\n        // console.log('Параметры запуска ',this.state.ParamStart,' А URL такой ',window.location.search);\r\n\r\n        const modal = (\r\n            <ModalRoot activeModal={this.state.activeModal}>\r\n                <ModalPage\r\n                    id=\"MODAL_NEWADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Добавить адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Добавление адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formNewAddressData}\r\n                </ModalPage>\r\n\r\n                <ModalPage\r\n                    id=\"MODAL_EditADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Редактировать адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Редактирование адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formEditAddressData}\r\n                </ModalPage>\r\n\r\n                <ModalPage\r\n                    id=\"MODAL_Filter_Catalog\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Готово</HeaderButton>}\r\n                        >\r\n                            Фильтры\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Фильтры\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.getFilterBlockModal(this.state.settingsFilterSearch.typeSearch)}\r\n                </ModalPage>\r\n            </ModalRoot>\r\n        );\r\n\r\n        const osname = platform();\r\n\r\n        if(this.state.CountNoticeNoView === 0 || this.state.CountNoticeNoView === null){\r\n            var countNoticeView = '';\r\n        }else{\r\n            var countNoticeView = this.state.CountNoticeNoView;\r\n        }\r\n\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'catalog'}\r\n                        data-story=\"catalog\"\r\n                        text=\"Каталог\"\r\n                    ><Icon24Note /></TabbarItem>\r\n                    <TabbarItem style={{\"display\":\"none\"}}\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'discover'}\r\n                        data-story=\"discover\"\r\n                        text=\"Поиск\"\r\n                    ><Icon28Search /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'cart'}\r\n                        data-story=\"cart\"\r\n                        label={this.state.countCartProduct}\r\n                        text=\"Корзина\"\r\n                    ><Icon28MarketOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'notifications'}\r\n                        data-story=\"notifications\"\r\n                        label={countNoticeView}\r\n                        text=\"Уведомления\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'user'}\r\n                        data-story=\"user\"\r\n                        text=\"Профиль\"\r\n                    ><Icon28User /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"newOrderInfo\" activePanel=\"newOrders\" header={false}>\r\n                    <Panel id=\"newOrders\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {this.getSuccesOrderPage()}\r\n                    </Panel>\r\n                </View>\r\n\r\n\r\n                <View id=\"UserOrderList\" activePanel={this.state.activePanelOrders} >\r\n                    <Panel id=\"ListTypeOrder\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                        >\r\n                            Мои заказы\r\n                        </PanelHeader>\r\n                        <UserOrderList\r\n                            userData={this.state.user}\r\n                            setTypeOrderList={this.setTypeOrderList.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                    <Panel id=\"OrdersListUserType\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<HeaderButton onClick={() => this.setState({activePanelOrders: 'ListTypeOrder'})}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => this.setState({activePanelOrders: 'ListTypeOrder'})}>Назад</HeaderButton>}\r\n                        >\r\n                            {this.state.typeOrderGetText}\r\n                        </PanelHeader>\r\n                        <OrderTypeList\r\n                            userData={this.state.user}\r\n                            typeOrderGet={this.state.typeOrderGet}\r\n                            setOrderShowNumber={this.setOrderShowNumber.bind(this)}\r\n                            listOrderUserSet={this.listOrderUserSet.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                    <Panel id=\"OrderShowDetails\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<HeaderButton onClick={() => this.setState({activePanelOrders: 'OrdersListUserType'})}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => this.setState({activePanelOrders: 'OrdersListUserType'})}>Назад</HeaderButton>}\r\n                        >\r\n                            {\"Заказ №\"+ this.state.numberOrderShow}\r\n                        </PanelHeader>\r\n                        <OrderShowDeail\r\n                            idOrderDetail={this.state.numberOrderShow}\r\n                            OrderDatas={this.state.listOrderUser[this.state.numberOrderShow]}\r\n                            userData={this.state.user}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n\r\n\r\n\r\n                <View id=\"catalog\" activePanel=\"catalog\" header={false} modal={modal}>\r\n                    <Panel id=\"catalog\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {\r\n                            this.state.loadingCatalog\r\n                                ?\r\n                                <CatalogProduct\r\n                                    setCart={this.setCart.bind(this)}\r\n                                    CartProducts={this.state.cart}\r\n                                    ProductsLists={this.state.products}\r\n                                    sliderHeader={this.getSliderGalery.bind(this)}\r\n                                    queryParams={queryParams}\r\n\r\n                                    showModal={this.setModal.bind(this)}\r\n                                    hideModals={this.setModal.bind(this,null)}\r\n                                />\r\n                                :\r\n                                <ScreenSpinner />\r\n                        }\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"discover\" activePanel=\"discover\">\r\n                    <Panel id=\"discover\">\r\n                        <PanelHeader>Поиск товаров</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"cart\" activePanel=\"cart\" modal={modal}>\r\n                    <Panel id=\"cart\" style={{\"paddingBottom\":\"40px\"}}>\r\n                        <PanelHeader theme=\"light\"\r\n                                     noShadow={false}\r\n                        >\r\n                            Корзина\r\n                        </PanelHeader>\r\n                        <div key=\"Cart_List\" style={{\"paddingBottom\":\"40px\"}}>\r\n                            {/*this.getCartVisual(this.state.cart,this.setCart.bind(this))*/}\r\n                            <GetCartHome\r\n                                ProductList={this.state.cart}\r\n                                DopProductList={this.state.DopProductList}\r\n                                DopProductUserSet={this.state.DopProductUserSet}\r\n                                setDopProduct={this.setDopProduct.bind(this)}\r\n                                LoadDopProduct={this.state.LoadDopProduct}\r\n                                PresetsDopProductList={\r\n                                    {\r\n                                    \"list\": this.state.dopPresets,\r\n                                    \"img\": this.state.imgListPresets\r\n                                    }\r\n                                }\r\n\r\n                                setCart={this.setCart.bind(this)}\r\n                                userSystemInfo={this.state.userSystemInfo}\r\n                                userInfo={this.state.user}\r\n                                getUserSystemInfo={this.getUserSystemInfo.bind(this)}\r\n\r\n                                addressDefault={this.state.addressDefault}\r\n                                setAddressDefault={this.setAddressDefault.bind(this)}\r\n\r\n                                AffiliateDefault={this.state.AffiliateDefault}\r\n                                setAffiliateDefault={this.setAffiliateDefault.bind(this)}\r\n\r\n                                checkedTypeDilivery={this.state.checkedTypeDilivery}\r\n                                setTypeDilivery={this.setTypeDilivery.bind(this)}\r\n\r\n                                commentary={this.state.commentary}\r\n                                setComment={this.setComment.bind(this)}\r\n\r\n                                countPerson={this.state.countPerson}\r\n\r\n                                SalePoints={this.state.SalePoints}\r\n\r\n                                setStates={this.setState.bind(this)}\r\n                                setDeliveryDataItogs={this.getDeliveryDataPriceItog.bind(this)}\r\n                                getDeliveryDataPriceItogAffiliate={this.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                                sumCart={this.state.sumCart}\r\n\r\n                                showModal={this.setModal.bind(this)}\r\n                                hideModals={this.setModal.bind(this,null)}\r\n\r\n                                DataDeliveryInfoPay={\r\n                                    {\r\n                                        typeOrderDate:this.state.typeOrderDate,\r\n                                        setTypeOrderDate:this.setTypeOrderDate.bind(this),\r\n\r\n                                        SelectDatePreorder:this.state.SelectDatePreorder,\r\n                                        SelectTimePreorder:this.state.SelectTimePreorder,\r\n\r\n                                        priceDelivery:this.state.priceDelivery,\r\n                                        minSumOrder:this.state.minSumOrder,\r\n                                        minSumFreeDelivery:this.state.minSumFreeDelivery,\r\n\r\n                                        //Если сумма корзины меньше необходимой для заказа\r\n                                        errorOrderFinal:this.state.errorOrderFinal,\r\n                                        //Если сумма корзины меньше бесплатной доставки\r\n                                        DeliveryPriceItog:this.state.DeliveryPriceItog,\r\n\r\n                                        //Доставка на адрес возможна, сли false, то не возможна\r\n                                        DeliveryAddressOKCity:this.state.DeliveryAddressOKCity,\r\n\r\n                                        addressOrderInfoUser:this.state.addressOrderInfoUser,\r\n\r\n                                        checkedTypeDilivery:this.state.checkedTypeDilivery,\r\n                                        AffiliateDefault:this.state.AffiliateDefault,\r\n                                        addressDefault:this.state.addressDefault,\r\n\r\n                                        listAddressGlobal:this.state.listAddressGlobal,\r\n                                        listAffiliateGlobal: this.state.listAffiliateGlobal,\r\n\r\n                                        comments:this.state.commentary,\r\n                                        typePay:this.state.typePay,\r\n                                        countPerson:this.state.countPerson,\r\n                                        cart:this.state.cart,\r\n                                        DopProductUserSet:this.state.DopProductUserSet\r\n\r\n                                    }\r\n                                }\r\n\r\n                                setOkNewOrderView={this.setOkNewOrderView.bind(this)}\r\n\r\n                            />\r\n\r\n                        <div style={{\"clear\":\"both\"}}></div>\r\n                        </div>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Уведомления</PanelHeader>\r\n                        {this.getNotificationPage()}\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"user\" activePanel=\"user\">\r\n                    <Panel id=\"user\">\r\n                        <PanelHeader>Профиль</PanelHeader>\r\n                        <AppHome\r\n                            id=\"home\"\r\n                            go=\"persik\"\r\n                            dataUsers={this.state.userSystemInfo}\r\n                            setStatusNotification={this.setStatusNotification.bind(this)}\r\n                            setShowUserOrderList={this.setShowUserOrderList.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell, CellButton} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24DoNotDisturb from '@vkontakte/icons/dist/24/do_not_disturb';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\n\r\n\r\nclass UserOrderList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadOrders:false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getAllGroups(){\r\n        return(\r\n            <Group>\r\n                <CellButton\r\n                before={<Icon24Recent /> }\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Текущие заказы\",\"now\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Текущие заказы</span>\r\n                </CellButton>\r\n                <CellButton\r\n                before={<Icon24DoneOutline />}\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Завершенные заказы\",\"old\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Завершенные заказы</span>\r\n                </CellButton>\r\n                <CellButton\r\n                before={<Icon24Cancel />}\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Отмененные заказы\",\"cancel\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Отмененные заказы</span>\r\n                </CellButton>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            this.state.loadOrders\r\n                ?\r\n                <ScreenSpinner />\r\n                :\r\n                this.getAllGroups()\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default UserOrderList;","import React from 'react';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\n\r\n\r\nclass OrderTypeList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listOrderUser:[],\r\n            loadOrders:true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getOrderUserSystem();\r\n    }\r\n\r\n    getOrderUserSystem(){\r\n        this.setState({loadOrders:true});\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getOrdersUserVK&apiKey='+global.ApiKey+'&idUserVK='+this.props.userData.id,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    this.setState({countOrder:0});\r\n                }else{\r\n                    //console.log('Данные по заказам пользователя',data);\r\n                    this.setState({listOrderUser:data.list});\r\n                    this.props.listOrderUserSet(data.list);\r\n                }\r\n                this.setState({loadOrders:false});\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения заказов',err);\r\n            });\r\n    }\r\n\r\n\r\n    ReverceList(Pr){\r\n        var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n            // console.log(last, index);\r\n            return (arr = arr.concat(last))\r\n        }, []);\r\n        return res;\r\n    }\r\n\r\n    getOrderType(type = 'now'){\r\n        var typeNumber = 0;\r\n        var iconsD ='';\r\n        switch(type){\r\n            case 'now': typeNumber = 0; iconsD = <Icon24Recent /> ;break;\r\n            case 'cancel': typeNumber = 3;  iconsD = <Icon24Dismiss /> ;break;\r\n            case 'old': typeNumber = 1;  iconsD = <Icon24DoneOutline /> ;break;\r\n            default:typeNumber =0;\r\n        }\r\n\r\n        //console.log(this.state.listOrderUser)\r\n\r\n        var countOrders = 0;\r\n\r\n        const ListOrder = this.ReverceList(this.state.listOrderUser).map((dataOrder,keyOrder)=>{\r\n            //console.log('Заказ '+dataOrder,'');\r\n            var CurrentOrder = this.state.listOrderUser[dataOrder];\r\n\r\n            var statusY = false;\r\n\r\n\r\n            if(typeNumber === 1){\r\n                if(CurrentOrder.status_order == typeNumber || CurrentOrder.status_order == 6){\r\n                    statusY = true;\r\n                }else{\r\n                    statusY = false;\r\n                }\r\n            }else{\r\n                if(CurrentOrder.status_order == typeNumber){\r\n                    statusY = true;\r\n                }else{\r\n                    statusY = false;\r\n                }\r\n            }\r\n\r\n\r\n            if(CurrentOrder.delete_order == '1'){\r\n                statusY = false;\r\n            }\r\n\r\n            if(statusY === true){\r\n                countOrders++;\r\n                //console.log('Заказ '+dataOrder,' Отмененн');\r\n                var summaOrders = <span>Сумма: <b>{CurrentOrder.sum_order}₽</b></span>;\r\n\r\n                return (\r\n                    <Cell key={\"Orders_\"+dataOrder}\r\n                          before={iconsD}\r\n                          description={<span>{CurrentOrder.date} <i>{CurrentOrder.time}</i> | {summaOrders}</span>}\r\n                          onClick={this.props.setOrderShowNumber.bind(this,CurrentOrder.id_order)}\r\n                    >\r\n                        <b>Заказ №{CurrentOrder.id_order}</b> <span style={{fontSize:\"0.8em\",marginLeft:\"2%\",color:\"#6a97fb\"}}> Подробнее...</span>\r\n                    </Cell>\r\n                );\r\n            }else{\r\n                //console.log('Заказ '+dataOrder,'');\r\n            }\r\n\r\n        });\r\n\r\n        if(countOrders <=0){\r\n            return (\r\n                <Cell key={\"Orders_None\"}\r\n                >\r\n                    Заказы отсутсвуют\r\n                </Cell>\r\n            );\r\n        }\r\n\r\n        return ListOrder;\r\n\r\n    }\r\n\r\n\r\n    getNowOrder(){\r\n        return(\r\n            <Group key=\"ListOrderNow\"\r\n                   title=\"Текущие заказы\"\r\n            >\r\n                {this.getOrderType('now')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    getOldOrder(){\r\n        return(\r\n            <Group key=\"ListOrderOld\"\r\n                   title=\"Завершенные заказы\"\r\n            >\r\n                {this.getOrderType('old')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCancelledOrder(){\r\n        return(\r\n            <Group key=\"ListOrderCancel\"\r\n                   title=\"Отмененные заказы\"\r\n            >\r\n                {this.getOrderType('cancel')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    getOneTypeOrders(){\r\n        var results = '';\r\n        switch(this.props.typeOrderGet){\r\n            case\"now\": results = this.getNowOrder();break;\r\n            case\"old\": results = this.getOldOrder();break;\r\n            case\"cancel\": results = this.getCancelledOrder();break;\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    getAllGroups(){\r\n        return(\r\n            this.getOneTypeOrders()\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(<div> {\r\n                this.state.loadOrders\r\n                    ?\r\n                    <ScreenSpinner/>\r\n                    :\r\n                    this.getAllGroups()\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderTypeList;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell, Div, Counter, Button} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\n\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\r\nimport Icon24MoneyTransfer from '@vkontakte/icons/dist/24/money_transfer';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24User from '@vkontakte/icons/dist/24/user';\r\n\r\nclass OrderShowDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //console.log('Заказ показать этот: ',this.props.OrderDatas);\r\n    }\r\n\r\n    getStatusOrderText(a){\r\n        var ststusReturn = \"Выполнен\";\r\n\r\n        switch(a){\r\n            case\"0\": ststusReturn = \"Принят\"; break;\r\n            case\"1\": ststusReturn = \"Выполнен\"; break;\r\n            case\"3\": ststusReturn = \"Отменен\"; break;\r\n            case\"6\": ststusReturn = \"Принят\"; break;\r\n        }\r\n        return ststusReturn;\r\n    }\r\n\r\n    getStatusOrderReal(statusOld,statusReal){\r\n        if(statusReal === null){\r\n           // console.log('Нет данных');\r\n            return statusOld;\r\n        }else{\r\n            return statusReal.status;\r\n        }\r\n    }\r\n\r\n    getStatusIconText(a){\r\n        var iconsD = '';\r\n\r\n        var ststusReturns = <Icon24Error />;\r\n\r\n        switch(a){\r\n            case\"0\": iconsD = <Icon24Recent /> ;break;\r\n            case\"1\": iconsD = <Icon24DoneOutline /> ;break;\r\n            case\"3\": iconsD = <Icon24Dismiss /> ;break;\r\n            case\"6\": iconsD = <Icon24Recent /> ;break;\r\n        }\r\n        return ststusReturns;\r\n    }\r\n\r\n\r\n    getInfoPreorderBlock(Order){\r\n        if(Order.pre_order.status === 'none'){\r\n            return \"\";\r\n        }else{\r\n            return (\r\n                <Group title=\"Совершен по предзаказу на дату\">\r\n                    <Cell\r\n                        before={<Icon24Recent />}\r\n                    >\r\n                        {Order.pre_order.date_pre_order}\r\n                    </Cell>\r\n                </Group>\r\n            );\r\n        }\r\n    }\r\n\r\n    escapeHtml(text,type) {\r\n        switch(type){\r\n            case\"decode\":\r\n                var map = {\r\n                    '&amp;': '&',\r\n                    '&lt;': '<',\r\n                    '&gt;': '>',\r\n                    '&quot;': '\"',\r\n                    \"&#039;\": \"'\"\r\n                };\r\n                break;\r\n            case\"encode\":\r\n                var map = {\r\n                    '&': '&amp;',\r\n                    '<': '&lt;',\r\n                    '>': '&gt;',\r\n                    '\"': '&quot;',\r\n                    \"'\": '&#039;'\r\n                };\r\n                break;\r\n        }\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n    escapeHtmlDecode(text) {\r\n        return text\r\n            .replace(/&amp;/g, \"&\")\r\n            .replace(/&lt;/g, \"<\")\r\n            .replace(/&gt;/g, \">\")\r\n            .replace(/&quot;/g, \"\\\"\")\r\n            .replace(/&#039;/g, \"'\");\r\n    }\r\n\r\n\r\n    getOrderComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (<Group title=\"Состав заказа\">\r\n                <Div>Данные отсутствуют</Div></Group>);\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            if(data.sale_price != data.product_price){\r\n                var Price_sales = <span><s>{data.product_price} ₽</s> <b>{data.sale_price} ₽</b> </span>;\r\n            }else{\r\n                var Price_sales = <span><b>{data.sale_price} ₽</b> </span>;\r\n            }\r\n\r\n            if(data.discount_amount != '0'){\r\n                var Discount = <b>Скидка: {data.discount_amount} ₽</b>\r\n            }else{\r\n                var Discount = '';\r\n            }\r\n\r\n            return (\r\n                <Cell key={\"Product_cell_\"+key}\r\n                    description={<span key={\"prices_product_\"+key}>{Price_sales} - {data.count} шт. <i>{Discount}</i></span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"product_title_\"+key}>{this.escapeHtmlDecode(data.product_title)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n        return (<Group title=\"Состав заказа\">\r\n            {ListProduct}</Group>);\r\n    }\r\n\r\n\r\n    getOrderDopComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            var Price_sales = <span><b>{data.price_product} ₽</b> </span>;\r\n\r\n\r\n            return (\r\n                <Cell key={\"Dop_Product_cell_\"+key}\r\n                    description={<span key={\"prices_dop_product_\"+key}>{Price_sales} - {data.count} шт.</span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"dop_product_title_\"+key}>{this.escapeHtmlDecode(data.title_product)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n\r\n        if(ListProduct == '' || ListProduct=== null){\r\n            return (\"\");\r\n        }\r\n\r\n        return (<Group title=\"Приправы и соусы\">\r\n            {ListProduct}\r\n        </Group>);\r\n    }\r\n\r\n\r\n    getOrderGiftComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            var Price_sales = <span><b>{data.price_product} ₽</b> </span>;\r\n\r\n\r\n            return (\r\n                <Cell key={\"Gift_Product_cell_\"+key}\r\n                    description={<span key={\"prices_Gift_product_\"+key}>{Price_sales} - {data.count} шт.</span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"Gift_product_title_\"+key}>{this.escapeHtmlDecode(data.title_gift_product)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n\r\n        if(ListProduct == '' || ListProduct=== null){\r\n            return (\"\");\r\n        }\r\n\r\n        return (<Group title=\"Подарки\">\r\n            {ListProduct}\r\n        </Group>);\r\n    }\r\n\r\n\r\n    getOrderDeliveryInfo(Order){\r\n\r\n        if(Order.dilivery.dilivery_type == 'Доставка'){\r\n            var Address = Order.dilivery.dilivery_adres;\r\n            var PriceDeli = Order.dilivery.dilivery_price;\r\n            var TextDel = 'Доставка';\r\n        }else{\r\n            var Address = Order.affiliate.affiliate_info;\r\n            var PriceDeli = \" 0 \";\r\n            var TextDel = 'Самовывоз';\r\n        }\r\n\r\n            return (<Group title=\"Получение заказа\">\r\n                <Cell key={\"Deliv_cell\"}\r\n                    description={Address}\r\n                    indicator={<Counter>&nbsp; {PriceDeli} ₽ &nbsp;</Counter>}\r\n                >\r\n                    {TextDel}\r\n                </Cell>\r\n                </Group>\r\n            )\r\n    }\r\n\r\n    getInfoPromokod(Order){\r\n        if(Order.promo_status == 'active'){\r\n            var PromoInfo = <Group title=\"Промокод\">\r\n                <Div><b>{Order.promo_code}</b> {Order.promo_info.title}</Div>\r\n            </Group>\r\n        }else{\r\n            var PromoInfo = '';\r\n        }\r\n\r\n        return PromoInfo;\r\n    }\r\n\r\n    getInfoPointsOrder(Order){\r\n            var Points = <div>\r\n                <Cell before={<Icon24Coins/>} >Списано Таймов: {Order.point_out}</Cell>\r\n                <Cell  before={<Icon24Coins/>} >Начислено Таймов: {Order.point_in}</Cell>\r\n            </div>;\r\n\r\n        return Points;\r\n    }\r\n\r\n    getComment(Order) {\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n            Order = 'Отсутствует';\r\n        }\r\n\r\n        return (\r\n            <Group title=\"Комментарий\">\r\n                <Div>{Order}</Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getRepeatOrder(OrderId){\r\n        //console.log(OrderId);\r\n        return (\r\n            <Group style={{textAlign:\"center\",padding:\"10px 0\"}}>\r\n                <Button onClick={()=>{\r\n                    this.setRepeatOrder(OrderId.id_order)\r\n                }}>Повторить</Button>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    setRepeatOrder(OrderId){\r\n        //console.log('Повторяем заказ');\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/setRepeatOrder&apiKey='+global.ApiKey+'&idUserVK='+this.props.userData.id+'&OrderIdRepeat='+OrderId,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    console.log(data);\r\n                    alert(data.errorInfo);\r\n                }else{\r\n                   console.log('Повторение заказа инфа: ',data);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка повторения заказа',err);\r\n            });\r\n    }\r\n\r\n    getPerson(Order) {\r\n\r\n        if(Order == '' || Order === null){\r\n            Order = '1';\r\n        }\r\n\r\n        // return (\r\n        //     <Group title=\"Кол-во приборов\">\r\n        //         <Div>{Order}</Div>\r\n        //     </Group>\r\n        // );\r\n\r\n        return (\r\n            <Cell\r\n                before={<Icon24User />}\r\n            >\r\n                Приборы: {Order}\r\n            </Cell>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        const Order = this.props.OrderDatas;\r\n        const StatusIcon = this.getStatusIconText(Order.status_order);\r\n        const detailText = <span>Детали заказа</span>;\r\n\r\n        return(\r\n            <div key=\"InfoOrderBlock\" >\r\n                <Group\r\n                    title={detailText}\r\n                >\r\n                    <Cell\r\n                        before={StatusIcon}\r\n                    >\r\n                        {this.getStatusOrderReal(this.getStatusOrderText(Order.status_order),Order.status_order_real)}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24Recent />}\r\n                    >\r\n                        {Order.date} {Order.time}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24MoneyTransfer />}\r\n                    >\r\n                        {Order.payment.type_pay}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24MoneyCircle />}\r\n                    >\r\n                        {Order.sum_order} ₽\r\n                    </Cell>\r\n                    {this.getPerson(Order.person)}\r\n                    {this.getInfoPointsOrder(Order)}\r\n                </Group>\r\n                    {this.getInfoPreorderBlock(Order)}\r\n                {this.getInfoPromokod(Order.promo)}\r\n                {this.getOrderComposition(Order.productList)}\r\n                {this.getOrderDopComposition(Order.dopProductList)}\r\n                {this.getOrderGiftComposition(Order.giftProductList)}\r\n                {this.getOrderDeliveryInfo(Order)}\r\n                {this.getComment(Order.Comment)}\r\n                {this.getRepeatOrder(Order)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderShowDetail;","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder, Cell } from '@vkontakte/vkui';\r\n\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\n\r\nimport Icon56NotificationOutline from '@vkontakte/icons/dist/56/notification_outline';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass Notice extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n    NoteNotice(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56NotificationOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.setState({activeStory: 'catalog'});}}>В каталог</Button>}\r\n\r\n            >\r\n                <h2>Уведомлений нет</h2>\r\n                <p>Как только для Вас появятся уведомления, они отобразятся здесь!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    ReverceList(Pr){\r\n        var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n            // console.log(last, index);\r\n            return (arr = arr.concat(last))\r\n        }, []);\r\n        return res;\r\n    }\r\n\r\n\r\n    setNoticeData(type,idNotice,statusView){\r\n        if(type == 1) {\r\n            this.props.setNotice(type, idNotice);\r\n            this.props.DeleteNotifi(idNotice);\r\n        }else{\r\n            if(statusView === false){\r\n                this.props.setNotice(type, idNotice);\r\n            }\r\n        }\r\n    }\r\n\r\n    getImagesNotice(img){\r\n        if(img === null || img == ''){return (\"\");}else{\r\n            return(\r\n                <img src={img} style={{width:\"100%\"}}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    getNotice(){\r\n\r\n        const NoticeList = this.ReverceList(this.props.AllNotice).map((Data,id)=>{\r\n\r\n            if(this.props.AllNotice[Data]['notice_view'] == '0'){\r\n                var color = '#ff7300';\r\n                var statusView = false;\r\n            }else{\r\n                var color = '';\r\n                var statusView = true;\r\n            }\r\n\r\n            return(<Group\r\n                key={\"Notice_C_\"+Data}\r\n            >\r\n                <Cell\r\n                    before={<Icon24Notification\r\n                        style={{color:color}}\r\n                        onClick={() => {this.setNoticeData(0,this.props.AllNotice[Data]['id_notification'],statusView)}}\r\n                    />}\r\n                    asideContent={<Icon24Dismiss\r\n                        onClick={() => {this.setNoticeData(1,this.props.AllNotice[Data]['id_notification'],statusView)}}\r\n                    />}\r\n\r\n                >\r\n                    {this.props.AllNotice[Data]['title']}\r\n                </Cell>\r\n                {this.getImagesNotice(this.props.AllNotice[Data]['img'])}\r\n                    <Div key={\"Notice_\"+Data} dangerouslySetInnerHTML={{__html: this.props.AllNotice[Data]['text'].replace(/\\n/g, \"<br />\")}}>\r\n                    </Div>\r\n            </Group>);\r\n        });\r\n\r\n        return(\r\n            NoticeList\r\n        );\r\n    }\r\n\r\n    getNotificationPage(){\r\n        if(this.props.StatusNotification === true){\r\n            if(Object.keys(this.props.AllNotice).length<=0){\r\n                return(this.NoteNotice());\r\n            }else{\r\n                return(this.getNotice());\r\n            }\r\n        }else{\r\n            return(\r\n                <Placeholder stretched\r\n                             icon={<Icon56NotificationOutline />}\r\n                             action={<Button size=\"l\" level=\"tertiary\"\r\n                                             onClick={()=>{this.props.PushClick()}}\r\n                             >Включить уведомления</Button>}\r\n                             style={{textAlign:\"center\"}}\r\n                >\r\n                    Для просмотра уведомлений, их нужно включить\r\n                </Placeholder>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            this.getNotificationPage()\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default Notice;","import React, {useEffect} from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n//import ModalProduct from './panels/ModalProduct';\r\nimport CategoryList from './CategoryList';\r\nimport GetCartHome from \"../Cart/CartHome\";\r\n//import App from \"./Profile\";\r\n\r\nconst CatalogProduct = (OPT) => {\r\n    // const [activePanel, setActivePanel] = useState('home');\r\n    // const [fetchedUser, setUser] = useState(null);\r\n    // const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\r\n\r\n    useEffect(() => {\r\n        // connect.subscribe(({ detail: { type, data }}) => {\r\n        //     if (type === 'VKWebAppUpdateConfig') {\r\n        //         const schemeAttribute = document.createAttribute('scheme');\r\n        //         schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n        //         document.body.attributes.setNamedItem(schemeAttribute);\r\n        //     }\r\n        // });\r\n        async function fetchData() {\r\n            // const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            // setUser(user);\r\n            // setPopout(null);\r\n           // console.log(OPT.ProductsLists,'--- ВОТ');\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n            <CategoryList\r\n                setCart={OPT.setCart.bind(this)}\r\n                CartProducts={OPT.CartProducts}\r\n                ProductsLists={OPT.ProductsLists}\r\n                sliderHeader={OPT.sliderHeader.bind(this)}\r\n                queryParams={OPT.queryParams}\r\n\r\n                showModal={OPT.showModal.bind(this)}\r\n                hideModals={OPT.hideModals.bind(this,null)}\r\n            />\r\n    );\r\n\r\n};\r\n\r\nexport default CatalogProduct;\r\n\r\n","import React from 'react';\r\nimport {Div, View, Panel, PanelHeader, Group, Search,Cell, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport ProductList from \"./ProductList\";\r\n\r\nimport Icon24Filter from '@vkontakte/icons/dist/24/filter';\r\nrequire('../../panels/global/index.js');\r\n\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nclass CategoryList extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            loadingPage: true,\r\n            activePanel: 'brand',\r\n            products: [],\r\n            panelCategory: '',\r\n            ActiveCategory: 0,\r\n            productModal:[{\"title\":\"Название товара\",\"description\":\"Описание товара\",\"typeproduct\":\"0\",\"price\":\"1000\"}],\r\n            search: global.searchProduct\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        //console.log('Обновился каталог');\r\n        //console.log('А вот и перезагрузка');\r\n    }\r\n\r\n    onChange (e) {\r\n        this.setState({ search: e});\r\n    }\r\n\r\n    hndlClick = (aP) => {\r\n        //console.log('--- ', 'Нажали на кнопку '+aP);\r\n        this.setState({ activePanel: aP });\r\n        //global.settingsFilterSearch.typeProduct = false;\r\n    };\r\n\r\n    setProductModal = (aP) => {\r\n       // console.log('--- ', 'Установили товар в модалку '+aP+' - - - -XTTT');\r\n        this.setState({ productModal: aP })\r\n    };\r\n\r\n    setActiveCategory = (aP) => {\r\n       // console.log('--- ', 'Установили категорию '+aP);\r\n        this.setState({ ActiveCategory: aP })\r\n    };\r\n\r\n\r\n    getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getButtonInCartProduct(typeProduct,setCart){\r\n        //console.log(this.props.CartProducts,'---0---');\r\n        if(!!this.props.CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            this.props.CartProducts.map((data,key)=>{\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  this.getCountButton(typeProduct,this.props.CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return this.getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return this.getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true});\r\n        this.setState({products:this.props.ProductsLists,loadingPage: false});\r\n        //console.log('Передали: ',this.props.ProductsLists);\r\n            }\r\n\r\n    classNameDivCategory(){\r\n        //console.log(this.props.queryParams.vk_platform);\r\n        if(this.props.queryParams.vk_platform == \"desktop_web\"){\r\n            return \"GroupBlockCategory DivBlockDesctopCategoys\";\r\n        }else{\r\n            return \"GroupBlockCategory\";\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n\r\n        function ModalProductInfo(OPT){\r\n            if(OPT.Loadings === false){\r\n               // console.log(OPT);\r\n                return(\r\n                    <div className=\"blockProduct\" style={{\"margin\":\"0\",\"textAlign\":\"left\",\"background\":\"#ffffff\"}}>\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            noShadow={false}\r\n                            left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                        >\r\n                            {escapeHtmlDecode(OPT.ProductInfo[0].title)}\r\n                        </PanelHeader>\r\n                        <Div id={'product_type_'+OPT.ProductInfo[0].type_info}>\r\n                            <div className=\"imgPrewieProduct\"><img src={OPT.ProductInfo[0].img} alt={OPT.ProductInfo[0].title}/></div>\r\n                            <div className=\"titleProduct\">{escapeHtmlDecode(OPT.ProductInfo[0].title)} <span className=\"redTextP\">{OPT.ProductInfo[0].type_info}</span></div>\r\n                            <div className=\"DescrProduct\">{escapeHtmlDecode(OPT.ProductInfo[0].description)}</div>\r\n                            <div className=\"priceProductBig\">{getPriceProducts(OPT.ProductInfo[0])}\r\n                                {OPT.getButtonInCartProduct(OPT.ProductInfo[0],OPT.setCart)}\r\n                            </div>\r\n                        </Div>\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <div>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                    >Ошибка</PanelHeader>\r\n                        <div style={{\"textAlign\":\"center\",\"padding\":\"5% 0\"}}>Ошибка, вернитесь назад</div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        function getPriceProducts(typeProduct){\r\n            if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n                return (<span className=\"priceProduct\">\r\n                {typeProduct.price} ₽\r\n                </span>\r\n                );\r\n            }else{\r\n                return(\r\n                    <span className=\"priceProduct\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\"}}>{typeProduct.price_discount.old_price} ₽</s>\r\n                        {typeProduct.price_discount.new_price} ₽\r\n                </span>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        function GetCategorys(OPT){\r\n            //console.log('Грузим каталог');\r\n            if(OPT.Loadings === false) {\r\n               // console.log(OPT,'-0-0-0-');\r\n               // console.log('Загрузилось', OPT.CategoryList);\r\n                //console.log('Товары ', OPT.CategoryList[OPT.ShowCategory].ProductList);\r\n                return (<div style={{background:\"#FFFFFF\"}}>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>Назад</HeaderButton>}\r\n                    >\r\n                        {OPT.CategoryList[OPT.ShowCategory].Title}\r\n                    </PanelHeader>\r\n                    <ProductList\r\n                        onClickProduct={OPT.ClickProduct.bind(this)}\r\n                        productsLists={OPT.CategoryList[OPT.ShowCategory].ProductList} key={OPT.CategoryList[OPT.ShowCategory].id_Category}\r\n                        idCategorys={OPT.ShowCategory}\r\n                        nameCategory=\"sets\"\r\n                        setCart={OPT.setCart.bind(this)}\r\n                        getButtonInCartProduct={OPT.getButtonInCartProduct.bind(this)}\r\n                        setProductModal={OPT.setProductModal.bind(this)}\r\n                        searchProduct={OPT.searchProduct}\r\n\r\n                        showModal={OPT.showModal.bind(this)}\r\n                        hideModals={OPT.hideModals.bind(this,null)}\r\n                    />\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <PanelHeader>Ошибка</PanelHeader>\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        function GetBrandPanels(OPT,Loadings){\r\n           // console.log(OPT,' - - - категории грузим',OPT.Loadings);\r\n\r\n\r\n            if(CategoryList.length === 0){\r\n                return '';\r\n            }else {\r\n                if(OPT.Loadings === false) {\r\n                    //ProductObject = Object.keys(OPT.CategoryList);\r\n                    //console.log('Преобразовали',ProductObject);\r\n                    // const ArrayBrands = Object.keys(OPT.CategoryList).map((CategoryProdcuts, key) =>\r\n                    const ArrayBrands = Object.keys(OPT.CategoryList).map((idCategorys, key) =>\r\n\r\n                        <Div\r\n                            style={{\"background\":\"linear-gradient( rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4) ), url(//sushi-time31.ru/images/API_IMG/\"+OPT.CategoryList[idCategorys].imgCategory+\")\",\"backgroundSize\":\"100%\"}}\r\n                            className=\"DivCategoryBlock\"\r\n                            key={key+'_'+idCategorys}\r\n                            onClick={\r\n                                () => {\r\n                                    OPT.ActiveCategory(idCategorys);\r\n                                    OPT.ClickCategory('Panels_38');\r\n                                }\r\n                            }\r\n                        >\r\n                            {OPT.CategoryList[idCategorys].Title}\r\n                        </Div>\r\n                    );\r\n                    return ArrayBrands;\r\n                }\r\n                else {\r\n                    return 'Loading ...';\r\n                }\r\n                // return '';\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        const osname = platform();\r\n\r\n        return (\r\n            <View activePanel={this.state.activePanel}>\r\n                <Panel id=\"brand\">\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                    >\r\n                        Категории\r\n                    </PanelHeader>\r\n                    <Group>\r\n                        <Div className=\"logoBlock\">\r\n                            <img src=\"//sushi-time31.ru/images/API_IMG/logo_susshi_time.png\"/>\r\n                            {this.props.queryParams.vk_platform == \"desktop_web\"\r\n                                ?\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a>+7 (4722) 777-498</a>\r\n                                </Div>\r\n                                :\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a href=\"tel:+74722777498\">Позвонить</a>\r\n                                </Div>\r\n                            }\r\n                        </Div>\r\n                        <div id=\"SliderHeader\">\r\n                            {this.props.sliderHeader()}\r\n                        </div>\r\n                    </Group>\r\n                        <Group\r\n                            //title=\"Выбери категорию\"\r\n                            className={this.classNameDivCategory()} >\r\n                        <GetBrandPanels key=\"BrandPanels\" CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)} ActiveCategory={this.setActiveCategory.bind(this)}/>\r\n                    </Group>\r\n                </Panel>\r\n                {/*{this.state.loadingPage ? <Panel id=\"Panels_38\" />  : <Panel id=\"Panels_38\" ><PanelHeader >Суши</PanelHeader></Panel> && <GetCategory CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)}/>}*/}\r\n                <Panel id=\"Panels_38\">\r\n                    <Cell\r\n                        className=\"BoxCellSearch\"\r\n                        asideContent={\r\n                            <Icon24Filter\r\n                                onClick={\r\n                                    ()=>{this.props.showModal('MODAL_Filter_Catalog');}\r\n                                }\r\n                            />}\r\n                    >\r\n                        <Search\r\n                            value={this.state.search}\r\n                            onChange={this.onChange}\r\n                            after={null}\r\n                        />\r\n                    </Cell>\r\n                    <GetCategorys\r\n                        CategoryList={this.state.products}\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickCategory={this.hndlClick.bind(this)}\r\n                        ClickProduct={this.hndlClick.bind(this,'Panels_Product')}\r\n                        setProductModal={this.setProductModal.bind(this)}\r\n                        ShowCategory={this.state.ActiveCategory}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                        searchProduct={this.state.search}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n                        hideModals={this.props.hideModals.bind(this,null)}\r\n\r\n                    />\r\n                </Panel>\r\n                <Panel id=\"Panels_Product\">\r\n\r\n                    <ModalProductInfo\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickBack={this.hndlClick.bind(this)}\r\n                        ProductInfo={this.state.productModal}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                    />\r\n                </Panel>\r\n                {/*<Panel id=\"Panels_38\" />*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}*/}\r\n                {/*    >*/}\r\n                {/*        Cуши*/}\r\n                {/*    </PanelHeader>*/}\r\n\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sushi\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"light2\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Роллы*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"roli\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Сеты*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sets\" idCategorys=\"0\"/>*/}\r\n                {/*</Panel>*/}\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CategoryList;","import React from 'react';\r\nimport { Div, Search, Cell } from '@vkontakte/vkui';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\n// import Icon24Back from '@vkontakte/icons/dist/24/back';\r\n// import ModalProduct from '../ModalProduct.js';\r\nimport OneProduct from \"./OneProduct\";\r\n\r\nimport axios from \"axios\";\r\nimport Icon24Filter from '@vkontakte/icons/dist/24/filter';\r\nrequire('../../panels/global/index.js');\r\n\r\nclass ProductList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activePanel: 'panel1',\r\n            nameCategory: 'none',\r\n            productsLists: null,\r\n            products:[{\"1\":{\"title\":\"ЕКАРНЫЙ БАБАЙ\"}}]\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        function ReverceCatalog(Pr){\r\n            var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n                // console.log(last, index);\r\n                return (arr = arr.concat(last))\r\n            }, []);\r\n            return res;\r\n        }\r\n\r\n        function SearchProductTitle(Pr,DSr){\r\n            //console.log(Pr);\r\n\r\n            const Objs = Object.keys(Pr);\r\n\r\n            const retr = [];\r\n\r\n           Objs.forEach(function (oneProduct, keyId, array) {\r\n               if(testInput(DSr, Pr[oneProduct][0]['title'])){\r\n                   retr[keyId] = oneProduct;\r\n                  // console.log(Pr[oneProduct][0]);\r\n               }\r\n                }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n\r\n        function SearchProductDescription(Pr,DSr){\r\n            //console.log(Pr);\r\n\r\n            const Objs = Object.keys(Pr);\r\n\r\n            const retr = [];\r\n\r\n           Objs.forEach(function (oneProduct, keyId, array) {\r\n               if(testInput(DSr, Pr[oneProduct][0]['description'])){\r\n                   retr[keyId] = oneProduct;\r\n               }\r\n                }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n\r\n        function SearchProductType(Pr,DSr,ListIdProduct){\r\n            const retr = [];\r\n\r\n            ListIdProduct.forEach(function (oneProduct, keyId, array) {\r\n               if(testType(DSr, Pr[oneProduct][0]['modyficate'])){\r\n                   retr[keyId] = oneProduct;\r\n               }\r\n           }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n        function testType(re,modyficate) {\r\n            var status = false;\r\n            if(modyficate.length <=0){\r\n                status = false;\r\n            }else{\r\n                modyficate.forEach(function(oneProduct, keyId, array){\r\n                    if(oneProduct.mod === re){\r\n                        status = true;\r\n                    }\r\n                });\r\n            }\r\n\r\n            return status;\r\n        }\r\n\r\n        function testInput(re, str) {\r\n            re = re.toLowerCase().replace(/ /g,\"_\").replace(/-/g,\"_\");\r\n            str = str.toLowerCase().replace(/ /g,\"_\").replace(/-/g,\"_\");\r\n\r\n            var midstring;\r\n            if (str.search(re) != -1) {\r\n                midstring = true;\r\n            } else {\r\n                midstring = false;\r\n            }\r\n\r\n            return midstring;\r\n        }\r\n\r\n        function compare(a, b) {\r\n            if (a.price < b.price) {\r\n                return -1;\r\n            }\r\n            if (a.price > b.price) {\r\n                return 1;\r\n            }\r\n            // a должно быть равным b\r\n            return 0;\r\n        }\r\n\r\n        function comparePrice(Pr){\r\n            //console.log(Pr);\r\n            return Object.keys(Pr).sort(compare)\r\n        }\r\n\r\n\r\n        function ArrayProducts(Pr,ClickProductF,setProductModal,setCart, getButtonInCartProduct,ReverceStatus = 0,SearchText = null) {\r\n            var CatalogLists = [];\r\n            if(ReverceStatus === 0){\r\n                CatalogLists = ReverceCatalog(Pr);\r\n            }\r\n            if(ReverceStatus === 1){\r\n                CatalogLists = comparePrice(Pr);\r\n            }\r\n\r\n            if(ReverceStatus === 2){\r\n                CatalogLists = Object.keys(Pr);\r\n            }\r\n\r\n            if(ReverceStatus === 3){\r\n                if(global.settingsFilterSearch.typeSearch === 0) {\r\n                    CatalogLists = SearchProductTitle(Pr, SearchText);\r\n                }else{\r\n                    CatalogLists = SearchProductDescription(Pr, SearchText);\r\n                }\r\n            }\r\n\r\n            if(global.settingsFilterSearch.typeProduct === false){}else{\r\n                CatalogLists = SearchProductType(Pr, global.settingsFilterSearch.typeProduct,CatalogLists);\r\n            }\r\n\r\n\r\n            //console.log('|||||||||||||||||||||||||||||||',CatalogLists.length);\r\n\r\n            const ArrayPr = CatalogLists.map((oneProduct, keyId) =>\r\n                <OneProduct key={'Products_'+keyId} product={Pr[oneProduct]} ClickProduct={ClickProductF.bind(this)} setCart={setCart.bind(this)} setProductModal={setProductModal.bind(this)} getButtonInCartProduct={getButtonInCartProduct.bind(this)}/>\r\n            );\r\n            return ArrayPr;\r\n        }\r\n\r\n\r\n        function ShowProductCategory(nameCategorys){\r\n            //console.log('ShowProductCategory ',nameCategorys);\r\n            if(nameCategorys.nameCategorys === 'sets'){\r\n                // console.log('d-d-d-d-',nameCategorys.productsLists[nameCategorys.idCategory]);\r\n                return (<GetSets\r\n                    SearchState={nameCategorys.SearchState}\r\n                    key={nameCategorys.key}\r\n                    names={nameCategorys.nameCategorys}\r\n                    ProductArray={nameCategorys.productsLists}\r\n                    ClickProduct={nameCategorys.ClickProduct.bind(this)}\r\n                    setCart={nameCategorys.setCart.bind(this)}\r\n                    setProductModal={nameCategorys.setProductModal.bind(this)}\r\n                    getButtonInCartProduct={nameCategorys.getButtonInCartProduct.bind(this)}\r\n                />);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'sushi'){\r\n                return (<GetSushi names={nameCategorys.nameCategorys}/>);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'roli'){\r\n                return (<GetRoli names={nameCategorys.nameCategorys}/>);\r\n            }else{\r\n                return (<GetNoneCat names={nameCategorys.nameCategorys}/>);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        function GetSets(ArrayPr) {\r\n           //console.log('ArrayPr ',ArrayPr);\r\n            if(ArrayPr.SearchState == '' || ArrayPr.SearchState === false){\r\n                return (\r\n                    <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                        {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),0)}\r\n                    </Div>\r\n                );\r\n            }else{\r\n                return (\r\n                    <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                        {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),3,ArrayPr.SearchState)}\r\n                    </Div>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        function SearchFn(ArrayPr,SrText) {\r\n           //console.log('ArrayPr ',ArrayPr);\r\n            return (\r\n                <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                    {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),3,SrText)}\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetSushi(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с креветкой</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши краб</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши копченый лосот</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetRoli(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с тунцом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл Филадельфия</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Филадельфия с крабом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetNoneCat(names){\r\n            return (\r\n                <Div id={names} className=\"blockCategoryFlex\">\r\n                <h1>К сожаление категория пуста!</h1>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        // function GetModalProduct(product){\r\n        //     return(\r\n        //\r\n        //     )\r\n        // }\r\n\r\n        return (\r\n            <div>\r\n                {/*<Cell*/}\r\n                {/*    className=\"BoxCellSearch\"*/}\r\n                {/*    asideContent={*/}\r\n                {/*        <Icon24Filter*/}\r\n                {/*            onClick={*/}\r\n                {/*                ()=>{this.props.showModal('MODAL_Filter_Catalog');}*/}\r\n                {/*            }*/}\r\n                {/*        />}*/}\r\n                {/*>*/}\r\n                {/*<Search*/}\r\n                {/*    value={this.state.search}*/}\r\n                {/*    onChange={this.onChange}*/}\r\n                {/*    after={null}*/}\r\n                {/*/>*/}\r\n                {/*</Cell>*/}\r\n                <div className=\"clrHeight\"></div>\r\n            <ShowProductCategory\r\n                SearchState={this.props.searchProduct}\r\n                productsLists={this.props.productsLists}\r\n                nameCategorys={this.props.nameCategory}\r\n                idCategory={this.props.idCategorys}\r\n                ClickProduct={this.props.onClickProduct.bind(this,'Panels_Product')}\r\n                setCart={this.props.setCart.bind(this)}\r\n                setProductModal={this.props.setProductModal.bind(this)}\r\n                getButtonInCartProduct={this.props.getButtonInCartProduct.bind(this)}\r\n            />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Placeholder, Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar,Textarea, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon16Clear from '@vkontakte/icons/dist/16/clear';\r\nimport DiliveryAddress from \"./DiliveryAddress\";\r\nimport AffiliateList from \"./AffiliateList\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Preorder from \"../preorder\";\r\nimport NoPreorder from \"../noPreorder\";\r\n\r\n\r\nconst orangeBackground = {\r\n    backgroundImage: 'linear-gradient(135deg, #ffb73d, #ffa000)'\r\n};\r\n\r\nconst blueBackground = {\r\n    backgroundColor: '#ffffff'\r\n};\r\n\r\nclass Dilivery extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            UserCard:{phone:\"\",email:\"\"},\r\n            CheckSMSCode:false,\r\n            phoneValue:\"\",\r\n            codeValue:\"\",\r\n            resultVerificationCode:true,\r\n            tooltip: true,\r\n            snackbar: null,\r\n            showBTNNewAddress:false,\r\n            showFormNewAddress:false\r\n        };\r\n\r\n        this.openBase = this.openBase.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.openBase();\r\n\r\n        async function getPhoneUserVK(setState){\r\n            connect.sendPromise(\"VKWebAppGetPhoneNumber\",{\"sign\":\"T3in3QPDby8GsRNAfsEnEoYmVt7Se2dy0XUOhnCSlSw\"})\r\n                .then((data ) => {\r\n                    //console.log(data,\"Данные пользователя\");\r\n                    setState({ UserCard:{phone: data.phone_number} });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ------  \",err);\r\n                });\r\n        }\r\n\r\n        //console.log(\"Получаем телефон\");\r\n        {this.props.userSystemInfo.error === true && getPhoneUserVK(this.setState.bind(this));}\r\n    }\r\n\r\n\r\n    openBase (e = null) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Clear fill=\"#ff0000\" width={16} height={16} /></Avatar>}\r\n                >\r\n                    {e===null && <span>Проверочный код введен не верно, повторите попытку!</span>}\r\n                    {e!==null && e}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n\r\n    setVerificationPhone(){\r\n        //console.log('Отправили запрос на верификацию');\r\n        axios('https://sushi-time31.ru/api/VerificationPhone&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_SMS\"){\r\n                        //console.log('СМС отправлено, выводим поле для ввода кода');\r\n                        this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase('Номер телефона введен не верно!');\r\n                    }\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    checkVerificationCode(){\r\n        //console.log('Отправили запрос на проверку кода',this.props.userInfo.id);\r\n        axios('https://sushi-time31.ru/api/VerificationCode&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                    VerificationCode: this.state.codeValue,\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_CODE_V\"){\r\n                        //console.log('Данные сохранены, можно обновить приложение, пользователь авторизован');\r\n                        this.props.getUserSystemInfo(this.props.userInfo.id);\r\n                        //this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    getValueInputPhone(event){\r\n        this.setState({UserCard:{phone: event.target.value}});\r\n        //console.log(this.state.UserCard.phone);\r\n    }\r\n\r\n    getValueInputCode(event){\r\n        this.setState({codeValue: event.target.value});\r\n    }\r\n\r\n    getCommentsData(e){\r\n        this.props.setComment(e.target.value);\r\n    }\r\n\r\n    getDataCountPerson(types){\r\n        var values_count = this.props.countPerson;\r\n        switch(types){\r\n            case '-': values_count -= 1; break;\r\n            case '+': values_count += 1; break;\r\n            default: console.log('Нет параметра');\r\n        }\r\n\r\n        if(values_count<=0){ values_count = 1;}\r\n        if(values_count === ''){ values_count = 1;}\r\n        if(values_count >9){ values_count = 9;}\r\n\r\n        this.props.setStates({countPerson: values_count});\r\n    }\r\n\r\n    getCountPersonInput(){\r\n        return (\r\n            <Group title=\"Кол-во приборов\">\r\n                <Div style={{display: 'flex',justifyContent:'center'}}>\r\n                    <Button size=\"l\" stretched style={{marginRight: 10,maxWidth:50,background:\"#ff7300\"}} onClick={this.getDataCountPerson.bind(this,'-')}>-</Button>\r\n                    <Input type=\"number\" style={{maxWidth:80,textAlign:\"center\"}} value={this.props.countPerson} readOnly=\"readOnly\"/>\r\n                    <Button size=\"l\" stretched style={{marginLeft: 10,maxWidth:50,background:\"#ff7300\"}} onClick={this.getDataCountPerson.bind(this,'+')}>+</Button>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth(){\r\n        return(<Group>\r\n            <FormLayout>\r\n                {this.state.CheckSMSCode === true && <FormLayoutGroup top=\"Введите одноразовый код из СМС\">\r\n\r\n                    <Input type=\"number\" placeholder=\"1234\" onChange={this.getValueInputCode.bind(this)} />\r\n\r\n\r\n                    <Button level=\"commerce\" style={{\"background\":\"#ff7300\"}}\r\n                            onClick={()=> {\r\n                                //console.log(this.state.codeValue);\r\n                                this.checkVerificationCode()\r\n                                }\r\n                            }\r\n                    >Подтвердить\r\n                    </Button>\r\n                    <Button level=\"secondary\" style={{\"float\":\"right\"}} onClick={() => {this.setState({CheckSMSCode:false})}}>Выслать повторно</Button>\r\n                </FormLayoutGroup>}\r\n\r\n                {this.state.CheckSMSCode === false && <FormLayoutGroup top=\"Подтвердите номер телефона\">\r\n                    <Input type=\"number\" placeholder=\"79876543210\" defaultValue={this.state.UserCard.phone} onChange={this.getValueInputPhone.bind(this)}/>\r\n                    <Button level=\"commerce\" style={{\"background\":\"#ff7300\"}}\r\n                            onClick={\r\n                                () => {\r\n                                    this.setVerificationPhone();\r\n                                    //console.log(this.state.UserCard.phone)\r\n                                }\r\n                            }\r\n                    >\r\n                        Получить код\r\n                    </Button>\r\n                    <Button onClick={() => {this.setState({CheckSMSCode:true})}} level=\"secondary\" style={{\"float\":\"right\"}}>Уже есть код</Button>\r\n                </FormLayoutGroup>}\r\n            </FormLayout>\r\n            {this.state.snackbar}\r\n        </Group>);\r\n    }\r\n\r\n    getButtonTypeDilivery(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"0\"}}>\r\n            <Button size=\"l\" stretched style={{marginRight: 8}} level={this.props.checkedTypeDilivery === 1 ? \"secondary\" : \"commerce\"} onClick={()=>{this.props.setTypeDilivery(0)}}>Доставка</Button>\r\n            <Button size = \"l\" stretched level={this.props.checkedTypeDilivery === 0 ? \"secondary\" : \"commerce\"}  onClick={()=>{this.props.setTypeDilivery(1)}}>Самовывоз</Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getButtonTypeOrder(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"20\",\"paddingTop\":\"0\"}}>\r\n                <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"commerce\" : \"secondary\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(true);}}\r\n                >\r\n                    Ближайшее\r\n                </Button>\r\n                <Button size = \"l\" stretched\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"secondary\" : \"commerce\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(false);}}\r\n                >\r\n                    Ко времени\r\n                </Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n\r\n    getPreorderBlock(){\r\n        return(\r\n            <Group\r\n                title=\"Время получение заказа\"\r\n            >\r\n                {this.getButtonTypeOrder()}\r\n                {\r\n                    this.props.DataDeliveryInfo.typeOrderDate\r\n                        ?\r\n                        <NoPreorder\r\n                            typeDelivery={this.props.DataDeliveryInfo.checkedTypeDilivery}\r\n                        />\r\n                        :\r\n                        <Preorder\r\n                            DataInfos={this.props.DataDeliveryInfo}\r\n                            setStates={this.props.setStates.bind(this)}\r\n                            key=\"Preorders\"\r\n                        />\r\n                }\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserAuth(){\r\n        //console.log('По дефолту адрес ',this.props.addressDefault)\r\n        return(\r\n            <div>\r\n                {this.getButtonTypeDilivery()}\r\n                {this.props.checkedTypeDilivery === 0 ?\r\n                    this.getListAddress()\r\n                    :\r\n                    this.getListAffiliate()\r\n                }\r\n                {this.getPreorderBlock()}\r\n                {this.getCountPersonInput()}\r\n                {this.getCommentsTextarea()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getNoneCartProduct(){\r\n        return(\r\n            <Placeholder\r\n                icon={<Icon56ErrorOutline />}\r\n                action={false}\r\n\r\n            >\r\n                <h2>В корзине отсутствуют товары</h2>\r\n                <p>Для совершения заказа, нужно положить хотябы 1 товар в корзину!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n\r\n    getListAddress(){\r\n        //console.log(this.state.showBTNNewAddress);\r\n        return(\r\n            <Group\r\n                className=\"GroupBlockListAddress\"\r\n                title=\"Адреса доставки\"\r\n                   description={this.state.showBTNNewAddress ?\r\n                       <Button\r\n                           size=\"l\"\r\n                           level=\"secondary\"\r\n                           style={{ background: '#FF7300',color:\"#FFFFFF\" }}\r\n                           // onClick={()=>{this.setState({showFormNewAddress:true})}}\r\n                           onClick={()=>{\r\n                               this.props.showModal('MODAL_NEWADDRESS');\r\n                           }}\r\n                       >Добавить адрес</Button>\r\n                       :\r\n                       \"\"}\r\n            >\r\n                <DiliveryAddress\r\n                    userInfo={this.props.userInfo}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    setShowBTNNewAddress={this.setState.bind(this)}\r\n                    showFormNewAddress={this.state.showFormNewAddress}\r\n                    setStates={this.props.setStates.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n                    showModals={this.props.showModal.bind(this)}\r\n                    hideModals={this.props.hideModals.bind(this)}\r\n                />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getListAffiliate(){\r\n        return (\r\n            <Group title=\"Адреса самовывоза\">\r\n            <AffiliateList\r\n                userInfo={this.props.userInfo}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n                setStates={this.props.setStates.bind(this)}\r\n            />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCommentsTextarea () {\r\n        return (\r\n            <Group title=\"Комментарий к заказу\">\r\n                <Div>\r\n                <Textarea value={this.props.commentary} onChange={this.getCommentsData.bind(this)} placeholder=\"Ваш комментарий\"/>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getOkListAddress(Param){\r\n        return(\r\n            Param <=0 ? this.getNoneCartProduct() : this.getInfoUserAuth()\r\n        )\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                {this.props.userSystemInfo.error === true &&\r\n                    this.getInfoUserNoneAuth()\r\n                }\r\n\r\n                {this.props.userSystemInfo.error === false &&\r\n                    this.getOkListAddress(this.props.ProductList.length)\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Dilivery;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAddress from \"./GetOneAddress\";\r\nimport GetOneAddressOff from \"./GetOneAddressOff\";\r\nimport OneProduct from \"../catalog/OneProduct\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport FormNewAddress from './FormNewAddress';\r\n\r\nclass DiliveryAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAddress:[],\r\n            listAddressOff:[],\r\n            addressOk:false,\r\n            dataAddress:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAddressUserSystem();\r\n        this.props.setStates({formNewAddressData: <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n    }\r\n\r\n    setAddressEdit(e){\r\n        //console.log(this.state.listAddress);\r\n        this.props.setStates({formEditAddressData: <FormNewAddress AddressEdit={this.state.listAddress[e]} setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n        this.props.showModals('MODAL_EditADDRESS');\r\n    }\r\n\r\n\r\n    getAddressUserSystem(delUpdate = false){\r\n        axios('https://sushi-time31.ru/api/getAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_UserVK: this.props.userInfo.id,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                    if(data.error === 'Address not found'){\r\n                        console.log('Нужно вывести форму для создания первого адреса пользователя');\r\n                        this.getFormNewAddress();\r\n                    }else{\r\n\r\n                    }\r\n                }else{\r\n                   // console.log(data);\r\n                    this.setState({listAddress:data.listAddress});\r\n                    this.props.setStates({listAddressGlobal:data.listAddress});\r\n\r\n                    this.setState({listAddressOff:data.ListAddressNoDelivery});\r\n                    this.props.setStates({listAddressGlobalOff:data.ListAddressNoDelivery});\r\n\r\n                    if(delUpdate === true){\r\n                        this.getAddressUsers(this.state.listAddress,true);\r\n                    }else{\r\n                        this.getAddressUsers(this.state.listAddress);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n\r\n    setAddressInfoUsers(e,type=0){\r\n            if (type === 0) {\r\n                var listAddressU = Object.keys(this.state.listAddress);\r\n                if(listAddressU.length > 0) {\r\n                    // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n                    // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n                    var DataSetAddress = this.state.listAddress[listAddressU[e]];\r\n                    this.props.setStates({\r\n                        addressOrderInfoUser: 'г. ' + DataSetAddress.city + ', ул. ' + DataSetAddress.street + ', д. ' + DataSetAddress.home\r\n                    });\r\n                }\r\n            }\r\n    }\r\n\r\n    getFormNewAddress(){\r\n        this.props.setAddressDefault(null);\r\n        this.state.dataAddress = <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)}/>;\r\n        this.setState({addressOk:true});\r\n        this.props.setShowBTNNewAddress({showBTNNewAddress:false});\r\n\r\n    }\r\n\r\n    setDataDiliveryPrice(n,ee = 'Дефолт 0'){\r\n        var listAddressU = Object.keys(this.state.listAddress);\r\n        // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n        // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n        if(listAddressU.length <= 0){\r\n            console.log('Адресов нет, должны вернуть только не доступные адреса');\r\n            this.props.setAddressDefault(null);\r\n            //return this.getAddressUsers(this.state.listAddress, true);\r\n        }else {\r\n            if (listAddressU[n] in this.state.listAddress) {\r\n                //console.log('Все ок, продолжаем по адресам');\r\n            } else {\r\n               // console.log('Адреса такого нет, ставим в дефаулт');\r\n                this.props.setAddressDefault(0);\r\n               // console.log('Должны переустановить дефаултный адрес на 0, адреса есть');\r\n                return this.getAddressUsers(this.state.listAddress, true);\r\n            }\r\n        }\r\n\r\n        if(listAddressU.length <= 0){\r\n           // console.log('Адресов нет, но продолжаем');\r\n           //  console.log('Установили значения стоимости доставки ', ee);\r\n        }else {\r\n            var DataSetAddress = this.state.listAddress[listAddressU[n]].diliveryData;\r\n            this.props.setStates({\r\n                priceDelivery: DataSetAddress.priceDilivery,\r\n                minSumOrder: DataSetAddress.min_sum_order,\r\n                minSumFreeDelivery: DataSetAddress.min_sum_free_dilivery\r\n            });\r\n           // console.log('Установили значения стоимости доставки ', ee);\r\n        }\r\n\r\n    }\r\n\r\n    getAddressUsers(listAddress,delUpdate = false) {\r\n        if(this.props.addressDefault === null & Object.keys(listAddress).length > 0){\r\n          //  console.log('Устанавливаем дефаултное значение адреса на 0','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(0);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n        if(this.props.addressDefault !== null & Object.keys(listAddress).length <= 0){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0 с условием что адресов нет','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(null);\r\n            this.setDataDiliveryPrice(0);\r\n        }\r\n\r\n        if(delUpdate === true){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0');\r\n            this.props.setAddressDefault(0);\r\n            this.getAddressUsers(listAddress,false);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }else{\r\n            this.state.dataAddress = Object.keys(listAddress).map((dataAddress, keyId) =>\r\n                <GetOneAddress\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId}\r\n                    AddresInfo={listAddress[dataAddress]}\r\n                    NumberAddress={keyId}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n\r\n            this.state.dataAddressOff = Object.keys(this.state.listAddressOff).map((dataAddress2, keyId2) =>\r\n                <GetOneAddressOff\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId2}\r\n                    AddresInfo={this.state.listAddressOff[dataAddress2]}\r\n                    NumberAddress={keyId2}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n            this.setState({addressOk:true});\r\n            this.props.setShowBTNNewAddress({showBTNNewAddress:true});\r\n            this.setDataDiliveryPrice(this.props.addressDefault, 'На '+this.props.addressDefault);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n    }\r\n\r\n    getListAddressVisual(){\r\n        return(\r\n            <div>\r\n                {this.state.dataAddress}\r\n                {this.state.dataAddressOff}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (this.state.addressOk === false ? <div>Загрузка адресов доставки <ScreenSpinner/></div> : this.getListAddressVisual()\r\n            );\r\n    };\r\n}\r\n\r\nexport default DiliveryAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n            axios('https://sushi-time31.ru/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:{id:a},\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            this.props.setAddressDefault('del');\r\n                           // console.log('Обновляем адреса',data);\r\n                            this.props.getAddressUserSystem(true);\r\n                            this.props.setPopout({ popout:null});\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    openDefault (a) {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Отмена',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }, {\r\n                        title: 'Удалить',\r\n                        autoclose: true,\r\n                        action: () => this.deletedAddress(a),\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Удаление адреса</h2>\r\n                    <p>Вы уверены что хотите удалить адрес?</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n    getAddressFull(n){\r\n        return(<div>\r\n                <span style={{width:\"75%\",float:\"left\"}}>\r\n                 г. {this.props.AddresInfo.city}, ул. {this.props.AddresInfo.street}, д. {this.props.AddresInfo.home}, подъезд {this.props.AddresInfo.podezd}, этаж {this.props.AddresInfo.etaj}, кв. {this.props.AddresInfo.kvartira}\r\n                </span>\r\n                <span style={{width:\"24%\",float:\"right\"}}><Icon28EditOutline\r\n                    onClick={\r\n                        ()=>{\r\n                            // console.log('Редактируем адрес ',n);\r\n                            this.props.setAddressEdit(this.props.AddresInfo.id);\r\n                        }\r\n                    }\r\n                    style={{float:\"left\",marginRight:\"10px\"}}/> <Icon28CancelCircleOutline style={{float:\"left\"}}\r\n                                                                                           onClick={\r\n                                                                                               ()=>{\r\n                                                                                                   // console.log('Удаляем адрес ');\r\n                                                                                                   this.openDefault(this.props.AddresInfo.id);\r\n                                                                                               }\r\n                                                                                           }\r\n                /></span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} defaultChecked onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n,'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n, 'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddressOff extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n        this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n        axios('https://sushi-time31.ru/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    addressInfo:{id:a},\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.result.result_add === true){\r\n                        this.props.setAddressDefault('del');\r\n                        //console.log('Обновляем адреса',data);\r\n                        this.props.getAddressUserSystem(true);\r\n                        this.props.setPopout({ popout:null});\r\n                    }else{\r\n                        console.log('Ошибка ',data);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n            });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'У Вас в корзине лежат товары, которые на этот адрес не доставляются!'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'У Вас в корзине лежат товары, которые на этот адрес не доставляются!'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddressOff;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAffiliateAddress from \"./GetOneAffiliateAddress\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass AffiliateList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAffiliate:[],\r\n            addressAffiliateOk:false,\r\n            dataAffiliate:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios('https://sushi-time31.ru/api/getAffiliate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_City: 1,\r\n                    id_UserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo,'Самовывоз');\r\n                }else{\r\n                    //console.log(data,'Самовывоз');\r\n                    if(Object.keys(data.listOffAffiliate).length>0){\r\n                       // console.log('Есть запрещенные точки, проводим цикл');\r\n                        Object.keys(data.listOffAffiliate).map((datas,keys)=>\r\n                            {\r\n                                if(this.props.AffiliateDefault === keys){\r\n                                    //console.log('Точка самовывоза по умолчанию совпадает с запрещенной, ставим нуль ', keys);\r\n                                    this.props.setAffiliateDefault(0);\r\n                                }else{\r\n                                   // console.log('Точка по умолчанию не совпадает с запрещенной, ничего не делаем ',keys);\r\n                                }\r\n                            }\r\n                        );\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }else{\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    setAddressInfoUsers(e,type=1){\r\n        if(type===1){\r\n            var listAddressU = Object.keys(this.state.listAffiliate);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.state.listAffiliate[listAddressU[e]];\r\n            this.props.setStates({\r\n                addressOrderInfoUser: DataSetAddress.title\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    getAddressAffiliate(listAddress) {\r\n        this.props.getDeliveryDataPriceItogAffiliate();\r\n        this.setAddressInfoUsers(this.props.AffiliateDefault);\r\n        this.state.dataAffiliate = Object.keys(listAddress).map((dataAffiliate, keyId) =>\r\n            <GetOneAffiliateAddress\r\n                key={'Affiliate_'+keyId}\r\n                AddresInfo={listAddress[dataAffiliate]}\r\n                NumberAddress={keyId}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n            />\r\n        );\r\n       this.setState({addressAffiliateOk:true});\r\n        //this.state.addressOk:true;\r\n        //return ArrayPr;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            this.state.addressAffiliateOk === false ? <div><h3>Ареса самовывоза</h3> <ScreenSpinner/> <p></p></div> : this.state.dataAffiliate\r\n        );\r\n    };\r\n}\r\n\r\nexport default AffiliateList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\n\r\nclass GetOneAffiliateAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n    }\r\n\r\n    getAddressTitle(){\r\n        return(\r\n            <span>\r\n               {this.props.AddresInfo.title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    getAddressFull(){\r\n        return(\r\n            <span style={{\"color\":\"#ffae6b\"}} dangerouslySetInnerHTML={{__html: this.props.AddresInfo.operating_mode}}>\r\n\r\n            </span>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    defaultChecked onClick={() => {\r\n                        this.props.setAffiliateDefault(n);\r\n                    ;this.props.setAddressInfoUsers(n);\r\n                    }\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    onClick={() => {\r\n                        this.props.setAffiliateDefault(n)}\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.AffiliateDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAffiliateAddress;","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch, Select, FormLayout} from '@vkontakte/vkui/';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Preorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockPreorder:false,\r\n            listDatePreorder:[],\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null\r\n        }\r\n\r\n        this.onChangeS = this.onChangeS.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockPreorder:true});\r\n        this.getDateList();\r\n        this.setState({\r\n            SelectDatePreorder:this.props.DataInfos.SelectDatePreorder,\r\n            SelectTimePreorder:this.props.DataInfos.SelectTimePreorder\r\n        });\r\n        console.log(this.props.DataInfos.SelectDatePreorder);\r\n    }\r\n\r\n    getDateList(){\r\n        axios('https://sushi-time31.ru/api/getPreorderDate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    this.setState({listDatePreorder:data.list});\r\n                    console.log(data.list);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    onChangeS(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n        this.props.setStates({[name]: value});\r\n        //console.log(this.state);\r\n    }\r\n\r\n    getSelectDate(){\r\n        const ListDate = Object.keys(this.state.listDatePreorder).map((data,n)=>{\r\n            return(\r\n                <option key={data+\"preorderDates\"} value={data}>{this.state.listDatePreorder[data].title}</option>\r\n            );\r\n        });\r\n        return (\r\n            <div>\r\n            <Cell>\r\n                <Select\r\n                    top=\"Дата получения заказа\"\r\n                    key=\"datePreorder\"\r\n                    placeholder=\"Дата получения\"\r\n                    name=\"SelectDatePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectDatePreorder}\r\n            >{ListDate}</Select>\r\n            </Cell>\r\n            <Cell>\r\n                {this.getSelectTime()}\r\n            </Cell>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSelectTime(){\r\n        if(this.state.SelectDatePreorder in this.state.listDatePreorder) {\r\n            var ListTimes = this.state.listDatePreorder[this.state.SelectDatePreorder].timeList;\r\n            const ListTime = Object.keys(ListTimes).map((times, n) => {\r\n                if(ListTimes[times].false === true){\r\n                    return ('');\r\n                }else {\r\n                    return (\r\n                        <option key={times + \"preorderTimes\"}\r\n                                value={times}\r\n                        >\r\n                            {ListTimes[times].title}\r\n                        </option>\r\n                    );\r\n                }\r\n            });\r\n            return (\r\n                <Cell>\r\n                    <Select\r\n                    top=\"Время получения заказа\"\r\n                    key=\"datePreorderTime\"\r\n                    placeholder=\"Время получения\"\r\n                    name=\"SelectTimePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectTimePreorder}\r\n                >{ListTime}</Select>\r\n                </Cell>\r\n            );\r\n        }else{\r\n            return ('');\r\n        }\r\n    }\r\n\r\n    getBlockPreorder(){\r\n        return(\r\n                <Div key=\"DivPreorder\">\r\n                    {\r\n                        this.state.loadBlockPreorder ?\r\n                            this.getSelectDate()\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlockPreorder()\r\n        );\r\n    }\r\n}\r\nexport default Preorder;\r\n","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\n\r\n\r\nclass NoPreorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockOrder:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockOrder:true});\r\n    }\r\n\r\n    getBlocknoPreorder(){\r\n        return(\r\n                <Cell\r\n                    before={<Icon24Recent />}\r\n                    style={{paddingBottom:\"10px\"}}\r\n                >\r\n                    {\r\n                        this.state.loadBlockOrder ?\r\n                            <div>{this.props.typeDelivery ? \"Забрать в ближайшее время\" : \"Доставить в ближайшее время\"}</div>\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Cell>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlocknoPreorder()\r\n        );\r\n    }\r\n}\r\nexport default NoPreorder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\n\r\nclass NewOrderServer extends React.Component{\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    setDataServer(){\r\n        this.props.setStates({statusNewOrder:'Запрос прошел'});\r\n        axios('https://sushi-time31.ru/api/setNewOrder&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    idUserVK: this.props.userInfo.id,\r\n                    dataOrder:this.props.DataOrderInfo\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                   // console.log('Ответ сервера ',data);\r\n                    if(data.status == \"OK\"){\r\n                        this.props.getPageOkOrderSet({newOrderStats:true});\r\n                        this.props.setOkNewOrderView();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button size=\"xl\" onClick={()=>{this.setDataServer()}} className=\"WeightFontBold\">Завершить заказ</Button>\r\n        );\r\n    };\r\n}\r\n\r\nexport default NewOrderServer;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\n\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport {List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\n\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\n\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            StatusNotification:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getStatusNotificate();\r\n    }\r\n\r\n    getPanelProfil(){\r\n        return(\r\n            <div id={this.props.id} style={{maxWidth:'1200px',margin:'0 auto'}} them='white'>\r\n                {this.props.fetchedUser &&\r\n                    <Group title=\"Ваши данные\r\n    \">\r\n                        <Cell\r\n                            before={this.props.fetchedUser.photo_200 ? <Avatar src={this.props.fetchedUser.photo_200}/> : null}\r\n                            description={this.props.fetchedUser.city && this.props.fetchedUser.city.title ? this.props.fetchedUser.city.title : ''}\r\n                        >\r\n                            {`${this.props.fetchedUser.first_name} ${this.props.fetchedUser.last_name}`}\r\n                        </Cell>\r\n                    </Group>\r\n                }\r\n\r\n                <Group>\r\n                    <Cell\r\n                        before={<Icon24Note />}\r\n                        description=\"Список совершенных Вами онлайн заказов\"\r\n                        onClick={this.props.setShowUserOrderList.bind()}\r\n                    >\r\n                        Мои заказы\r\n                    </Cell>\r\n                </Group>\r\n\r\n\r\n                {this.props.dataUsers.dataUsers.error ?\r\n                    this.getInfoUserNoneAuth()\r\n                    :\r\n\r\n                    <Group title=\"Активность\">\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Coins />}\r\n                            >\r\n                                Бонус Таймы: {this.props.dataUsers.dataUsers.dataUser.point}\r\n                            </Cell>\r\n                        </List>\r\n                    </Group>\r\n                }\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24Notification />}\r\n                            asideContent={<Switch\r\n                                checked={this.state.StatusNotification}\r\n                                onChange={()=>{this.PushClick()}} />}\r\n                            description=\"Изменение статуса заказа, акциии...\"\r\n                        >\r\n                            PUSH - уведомления\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24CommentOutline />}\r\n                        >\r\n                            <a style={{color:\"#252622\",textDecoration:\"none\"}}\r\n                               href=\"//vk.com/im?sel=-87074888\" target=\"_blank\">\r\n                                Связаться с нами\r\n                            </a>\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth() {\r\n        return (\r\n            <Div>\r\n                Авторизуйтесь по номеру телефона, чтобы просматривать данные!\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n                this.props.setStatusNotification(datas.response.is_allowed);\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            });\r\n    }\r\n\r\n    //defaultChecked\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            })\r\n            .catch((err)=> {\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getPanelProfil()\r\n        );\r\n    }\r\n}\r\nexport default UserInfo;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport { View, Group, List, Cell } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Persik = props => (\r\n    <Panel id={props.id}>\r\n        <PanelHeader\r\n            left={<HeaderButton onClick={props.go} data-to=\"home\">\r\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n            </HeaderButton>}\r\n        >\r\n            Persik\r\n        </PanelHeader>\r\n        <Div>\r\n            <h2 size=\"x3\" level=\"1\">Это не совсем персик</h2>\r\n            <View activePanel=\"main\">\r\n                <Panel id=\"main\">\r\n                    <PanelHeader>VKUI</PanelHeader>\r\n                    <Group title=\"Items\">\r\n                        <List>\r\n                            <Cell>Hello</Cell>\r\n                            <Cell>World</Cell>\r\n                        </List>\r\n                    </Group>\r\n                </Panel>\r\n            </View>\r\n        </Div>\r\n        <img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\r\n    </Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport UserInfo from './ProfileUser/UserInfo';\r\nimport Persik from './Persik';\r\nimport NoPersik from './Nopersik';\r\n\r\nconst ProfileUserPage = (dataUsers) => {\r\n\tconst [activePanel, setActivePanel] = useState('homeUsers');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\t//const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// connect.subscribe(({ detail: { type, data }}) => {\r\n\t\t// \tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t// \t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t// \t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t// \t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t// \t}\r\n\t\t// });\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\t//setPopout(null);\r\n\t\t\t//console.log(connect);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<View activePanel={activePanel}>\r\n\t\t\t<UserInfo\r\n\t\t\t\tid='homeUsers'\r\n\t\t\t\tfetchedUser={fetchedUser}\r\n\t\t\t\tgo={go}\r\n\t\t\t\tdataUsers={dataUsers}\r\n\t\t\t\tsetActivePanels={setActivePanel.bind(this)}\r\n\t\t\t\tsetStatusNotification={dataUsers.setStatusNotification.bind(this)}\r\n\t\t\t\tsetShowUserOrderList={dataUsers.setShowUserOrderList.bind(this)}\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default ProfileUserPage;\r\n\r\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './StartPageVKapp';\n// import App from './App2';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert, Div,Input,FormLayout, Button, Select } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass FormNewAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                city: '',\r\n                street: '',\r\n                home: '',\r\n                entrance: '',\r\n                level: '',\r\n                flat: '',\r\n                comment:''\r\n        }\r\n\r\n        this.addressItems = [\r\n            // { label: 'Город', name: 'city', statusChech:'yes', minValue:5, valPls:'' },\r\n            { label: 'Название улицы', name: 'street', statusChech:'yes', minValue:4, valPls:'' },\r\n            { label: '№ дома', name: 'home', statusChech:'yes', minValue:0, valPls:'' },\r\n            { label: '№ квартиры/офиса', name: 'flat', statusChech:'', minValue:0, valPls:'' },\r\n            { label: '№ подъезда', name: 'entrance', statusChech:'', minValue:0, valPls:'' },\r\n            { label: 'Этаж', name: 'level', statusChech:'', minValue:0, valPls:''},\r\n            { label: 'Примечание', name: 'comment', statusChech:'', minValue:0, valPls:'Пример: Квартира сестры' }\r\n        ];\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.openDefault = this.openDefault.bind(this);\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n\r\n        if(this.props.AddressEdit){\r\n            this.state = {\r\n                    id:this.props.AddressEdit.id,\r\n                    city: this.props.AddressEdit.city,\r\n                    street: this.props.AddressEdit.street,\r\n                    home: this.props.AddressEdit.home,\r\n                    entrance: this.props.AddressEdit.podezd,\r\n                    level: this.props.AddressEdit.etaj,\r\n                    flat: this.props.AddressEdit.kvartira,\r\n                    comment: this.props.AddressEdit.comment\r\n                }\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n       // console.log(this.state);\r\n    }\r\n\r\n\r\n    openDefault () {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Исправить',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Не все поля адреса заполнены</h2>\r\n                    <p>Внимательно заполните все поля, для сохранения адреса доставки!</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n\r\n    saveNewAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://sushi-time31.ru/api/setAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n    saveEditAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://sushi-time31.ru/api/editAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            //this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n    getCitySelect(idCity,def = null){\r\n        if(idCity in global.CityListBind) {\r\n            const ListCityOrigin = global.CityListBind[idCity].listCity;\r\n            const ListCitys = Object.keys(global.CityListBind[idCity].listCity);\r\n            const ListOption = ListCitys.map((data, key) => {\r\n                return (<option\r\n                    key={key}\r\n                    value={ListCityOrigin[data].title}\r\n                >\r\n                    {\r\n                        ListCityOrigin[data].title\r\n                    }\r\n                </option>);\r\n            });\r\n            return (\r\n                ListOption\r\n            );\r\n        }else{\r\n            return (\"\");\r\n        }\r\n    }\r\n\r\n    getNulledForm(){\r\n        return(\r\n            <FormLayout>\r\n                <Select placeholder=\"Город / Населенный пункт\" onChange={this.onChange} name=\"city\" key={\"input_city\"} top=\"Город\">\r\n                    {this.getCitySelect(1)}\r\n                </Select>\r\n                {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                    <Input\r\n                        type=\"text\"\r\n                        name={name}\r\n                        key={\"input_\"+name}\r\n                        top={label}\r\n                        onChange={this.onChange}\r\n                        status={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >=minValue  ? 'valid' : 'error'\r\n                                    : 'error'\r\n                                : \"\"\r\n                        }\r\n                        bottom={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >=minValue  ? '' : 'Введенные значение не корректно '+this.state[name].length\r\n                                    : 'Обязательно к заполнению'\r\n                                : \"\"\r\n                        }\r\n                        placeholder={valPls}\r\n                    />\r\n                ))}\r\n                <Button size=\"l\" style={{background:\"#ff7300\"}} onClick={()=>{this.saveNewAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Подтвердить адрес</Button>\r\n            </FormLayout>\r\n        );\r\n    }\r\n\r\n\r\n    getEditForm(){\r\n        return(\r\n            <FormLayout>\r\n                <Select placeholder=\"Город / Населенный пункт\" onChange={this.onChange} name=\"city\" key={\"input_city\"} top=\"Город\" defaultValue={this.state.city}>\r\n                    {this.getCitySelect(1)}\r\n                </Select>\r\n                {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                    <Input\r\n                        type=\"text\"\r\n                        name={name}\r\n                        key={\"input_\"+name}\r\n                        top={label}\r\n                        onChange={this.onChange}\r\n                        status={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >minValue  ? 'valid' : 'error'\r\n                                    : 'error'\r\n                                : \"\"\r\n                        }\r\n                        value={this.state[name]}\r\n                        bottom={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >minValue  ? '' : 'Введенные значение не корректно'\r\n                                    : 'Обязательно к заполнению'\r\n                                : \"\"\r\n                        }\r\n                        placeholder={valPls}\r\n                    />\r\n                ))}\r\n                <Button size=\"l\" style={{background:\"#ff7300\"}} onClick={()=>{this.saveEditAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Завершить редактирование</Button>\r\n            </FormLayout>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Div>\r\n                {this.props.AddressEdit ? this.getEditForm() : this.getNulledForm()}\r\n            </Div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default FormNewAddress;","// globals/index.js\r\n\r\nglobal.ApiKey = '03478f08258a5b0e7f4a1e83dae33da9';\r\n\r\nglobal.CityListBind = [];\r\n\r\nglobal.searchProduct = '';\r\n\r\nglobal.settingsFilterSearch = {\r\n    typeSearch:0,\r\n    typeProduct: false\r\n}\r\n\r\nglobal.ii =0;","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\n\r\nexport default function ButtonInCart({CartProducts,typeProduct2,setCarts}){\r\n\r\n    function getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getButtonInCartProduct(typeProduct,setCart){\r\n       // console.log(CartProducts,'---0---',typeProduct,setCart);\r\n        if(!!CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            CartProducts.map((data,key)=>{\r\n                //console.log(data.id_Product,typeProduct.id_Product, data.type_product,typeProduct.type_product,'++++++++++++++++++');\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  getCountButton(typeProduct,CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return(getButtonInCartProduct(typeProduct2,setCarts));\r\n\r\n}\r\n","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nexport default function OneProduct({product,idCategory, ClickProduct, setCart, setProductModal, getButtonInCartProduct}) {\r\n// console.log('ут должна функция должна быть',ClickProduct);\r\n    // const ArrayProducts = product.map(oneProduct =>\r\n    //     //<OneProduct key={oneProduct.id} product={oneProduct} />\r\n    //     <Div className=\"blockProduct\" key={\"id_product_\"+oneProduct.id_Product}>\r\n    //         <Div className=\"imgPrewieProduct\"><img alt={oneProduct.title} src={oneProduct.img}/></Div><Div className=\"titleProduct\">{oneProduct.title}</Div><Div className=\"DescrProduct\">{oneProduct.description}</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">{oneProduct.price} руб.</span></Div>\r\n    //     </Div>\r\n    // );\r\n\r\n    // console.log(key);\r\n\r\n    function escapeHtml(text) {\r\n        var map = {\r\n            '&': '&amp;',\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '\"': '&quot;',\r\n            \"'\": '&#039;'\r\n        };\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n\r\n    function number_format(number, decimals, dec_point, separator ) {\r\n        number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\r\n        var n = !isFinite(+number) ? 0 : +number,\r\n            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n            sep = (typeof separator === 'undefined') ? ',' : separator ,\r\n            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n            s = '',\r\n            toFixedFix = function(n, prec) {\r\n                var k = Math.pow(10, prec);\r\n                return '' + (Math.round(n * k) / k)\r\n                    .toFixed(prec);\r\n            };\r\n        // Фиксим баг в IE parseFloat(0.55).toFixed(0) = 0;\r\n        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))\r\n            .split('.');\r\n        if (s[0].length > 3) {\r\n            s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n        }\r\n        if ((s[1] || '')\r\n            .length < prec) {\r\n            s[1] = s[1] || '';\r\n            s[1] += new Array(prec - s[1].length + 1)\r\n                .join('0');\r\n        }\r\n        return s.join(dec);\r\n    }\r\n\r\n    function getWeightProduct(Product_Weight,Product_WeightType){\r\n        if(Product_WeightType != 'л'){\r\n            return(\r\n                number_format(Product_Weight,'0','.', ' ')+' '+Product_WeightType\r\n            );\r\n        }else{\r\n            return(\r\n                Product_Weight+' '+Product_WeightType\r\n            );\r\n        }\r\n    }\r\n\r\n    function getModyficateBlock(ArrayMod){\r\n        var ListMod = Object.keys(ArrayMod);\r\n        if(ListMod.length <=0){\r\n            return \"\";\r\n        }else{\r\n            var VisualList = ListMod.map((datas,keys)=>{\r\n                return (<div key={keys} className=\"ModyficateProduct\"><img src={ArrayMod[datas].mod_img} /></div>);\r\n            });\r\n            return(\r\n                <div className=\"ModyficateBlock\">{VisualList}</div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function getProductDiv(productList,idCategory,ClickProduct,setCart,setProductModal ,getButtonInCartProduct){\r\n\r\n         //console.log(ClickProduct,'в корзину функция');\r\n        var ProductCat = productList;\r\n\r\n        const WeightProduct = '';\r\n\r\n\r\n\r\n        const ArrayProducts = ProductCat.map((typeProduct,idTypeProduct) =>\r\n            <Div key={\"blockProducts_\"+typeProduct.id_Product+\"_\"+idTypeProduct} className=\"blockProduct\" id={\"id_product_\"+typeProduct.id_Product+\"_type_\"+typeProduct.type_product}>\r\n                {getModyficateBlock(typeProduct.modyficate)}\r\n                <Div className=\"imgPrewieProduct\">\r\n                    <img\r\n                        alt={typeProduct.title}\r\n                        src={typeProduct.img}\r\n                        onClick={() =>{\r\n                            ClickProduct('Panels_Product');\r\n                            setProductModal([typeProduct]);\r\n                            console.log('Нажали на фотку',ProductCat,idTypeProduct)}\r\n                        }\r\n                    />\r\n                </Div>\r\n                <Div className=\"titleProduct\">\r\n                    {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                    {escapeHtmlDecode(typeProduct.title)}\r\n                    <span className=\"redTextP\">\r\n                        {getWeightProduct(typeProduct.weight,typeProduct.weight_type)}\r\n                    </span>\r\n                </Div>\r\n                <Div className=\"DescrProduct\">\r\n                    {escapeHtmlDecode(typeProduct.description)}\r\n                    <div>\r\n                    </div>\r\n                    {typeProduct.type_info != '' ?\r\n                        <div className=\"WeightBlock\">\r\n                            {typeProduct.type_info}\r\n                        </div>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                </Div>\r\n                <Div className=\"priceProductBig\">\r\n\r\n                        {getPriceProducts(typeProduct)}\r\n\r\n                    {getButtonInCartProduct(typeProduct,setCart)}\r\n                </Div>\r\n            </Div>\r\n        );\r\n\r\n\r\n        return ArrayProducts;\r\n    }\r\n\r\n    function getPriceProducts(typeProduct){\r\n        if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n            return (<span className=\"priceProduct\">\r\n                {number_format(typeProduct.price,'0','.',' ')} ₽\r\n                </span>\r\n            );\r\n        }else{\r\n            return(\r\n                <span className=\"priceProduct\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\"}}>{number_format(typeProduct.price_discount.old_price,'0','.',' ')} ₽</s>\r\n                    {number_format(typeProduct.price_discount.new_price,'0','.',' ')} ₽\r\n                </span>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        getProductDiv(product,idCategory,ClickProduct, setCart , setProductModal, getButtonInCartProduct)\r\n    );\r\n}"],"sourceRoot":""}