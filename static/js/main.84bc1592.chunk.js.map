{"version":3,"sources":["StartPageVKapp.js","panels/Cart/Dilivery.js","panels/Cart/DiliveryAddress.js","panels/Cart/GetOneAddress.js","panels/Cart/GetOneAddressOff.js","panels/Cart/AffiliateList.js","panels/Cart/GetOneAffiliateAddress.js","panels/Cart/NewOrderServer.js","panels/ProfileUser/UserInfo.js","panels/Persik.js","panels/Nopersik.js","panels/Profile.js","panels/catalog/ProductList.js","panels/catalog/CategoryList.js","panels/catalog/CatalogProduct.js","panels/Cart/PaymentsPage.js","panels/Cart/CartHome.js","index.js","panels/global/index.js","img/persik.png","panels/Cart/FormNewAddress.js","panels/catalog/ButtonInCart.js","panels/catalog/OneProduct.js"],"names":["require","App","props","parseQueryString","string","slice","split","map","queryParam","kvp","key","value","reduce","query","state","ParamStart","products","loadingCatalog","activeStory","loadingPage","user","userSystemInfo","error","dataUser","cart","countCartProduct","addressDefault","AffiliateDefault","checkedTypeDilivery","commentary","typePay","countPerson","SalePoints","sumCart","activeModal","formNewAddressData","formEditAddressData","listAddressGlobal","listAffiliateGlobal","priceDelivery","minSumOrder","minSumFreeDelivery","errorOrderFinal","DeliveryPriceItog","DeliveryAddressOKCity","addressOrderInfoUser","newOrderStats","StatusLoadSlide","slideHeaderArray","slideIndex","StatusNotification","CityListBind","onStoryChange","bind","axios","method","url","global","ApiKey","responseType","then","data","ListCitySelect","list","catch","err","console","log","this","getCartDB","id","setState","getUserSystemInfo","stretched","icon","action","size","level","onClick","e","currentTarget","dataset","story","sumCartItog","CPr","price","count","document","cookie","vk_platform","headers","typeSlide","getTypeSlideGet","setSlideArray","errorInfo","listSlide","ArraySlide","status","ArraySlides","Object","keys","Bullets","AutoPlays","length","SliderVisual","datas","src","img","style","maxWidth","autoplay","slideWidth","width","height","bullets","getSlideHeaderArray","setTimeout","reloadSlideHeaderSetTime","connect","sendPromise","response","is_allowed","PushClick","textAlign","OffPushNotyfication","OnPushNotyfication","getStatusNotificate","getCityUser","setUser","a","async","fetchData","getIntervalCart","i","dataOld","dataNew","ListProduct","setCountCartVisal","id_user","loading","listProduct","ListOld","JSON","stringify","ListNew","StatusReloadBasketData","ReloadBasketDataFN","setUserSystem","JsonBasket","basketJson","tE","counts","push","countPlus","setcountCartProduct","noAdd","cartProducts","id_Product","type_product","setcountCartProductVar","splice","setDataServer","btoa","encodeURI","setCartServer","queryParams","window","location","search","hash","modal","onClose","setModal","header","right","title","dynamicContentHeight","caption","actions","type","tabbar","selected","data-story","text","label","activePanel","getSuccesOrderPage","setCart","CartProducts","ProductsLists","sliderHeader","getSliderGalery","theme","noShadow","ProductList","userInfo","setAddressDefault","setAffiliateDefault","setTypeDilivery","setComment","setStates","setDeliveryDataItogs","getDeliveryDataPriceItog","getDeliveryDataPriceItogAffiliate","showModal","hideModals","DataDeliveryInfoPay","comments","setOkNewOrderView","getNotificationPage","go","dataUsers","setStatusNotification","React","Component","blueBackground","backgroundColor","Dilivery","UserCard","phone","email","CheckSMSCode","phoneValue","codeValue","resultVerificationCode","tooltip","snackbar","showBTNNewAddress","showFormNewAddress","openBase","phone_number","layout","before","fill","phoneVerification","VerificationCode","idUserVK","event","target","types","values_count","display","justifyContent","marginRight","background","getDataCountPerson","readOnly","marginLeft","top","placeholder","onChange","getValueInputCode","checkVerificationCode","defaultValue","getValueInputPhone","setVerificationPhone","getButtonTypeDilivery","getListAddress","getListAffiliate","getCountPersonInput","getCommentsTextarea","className","description","color","setPopout","setShowBTNNewAddress","showModals","getCommentsData","Param","getNoneCartProduct","getInfoUserAuth","getInfoUserNoneAuth","getOkListAddress","DiliveryAddress","listAddress","listAddressOff","addressOk","dataAddress","getAddressUserSystem","AddressEdit","delUpdate","id_UserVK","getFormNewAddress","ListAddressNoDelivery","listAddressGlobalOff","getAddressUsers","listAddressU","DataSetAddress","city","street","home","n","diliveryData","priceDilivery","min_sum_order","min_sum_free_dilivery","setDataDiliveryPrice","setAddressInfoUsers","keyId","setDataDeliveryPrice","setAddressEdit","AddresInfo","NumberAddress","dataAddressOff","dataAddress2","keyId2","getListAddressVisual","GetOneAddress","AddressN","closePopout","comment","popout","addressInfo","result","result_add","autoclose","deletedAddress","float","podezd","etaj","kvartira","openDefault","name","getAddressFull","defaultChecked","getAddressTitle","defaultCheckedR","GetOneAddressOff","disabled","AffiliateList","listAffiliate","addressAffiliateOk","dataAffiliate","id_City","listOffAffiliate","getAddressAffiliate","GetOneAffiliateAddress","dangerouslySetInnerHTML","__html","operating_mode","NewOrderServer","statusNewOrder","dataOrder","DataOrderInfo","getPageOkOrderSet","UserInfo","margin","them","fetchedUser","photo_200","first_name","last_name","point","asideContent","checked","getPanelProfil","platform","ProfileUserPage","useState","setActivePanel","useEffect","to","setActivePanels","nameCategory","productsLists","compare","b","ArrayProducts","Pr","ClickProductF","setProductModal","getButtonInCartProduct","ReverceStatus","CatalogLists","reduceRight","arr","last","index","coll","concat","ReverceCatalog","sort","comparePrice","oneProduct","OneProduct","product","ClickProduct","GetSets","ArrayPr","names","ProductArray","GetSushi","alt","GetRoli","GetNoneCat","nameCategorys","idCategory","idCategorys","onClickProduct","escapeHtmlDecode","replace","CategoryList","hndlClick","aP","productModal","setActiveCategory","ActiveCategory","panelCategory","typeProduct","ButOk","id_CartPr","getCountButton","getInCarts","osname","href","classNameDivCategory","OPT","Loadings","imgCategory","ClickCategory","Title","left","IOS","addon","ShowCategory","id_Category","ClickBack","ProductInfo","type_info","CatalogProduct","PaymentsPage","value2","getReloadInfODeliveryPay","options","points","step","min","max","Number","setPointsDefaultsSale","String","sum","DataDeliveryInfo","checkTypeDiliveryInfo","DataOrder","DataAddressDelivery","getAddressDelivery","DataAddressAffiliate","typeDelivery","AddressDelivery","idAffiliatePickup","PointsSale","DeliverySum","Comments","DopInfo","getCountsTimeBonus","PriceInfoVisual","getSumCartItogo","getDataOrder","checkMinSummaCart","osName","GetCartHome","getButtonNavigation","typeNav","ButtonBlock","data-to","Products","results","cartProduct","idProducts","marginBottom","clear","bottom","typeProduct2","setCarts","getCartVisual","getOneStepCart","send","ReactDOM","render","getElementById","module","exports","FormNewAddress","entrance","flat","addressItems","statusChech","minValue","valPls","idCity","ListCityOrigin","listCity","ListCitys","ListOption","getCitySelect","saveNewAddress","saveEditAddress","getEditForm","getNulledForm","ButtonInCart","number_format","number","decimals","dec_point","separator","isFinite","prec","Math","abs","sep","dec","s","k","pow","round","toFixed","toFixedFix","Array","join","productList","ProductCat","idTypeProduct","ArrayMod","ListMod","VisualList","mod_img","getModyficateBlock","modyficate","Product_Weight","weight","Product_WeightType","weight_type","getProductDiv"],"mappings":"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","file":"static/js/main.84bc1592.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport {ModalRoot, ModalPage, ModalPageHeader, HeaderButton, Placeholder, Button, Gallery, Switch} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Icon56NotificationOutline from '@vkontakte/icons/dist/56/notification_outline';\r\nimport Icon56CheckCircleOutline from '@vkontakte/icons/dist/56/check_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport ButtonCart from  \"./panels/catalog/ButtonInCart\";\r\n\r\n\r\nimport {Div, Epic, Tabbar, TabbarItem, Panel, PanelHeader} from '@vkontakte/vkui';\r\n//import Icon28Messages from '@vkontakte/icons/dist/28/messages';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\r\nimport Icon28User from '@vkontakte/icons/dist/28/user';\r\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport AppHome from \"./panels/Profile\";\r\nimport CatalogProduct from \"./panels/catalog/CatalogProduct\";\r\nimport './panels/catalog/product.css';\r\n\r\nimport GetCartHome from \"./panels/Cart/CartHome\";\r\n\r\nrequire('./panels/global/index.js');\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ParamStart:false,\r\n            products:[],\r\n            loadingCatalog:false,\r\n            activeStory: 'catalog',\r\n            loadingPage: true,\r\n            user:[],\r\n            userSystemInfo:{error:true,dataUser:\"\"},\r\n            cart:[],\r\n            countCartProduct:'',\r\n            addressDefault:null,\r\n            AffiliateDefault:0,\r\n            checkedTypeDilivery:0,\r\n            commentary:\"\",\r\n            typePay:1,\r\n            countPerson:1,\r\n            SalePoints:0,\r\n            sumCart:0,\r\n            activeModal:null,\r\n            formNewAddressData:'',\r\n            formEditAddressData:'',\r\n\r\n            listAddressGlobal:[],\r\n            listAffiliateGlobal:[],\r\n\r\n            priceDelivery:0,\r\n            minSumOrder:300,\r\n            minSumFreeDelivery:0,\r\n\r\n            //Если сумма корзины меньше необходимой для заказа\r\n            errorOrderFinal:false,\r\n            //Если сумма корзины меньше бесплатной доставки\r\n            DeliveryPriceItog:false,\r\n\r\n            //Доставка на адрес возможна, сли false, то не возможна\r\n            DeliveryAddressOKCity:true,\r\n\r\n            //Адрес, для отображения в последнем блоке корзины\r\n            addressOrderInfoUser:'',\r\n            newOrderStats:false,\r\n\r\n            StatusLoadSlide:false,\r\n            slideHeaderArray:[],\r\n            slideIndex: 0,\r\n\r\n            StatusNotification:false,\r\n\r\n            CityListBind:[]\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    getCityUser(){\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getCity&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n\r\n                }else{\r\n                    this.state.ListCitySelect = data.list;\r\n                    global.CityListBind = data.list;\r\n                   // console.log('Установили города',global.CityListBind);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения городов',err);\r\n            });\r\n    }\r\n\r\n    parseQueryString = (string) => {\r\n        return string.slice(1).split('&')\r\n            .map((queryParam) => {\r\n                let kvp = queryParam.split('=');\r\n                return {key: kvp[0], value: kvp[1]}\r\n            })\r\n            .reduce((query, kvp) => {\r\n                query[kvp.key] = kvp.value;\r\n                return query\r\n            }, {})\r\n    };\r\n\r\n\r\n    setOkNewOrderView(){\r\n        console.log('Показать окно');\r\n        if(this.state.newOrderStats) {\r\n            this.getCartDB(this.state.user.id);\r\n            this.setState({activeStory: 'newOrderInfo'});\r\n            this.getUserSystemInfo(this.state.user.id);\r\n        }else{\r\n            console.log('Ну не совсем');\r\n        }\r\n    }\r\n\r\n\r\n    getSuccesOrderPage(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56CheckCircleOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.setState({activeStory: 'catalog'});}}>В каталог</Button>}\r\n\r\n            >\r\n                <h2>Ваш заказ принят</h2>\r\n                <p>Мы свяжемся с Вами в ближайшее время, для уточнения деталей.</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    getDeliveryDataPriceItog(){\r\n        if(this.state.minSumOrder < this.state.sumCart){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.minSumFreeDelivery <= this.state.sumCart){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет ',this.state.minSumFreeDelivery+' < '+this.state.sumCart);\r\n    }\r\n\r\n\r\n    getDeliveryDataPriceItogAffiliate(){\r\n        this.setState({\r\n            priceDelivery: 0,\r\n            minSumOrder: 300,\r\n            minSumFreeDelivery: 0\r\n        });\r\n\r\n        if(this.state.sumCart > 300){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.sumCart > 0){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет на самовывоз');\r\n    }\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n\r\n    setcountCartProduct(e){\r\n        if(e == 0){e = '';}\r\n        this.setState({\r\n            countCartProduct:e\r\n        });\r\n\r\n        var sumCartItog = 0;\r\n        this.state.cart.map((CPr)=>{\r\n                sumCartItog +=CPr.price*CPr.count\r\n            }\r\n        );\r\n        this.setState({sumCart:sumCartItog});\r\n\r\n        document.cookie = \"cart = \"+this.state.cart;\r\n    }\r\n\r\n    setComment(e){\r\n        this.setState({\r\n            commentary:e\r\n        });\r\n    }\r\n\r\n    setUser(e){\r\n        this.setState({user:e});\r\n    }\r\n\r\n    setUserSystem(e){\r\n        this.setState({userSystemInfo:{error:false,dataUser:e}});\r\n    }\r\n\r\n    getTypeSlideGet(){\r\n        switch(this.state.ParamStart.vk_platform){\r\n            case\"desktop_web\": return \"desktop\";break;\r\n            default: return \"mobile\";\r\n        }\r\n    }\r\n\r\n\r\n    getSlideHeaderArray(){\r\n        if(this.state.ParamStart === false){\r\n\r\n        }else {\r\n            //console.log(this.state.ParamStart);\r\n            axios('https://sushi-time31.ru/api/getSlideHeader&apiKey='+global.ApiKey,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n                    data: {\r\n                        typeSlide: this.getTypeSlideGet(),\r\n                    },\r\n                    responseType: 'text'\r\n                })\r\n                .then(({data}) => {\r\n                    if (\"error\" in data) {\r\n                        this.setSlideArray([], false);\r\n                        console.log(data.error, '|', data.errorInfo);\r\n                    } else {\r\n                        //console.log(data.listSlide);\r\n                        this.setSlideArray(data.listSlide, true);\r\n                    }\r\n                })\r\n                .catch(({err}) => {\r\n                    console.log(\"ERROR: ---Получение слайдов---  \", err);\r\n                });\r\n        }\r\n    }\r\n\r\n    setSlideArray(ArraySlide,status){\r\n        if(status === true) {\r\n            this.setState({slideHeaderArray: ArraySlide});\r\n            if (this.state.StatusLoadSlide === false) {\r\n                this.setState({StatusLoadSlide: true});\r\n            }\r\n        }else{\r\n            if (this.state.StatusLoadSlide === true) {\r\n                this.setState({StatusLoadSlide: false});\r\n            }\r\n        }\r\n    }\r\n\r\n    getSliderGalery(){\r\n        var ArraySlides = Object.keys(this.state.slideHeaderArray);\r\n        var Bullets = \"dark\";\r\n        var AutoPlays = \"7000\";\r\n        var countNumber = ArraySlides.length;\r\n        if(ArraySlides.length <= 1){Bullets = false;AutoPlays = false;}\r\n        if(this.state.StatusLoadSlide === true & ArraySlides.length > 0) {\r\n            var SliderVisual = ArraySlides.map((datas,keys) => {\r\n                //console.log(datas);\r\n                return (<img key={keys} src={this.state.slideHeaderArray[datas].img} style={{maxWidth:\"100%\"}}/>);\r\n            });\r\n\r\n            return (\r\n                <Gallery\r\n                    autoplay={AutoPlays}\r\n                    //slideIndex={this.state.slideIndex}\r\n                    //onEnd={()=>{this.setState({\"slideIndex\":0})}}\r\n                    slideWidth=\"100%\"\r\n                    style={{width:\"100%\",height: \"auto\"}}\r\n                    bullets={Bullets}\r\n                >\r\n                    {SliderVisual}\r\n                </Gallery>\r\n            );\r\n        }else{\r\n            return(\r\n                \"\"\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    reloadSlideHeaderSetTime(){\r\n        this.getSlideHeaderArray();\r\n        setTimeout(this.reloadSlideHeaderSetTime.bind(this),5000);\r\n    }\r\n\r\n\r\n\r\n\r\n    ///////Уведомления PUSH\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n            });\r\n    }\r\n\r\n    setStatusNotification(e){\r\n        this.setState({StatusNotification:e});\r\n    }\r\n\r\n\r\n    getNotificationPage(){\r\n        if(this.state.StatusNotification === true){\r\n            return(\r\n                <Placeholder stretched\r\n                             icon={<Icon56NotificationOutline />}\r\n                             action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.setState({activeStory: 'catalog'});}}>В каталог</Button>}\r\n\r\n                >\r\n                    <h2>Уведомлений нет</h2>\r\n                    <p>Как только для Вас появятся уведомления, они отобразятся здесь!</p>\r\n                </Placeholder>\r\n            );\r\n        }else{\r\n            return(\r\n                <Placeholder stretched\r\n                             icon={<Icon56NotificationOutline />}\r\n                             action={<Button size=\"l\" level=\"tertiary\"\r\n                                             onClick={()=>{this.PushClick()}}\r\n                             >Включить уведомления</Button>}\r\n                             style={{textAlign:\"center\"}}\r\n                >\r\n                    Для просмотра уведомлений, их нужно включить\r\n                </Placeholder>\r\n            );\r\n        }\r\n    }\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n            })\r\n            .catch((err)=> {\r\n                    this.setState({StatusNotification: false});\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    ///////\r\n\r\n    componentDidMount() {\r\n        this.getCityUser();\r\n        this.getStatusNotificate();\r\n\r\n        async function fetchData(setUser,getCartDB,getUserSystemInfo) {\r\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            setUser(user);\r\n            //setPopout(null);\r\n            //setModal(MODAL_CARD_MONEY_SEND);\r\n            //console.log('...','Получили данные пользователя',user.id);\r\n            getCartDB(user.id);\r\n            getUserSystemInfo(user.id);\r\n        }\r\n\r\n        axios({\r\n            method:'get',\r\n            // url:'https://sushi-time31.ru/test.json',\r\n            // url:'https://sushi-time31.ru/test2.json',\r\n            url:'https://sushi-time31.ru/api/Catalog&apiKey='+global.ApiKey+'&idCategoryKeyArray=true&idProductKeyArray=true',\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data.list);\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                products: data.list,\r\n                loadingCatalog:true\r\n            });\r\n        })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n\r\n        fetchData(this.setUser.bind(this),this.getCartDB.bind(this),this.getUserSystemInfo.bind(this));\r\n        this.reloadSlideHeaderSetTime();\r\n            setTimeout(function() {this.getIntervalCart(1)}.bind(this), 7000);\r\n    }\r\n\r\n    getIntervalCart(i){\r\n       // console.log('Запустили получение корзины '+i);\r\n        i++;\r\n        this.getCartDB(this.state.user.id);\r\n        setTimeout(function() {this.getIntervalCart(i)}.bind(this), 3000);\r\n    }\r\n\r\n    StatusReloadBasketData(dataOld,dataNew){\r\n        if(dataOld === dataNew){return false;}else{return true;}\r\n    }\r\n\r\n\r\n    ReloadBasketDataFN(ListProduct){\r\n       // console.log('Обновили корзину');\r\n        this.setState({\r\n            // products: data.list[0].ProductList\r\n            cart: ListProduct,\r\n            loadingPage: false\r\n        });\r\n        this.setCountCartVisal();\r\n    }\r\n\r\n    getCartDB(id_user){\r\n        if(this.state.loading === false) {\r\n            this.setState({loading: true});\r\n        }\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getBasketVK&apiKey='+global.ApiKey+'&updateBasket=1minute&id_user_vk='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n                data.listProduct = [];\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }\r\n\r\n            if(data.listProduct === null){\r\n                data.listProduct = [];\r\n            }\r\n\r\n            var ListOld = JSON.stringify(this.state.cart);\r\n            var ListNew = JSON.stringify(data.listProduct);\r\n\r\n            var statusBasket = this.StatusReloadBasketData(ListOld,ListNew);\r\n\r\n            if(statusBasket === true) {\r\n                this.ReloadBasketDataFN(data.listProduct);\r\n            }\r\n\r\n\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n    }\r\n\r\n\r\n    getUserSystemInfo(id_user){\r\n        this.setState({loading: true});\r\n\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/Users&apiKey='+global.ApiKey+'&updateUserSystemInfo=one&idUserVK='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }else{\r\n                this.setUserSystem(data.list[0]);\r\n            }\r\n\r\n            this.setState({\r\n                loadingPage: false\r\n            });\r\n            //console.log(\"userSystemInfo\",this.state.userSystemInfo);\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n        //setUserSystem(e);\r\n    }\r\n\r\n\r\n    setCartServer(id_user,JsonBasket){\r\n        //console.log(JsonBasket,'___А_А_АА_А_А_А_');\r\n        axios('https://sushi-time31.ru/api/setBasketVK&apiKey='+global.ApiKey+'&id_user_vk='+id_user,\r\n            {\r\n            method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            data: {\r\n                basketJson: JsonBasket,\r\n            },\r\n            responseType:'text'\r\n        })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Отправка корзины---  \",err);\r\n            });\r\n    }\r\n\r\n    setCart(e,tE = '+'){\r\n        //console.log('Товар в корзине, вот этот ',e);\r\n        //this.setState({cart:e});\r\n        const counts = this.state.cart.length;\r\n        if(tE == '+'){\r\n            //Добавляем товар\r\n            if(counts<=0) {\r\n               // console.log('Добавляем Новый товар в корзину');\r\n                this.state.cart.push(e);\r\n                const countPlus = counts;\r\n                this.state.cart[countPlus].count = 1;\r\n                this.setcountCartProduct(1);\r\n            }else{\r\n               // console.log('В принципи верно, но цикл не тот', counts);\r\n                var noAdd = true;\r\n\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Добавляем еще такой же товар');\r\n                        this.state.cart[key].count = this.state.cart[key].count + 1;\r\n                        setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                        noAdd =false;\r\n                    }\r\n                    }\r\n                );\r\n\r\n                if(noAdd === true){\r\n                   // console.log('Добавляем новый товар, так как тагого же нет');\r\n                    this.state.cart.push(e);\r\n                    const countPlus = counts;\r\n                    this.state.cart[countPlus].count = 1;\r\n                    setcountCartProductVar++;\r\n                }\r\n\r\n            }\r\n        }else{\r\n            //Удаляем товар\r\n            if(counts<=0) {\r\n\r\n            }else{\r\n                var noAdd = true;\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Удаляем товар 1 товар с этим id и типом');\r\n                        if( this.state.cart[key].count<=1){\r\n                            // delete this.state.cart[key];\r\n                            this.state.cart.splice(key, 1);\r\n                        }else{\r\n                            this.state.cart[key].count = this.state.cart[key].count - 1;\r\n                            setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                            noAdd =false;\r\n                        }\r\n                    }\r\n                    }\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n        {setcountCartProductVar = setcountCartProductVar+CPr.count}\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n        var setDataServer = btoa(encodeURI(JSON.stringify(this.state.cart)));\r\n       // console.log('Вот это отправляем на сервер',setDataServer);\r\n        this.setCartServer(this.state.user.id,setDataServer);\r\n    }\r\n\r\n\r\n    setCountCartVisal(){\r\n       // this.getCartDB(this.state.user.id);\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n            {setcountCartProductVar = setcountCartProductVar+CPr.count;\r\n            }\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n    }\r\n\r\n    setTypeDilivery(e){\r\n        this.setState({checkedTypeDilivery:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setAddressDefault(e){\r\n        if(e === 'del'){\r\n            e = 0;\r\n        }\r\n        this.setState({addressDefault:e});\r\n        //console.log('По дефолту адрес теперь ',e);\r\n        //Обновляем условия доставки на 3  шаг корзины\r\n    }\r\n\r\n    setAffiliateDefault(e){\r\n        this.state.AffiliateDefault = e;\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setModal(e){\r\n        this.setState({activeModal:e});\r\n    }\r\n\r\n    render () {\r\n        const queryParams = this.parseQueryString(window.location.search);\r\n        const hashParams = this.parseQueryString(window.location.hash);\r\n\r\n        if(this.state.ParamStart === false) {\r\n            //console.log(\"State = false, но \", queryParams);\r\n        }\r\n\r\n        if(this.state.ParamStart === false) {\r\n            this.state.ParamStart = queryParams;\r\n        }\r\n\r\n        // this.setState({\"ParamStart\":this.parseQueryString(window.location.search)});\r\n        // console.log('Параметры запуска ',this.state.ParamStart,' А URL такой ',window.location.search);\r\n\r\n        const modal = (\r\n            <ModalRoot activeModal={this.state.activeModal}>\r\n                <ModalPage\r\n                    id=\"MODAL_NEWADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Добавить адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Добавление адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formNewAddressData}\r\n                </ModalPage>\r\n\r\n                <ModalPage\r\n                    id=\"MODAL_EditADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Редактировать адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Редактирование адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formEditAddressData}\r\n                </ModalPage>\r\n            </ModalRoot>\r\n        );\r\n\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'catalog'}\r\n                        data-story=\"catalog\"\r\n                        text=\"Каталог\"\r\n                    ><Icon24Note /></TabbarItem>\r\n                    <TabbarItem style={{\"display\":\"none\"}}\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'discover'}\r\n                        data-story=\"discover\"\r\n                        text=\"Поиск\"\r\n                    ><Icon28Search /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'cart'}\r\n                        data-story=\"cart\"\r\n                        label={this.state.countCartProduct}\r\n                        text=\"Корзина\"\r\n                    ><Icon28MarketOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'notifications'}\r\n                        data-story=\"notifications\"\r\n                        text=\"Уведомления\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'user'}\r\n                        data-story=\"user\"\r\n                        text=\"Профиль\"\r\n                    ><Icon28User /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"newOrderInfo\" activePanel=\"newOrders\" header={false}>\r\n                    <Panel id=\"newOrders\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {this.getSuccesOrderPage()}\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"catalog\" activePanel=\"catalog\" header={false}>\r\n                    <Panel id=\"catalog\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {\r\n                            this.state.loadingCatalog\r\n                                ?\r\n                                <CatalogProduct setCart={this.setCart.bind(this)} CartProducts={this.state.cart} ProductsLists={this.state.products} sliderHeader={this.getSliderGalery.bind(this)} queryParams={queryParams}/>\r\n                                :\r\n                                <ScreenSpinner />\r\n                        }\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"discover\" activePanel=\"discover\">\r\n                    <Panel id=\"discover\">\r\n                        <PanelHeader>Поиск товаров</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"cart\" activePanel=\"cart\" modal={modal}>\r\n                    <Panel id=\"cart\" style={{\"paddingBottom\":\"40px\"}}>\r\n                        <PanelHeader theme=\"light\"\r\n                                     noShadow={false}\r\n                        >\r\n                            Корзина\r\n                        </PanelHeader>\r\n                        <div key=\"Cart_List\" style={{\"paddingBottom\":\"40px\"}}>\r\n                            {/*this.getCartVisual(this.state.cart,this.setCart.bind(this))*/}\r\n                            <GetCartHome\r\n                                ProductList={this.state.cart}\r\n                                setCart={this.setCart.bind(this)}\r\n                                userSystemInfo={this.state.userSystemInfo}\r\n                                userInfo={this.state.user}\r\n                                getUserSystemInfo={this.getUserSystemInfo.bind(this)}\r\n\r\n                                addressDefault={this.state.addressDefault}\r\n                                setAddressDefault={this.setAddressDefault.bind(this)}\r\n\r\n                                AffiliateDefault={this.state.AffiliateDefault}\r\n                                setAffiliateDefault={this.setAffiliateDefault.bind(this)}\r\n\r\n                                checkedTypeDilivery={this.state.checkedTypeDilivery}\r\n                                setTypeDilivery={this.setTypeDilivery.bind(this)}\r\n\r\n                                commentary={this.state.commentary}\r\n                                setComment={this.setComment.bind(this)}\r\n\r\n                                countPerson={this.state.countPerson}\r\n\r\n                                SalePoints={this.state.SalePoints}\r\n\r\n                                setStates={this.setState.bind(this)}\r\n                                setDeliveryDataItogs={this.getDeliveryDataPriceItog.bind(this)}\r\n                                getDeliveryDataPriceItogAffiliate={this.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                                sumCart={this.state.sumCart}\r\n\r\n                                showModal={this.setModal.bind(this)}\r\n                                hideModals={this.setModal.bind(this,null)}\r\n\r\n                                DataDeliveryInfoPay={\r\n                                    {\r\n                                        priceDelivery:this.state.priceDelivery,\r\n                                        minSumOrder:this.state.minSumOrder,\r\n                                        minSumFreeDelivery:this.state.minSumFreeDelivery,\r\n\r\n                                        //Если сумма корзины меньше необходимой для заказа\r\n                                        errorOrderFinal:this.state.errorOrderFinal,\r\n                                        //Если сумма корзины меньше бесплатной доставки\r\n                                        DeliveryPriceItog:this.state.DeliveryPriceItog,\r\n\r\n                                        //Доставка на адрес возможна, сли false, то не возможна\r\n                                        DeliveryAddressOKCity:this.state.DeliveryAddressOKCity,\r\n\r\n                                        addressOrderInfoUser:this.state.addressOrderInfoUser,\r\n\r\n                                        checkedTypeDilivery:this.state.checkedTypeDilivery,\r\n                                        AffiliateDefault:this.state.AffiliateDefault,\r\n                                        addressDefault:this.state.addressDefault,\r\n\r\n                                        listAddressGlobal:this.state.listAddressGlobal,\r\n                                        listAffiliateGlobal: this.state.listAffiliateGlobal,\r\n\r\n                                        comments:this.state.commentary,\r\n                                        typePay:this.state.typePay,\r\n                                        countPerson:this.state.countPerson,\r\n                                        cart:this.state.cart\r\n\r\n                                    }\r\n                                }\r\n\r\n                                setOkNewOrderView={this.setOkNewOrderView.bind(this)}\r\n\r\n                            />\r\n\r\n                        <div style={{\"clear\":\"both\"}}></div>\r\n                        </div>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Уведомления</PanelHeader>\r\n                        {this.getNotificationPage()}\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"user\" activePanel=\"user\">\r\n                    <Panel id=\"user\">\r\n                        <PanelHeader>Профиль</PanelHeader>\r\n                        <AppHome id=\"home\" go=\"persik\" dataUsers={this.state.userSystemInfo} setStatusNotification={this.setStatusNotification.bind(this)}/>\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Placeholder, Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar,Textarea, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon16Clear from '@vkontakte/icons/dist/16/clear';\r\nimport DiliveryAddress from \"./DiliveryAddress\";\r\nimport AffiliateList from \"./AffiliateList\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\n\r\n\r\nconst orangeBackground = {\r\n    backgroundImage: 'linear-gradient(135deg, #ffb73d, #ffa000)'\r\n};\r\n\r\nconst blueBackground = {\r\n    backgroundColor: '#ffffff'\r\n};\r\n\r\nclass Dilivery extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            UserCard:{phone:\"\",email:\"\"},\r\n            CheckSMSCode:false,\r\n            phoneValue:\"\",\r\n            codeValue:\"\",\r\n            resultVerificationCode:true,\r\n            tooltip: true,\r\n            snackbar: null,\r\n            showBTNNewAddress:false,\r\n            showFormNewAddress:false\r\n        };\r\n\r\n        this.openBase = this.openBase.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.openBase();\r\n\r\n        async function getPhoneUserVK(setState){\r\n            connect.sendPromise(\"VKWebAppGetPhoneNumber\",{\"sign\":\"T3in3QPDby8GsRNAfsEnEoYmVt7Se2dy0XUOhnCSlSw\"})\r\n                .then((data ) => {\r\n                    //console.log(data,\"Данные пользователя\");\r\n                    setState({ UserCard:{phone: data.phone_number} });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ------  \",err);\r\n                });\r\n        }\r\n\r\n        //console.log(\"Получаем телефон\");\r\n        {this.props.userSystemInfo.error === true && getPhoneUserVK(this.setState.bind(this));}\r\n    }\r\n\r\n\r\n    openBase (e = null) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Clear fill=\"#ff0000\" width={16} height={16} /></Avatar>}\r\n                >\r\n                    {e===null && <span>Проверочный код введен не верно, повторите попытку!</span>}\r\n                    {e!==null && e}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n\r\n    setVerificationPhone(){\r\n        //console.log('Отправили запрос на верификацию');\r\n        axios('https://sushi-time31.ru/api/VerificationPhone&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_SMS\"){\r\n                        //console.log('СМС отправлено, выводим поле для ввода кода');\r\n                        this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase('Номер телефона введен не верно!');\r\n                    }\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    checkVerificationCode(){\r\n        //console.log('Отправили запрос на проверку кода',this.props.userInfo.id);\r\n        axios('https://sushi-time31.ru/api/VerificationCode&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                    VerificationCode: this.state.codeValue,\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_CODE_V\"){\r\n                        //console.log('Данные сохранены, можно обновить приложение, пользователь авторизован');\r\n                        this.props.getUserSystemInfo(this.props.userInfo.id);\r\n                        //this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    getValueInputPhone(event){\r\n        this.setState({UserCard:{phone: event.target.value}});\r\n        //console.log(this.state.UserCard.phone);\r\n    }\r\n\r\n    getValueInputCode(event){\r\n        this.setState({codeValue: event.target.value});\r\n    }\r\n\r\n    getCommentsData(e){\r\n        this.props.setComment(e.target.value);\r\n    }\r\n\r\n    getDataCountPerson(types){\r\n        var values_count = this.props.countPerson;\r\n        switch(types){\r\n            case '-': values_count -= 1; break;\r\n            case '+': values_count += 1; break;\r\n            default: console.log('Нет параметра');\r\n        }\r\n\r\n        if(values_count<=0){ values_count = 1;}\r\n        if(values_count === ''){ values_count = 1;}\r\n        if(values_count >9){ values_count = 9;}\r\n\r\n        this.props.setStates({countPerson: values_count});\r\n    }\r\n\r\n    getCountPersonInput(){\r\n        return (\r\n            <Group title=\"Кол-во приборов\">\r\n                <Div style={{display: 'flex',justifyContent:'center'}}>\r\n                    <Button size=\"l\" stretched style={{marginRight: 10,maxWidth:50,background:\"#ff7300\"}} onClick={this.getDataCountPerson.bind(this,'-')}>-</Button>\r\n                    <Input type=\"number\" style={{maxWidth:80,textAlign:\"center\"}} value={this.props.countPerson} readOnly=\"readOnly\"/>\r\n                    <Button size=\"l\" stretched style={{marginLeft: 10,maxWidth:50,background:\"#ff7300\"}} onClick={this.getDataCountPerson.bind(this,'+')}>+</Button>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth(){\r\n        return(<Group>\r\n            <FormLayout>\r\n                {this.state.CheckSMSCode === true && <FormLayoutGroup top=\"Введите одноразовый код из СМС\">\r\n\r\n                    <Input type=\"number\" placeholder=\"1234\" onChange={this.getValueInputCode.bind(this)} />\r\n\r\n\r\n                    <Button level=\"commerce\" style={{\"background\":\"#ff7300\"}}\r\n                            onClick={()=> {\r\n                                //console.log(this.state.codeValue);\r\n                                this.checkVerificationCode()\r\n                                }\r\n                            }\r\n                    >Подтвердить\r\n                    </Button>\r\n                    <Button level=\"secondary\" style={{\"float\":\"right\"}} onClick={() => {this.setState({CheckSMSCode:false})}}>Выслать повторно</Button>\r\n                </FormLayoutGroup>}\r\n\r\n                {this.state.CheckSMSCode === false && <FormLayoutGroup top=\"Подтвердите номер телефона\">\r\n                    <Input type=\"number\" placeholder=\"79876543210\" defaultValue={this.state.UserCard.phone} onChange={this.getValueInputPhone.bind(this)}/>\r\n                    <Button level=\"commerce\" style={{\"background\":\"#ff7300\"}}\r\n                            onClick={\r\n                                () => {\r\n                                    this.setVerificationPhone();\r\n                                    //console.log(this.state.UserCard.phone)\r\n                                }\r\n                            }\r\n                    >\r\n                        Получить код\r\n                    </Button>\r\n                    <Button onClick={() => {this.setState({CheckSMSCode:true})}} level=\"secondary\" style={{\"float\":\"right\"}}>Уже есть код</Button>\r\n                </FormLayoutGroup>}\r\n            </FormLayout>\r\n            {this.state.snackbar}\r\n        </Group>);\r\n    }\r\n\r\n    getButtonTypeDilivery(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"0\"}}>\r\n            <Button size=\"l\" stretched style={{marginRight: 8}} level={this.props.checkedTypeDilivery === 1 ? \"secondary\" : \"commerce\"} onClick={()=>{this.props.setTypeDilivery(0)}}>Доставка</Button>\r\n            <Button size = \"l\" stretched level={this.props.checkedTypeDilivery === 0 ? \"secondary\" : \"commerce\"}  onClick={()=>{this.props.setTypeDilivery(1)}}>Самовывоз</Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getInfoUserAuth(){\r\n        //console.log('По дефолту адрес ',this.props.addressDefault)\r\n        return(\r\n            <div>\r\n                {this.getButtonTypeDilivery()}\r\n                {this.props.checkedTypeDilivery === 0 ?\r\n                    this.getListAddress()\r\n                    :\r\n                    this.getListAffiliate()\r\n                }\r\n                {this.getCountPersonInput()}\r\n                {this.getCommentsTextarea()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getNoneCartProduct(){\r\n        return(\r\n            <Placeholder\r\n                icon={<Icon56ErrorOutline />}\r\n                action={false}\r\n\r\n            >\r\n                <h2>В корзине отсутствуют товары</h2>\r\n                <p>Для совершения заказа, нужно положить хотябы 1 товар в корзину!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n\r\n    getListAddress(){\r\n        //console.log(this.state.showBTNNewAddress);\r\n        return(\r\n            <Group\r\n                className=\"GroupBlockListAddress\"\r\n                title=\"Адреса доставки\"\r\n                   description={this.state.showBTNNewAddress ?\r\n                       <Button\r\n                           size=\"l\"\r\n                           level=\"secondary\"\r\n                           style={{ background: '#FF7300',color:\"#FFFFFF\" }}\r\n                           // onClick={()=>{this.setState({showFormNewAddress:true})}}\r\n                           onClick={()=>{\r\n                               this.props.showModal('MODAL_NEWADDRESS');\r\n                           }}\r\n                       >Добавить адрес</Button>\r\n                       :\r\n                       \"\"}\r\n            >\r\n                <DiliveryAddress\r\n                    userInfo={this.props.userInfo}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    setShowBTNNewAddress={this.setState.bind(this)}\r\n                    showFormNewAddress={this.state.showFormNewAddress}\r\n                    setStates={this.props.setStates.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n                    showModals={this.props.showModal.bind(this)}\r\n                    hideModals={this.props.hideModals.bind(this)}\r\n                />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getListAffiliate(){\r\n        return (\r\n            <Group title=\"Адреса самовывоза\">\r\n            <AffiliateList\r\n                userInfo={this.props.userInfo}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n                setStates={this.props.setStates.bind(this)}\r\n            />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCommentsTextarea () {\r\n        return (\r\n            <Group title=\"Комментарий к заказу\">\r\n                <Div>\r\n                <Textarea value={this.props.commentary} onChange={this.getCommentsData.bind(this)} placeholder=\"Ваш комментарий\"/>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getOkListAddress(Param){\r\n        return(\r\n            Param <=0 ? this.getNoneCartProduct() : this.getInfoUserAuth()\r\n        )\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                {this.props.userSystemInfo.error === true &&\r\n                    this.getInfoUserNoneAuth()\r\n                }\r\n\r\n                {this.props.userSystemInfo.error === false &&\r\n                    this.getOkListAddress(this.props.ProductList.length)\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Dilivery;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAddress from \"./GetOneAddress\";\r\nimport GetOneAddressOff from \"./GetOneAddressOff\";\r\nimport OneProduct from \"../catalog/OneProduct\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport FormNewAddress from './FormNewAddress';\r\n\r\nclass DiliveryAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAddress:[],\r\n            listAddressOff:[],\r\n            addressOk:false,\r\n            dataAddress:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAddressUserSystem();\r\n        this.props.setStates({formNewAddressData: <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n    }\r\n\r\n    setAddressEdit(e){\r\n        //console.log(this.state.listAddress);\r\n        this.props.setStates({formEditAddressData: <FormNewAddress AddressEdit={this.state.listAddress[e]} setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n        this.props.showModals('MODAL_EditADDRESS');\r\n    }\r\n\r\n\r\n    getAddressUserSystem(delUpdate = false){\r\n        axios('https://sushi-time31.ru/api/getAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_UserVK: this.props.userInfo.id,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                    if(data.error === 'Address not found'){\r\n                        console.log('Нужно вывести форму для создания первого адреса пользователя');\r\n                        this.getFormNewAddress();\r\n                    }else{\r\n\r\n                    }\r\n                }else{\r\n                   // console.log(data);\r\n                    this.setState({listAddress:data.listAddress});\r\n                    this.props.setStates({listAddressGlobal:data.listAddress});\r\n\r\n                    this.setState({listAddressOff:data.ListAddressNoDelivery});\r\n                    this.props.setStates({listAddressGlobalOff:data.ListAddressNoDelivery});\r\n\r\n                    if(delUpdate === true){\r\n                        this.getAddressUsers(this.state.listAddress,true);\r\n                    }else{\r\n                        this.getAddressUsers(this.state.listAddress);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n\r\n    setAddressInfoUsers(e,type=0){\r\n            if (type === 0) {\r\n                var listAddressU = Object.keys(this.state.listAddress);\r\n                if(listAddressU.length > 0) {\r\n                    // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n                    // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n                    var DataSetAddress = this.state.listAddress[listAddressU[e]];\r\n                    this.props.setStates({\r\n                        addressOrderInfoUser: 'г. ' + DataSetAddress.city + ', ул. ' + DataSetAddress.street + ', д. ' + DataSetAddress.home\r\n                    });\r\n                }\r\n            }\r\n    }\r\n\r\n    getFormNewAddress(){\r\n        this.props.setAddressDefault(null);\r\n        this.state.dataAddress = <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)}/>;\r\n        this.setState({addressOk:true});\r\n        this.props.setShowBTNNewAddress({showBTNNewAddress:false});\r\n\r\n    }\r\n\r\n    setDataDiliveryPrice(n,ee = 'Дефолт 0'){\r\n        var listAddressU = Object.keys(this.state.listAddress);\r\n        // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n        // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n        if(listAddressU.length <= 0){\r\n            console.log('Адресов нет, должны вернуть только не доступные адреса');\r\n            this.props.setAddressDefault(null);\r\n            //return this.getAddressUsers(this.state.listAddress, true);\r\n        }else {\r\n            if (listAddressU[n] in this.state.listAddress) {\r\n                //console.log('Все ок, продолжаем по адресам');\r\n            } else {\r\n               // console.log('Адреса такого нет, ставим в дефаулт');\r\n                this.props.setAddressDefault(0);\r\n               // console.log('Должны переустановить дефаултный адрес на 0, адреса есть');\r\n                return this.getAddressUsers(this.state.listAddress, true);\r\n            }\r\n        }\r\n\r\n        if(listAddressU.length <= 0){\r\n           // console.log('Адресов нет, но продолжаем');\r\n           //  console.log('Установили значения стоимости доставки ', ee);\r\n        }else {\r\n            var DataSetAddress = this.state.listAddress[listAddressU[n]].diliveryData;\r\n            this.props.setStates({\r\n                priceDelivery: DataSetAddress.priceDilivery,\r\n                minSumOrder: DataSetAddress.min_sum_order,\r\n                minSumFreeDelivery: DataSetAddress.min_sum_free_dilivery\r\n            });\r\n           // console.log('Установили значения стоимости доставки ', ee);\r\n        }\r\n\r\n    }\r\n\r\n    getAddressUsers(listAddress,delUpdate = false) {\r\n        if(this.props.addressDefault === null & Object.keys(listAddress).length > 0){\r\n          //  console.log('Устанавливаем дефаултное значение адреса на 0','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(0);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n        if(this.props.addressDefault !== null & Object.keys(listAddress).length <= 0){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0 с условием что адресов нет','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(null);\r\n            this.setDataDiliveryPrice(0);\r\n        }\r\n\r\n        if(delUpdate === true){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0');\r\n            this.props.setAddressDefault(0);\r\n            this.getAddressUsers(listAddress,false);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }else{\r\n            this.state.dataAddress = Object.keys(listAddress).map((dataAddress, keyId) =>\r\n                <GetOneAddress\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId}\r\n                    AddresInfo={listAddress[dataAddress]}\r\n                    NumberAddress={keyId}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n\r\n            this.state.dataAddressOff = Object.keys(this.state.listAddressOff).map((dataAddress2, keyId2) =>\r\n                <GetOneAddressOff\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId2}\r\n                    AddresInfo={this.state.listAddressOff[dataAddress2]}\r\n                    NumberAddress={keyId2}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n            this.setState({addressOk:true});\r\n            this.props.setShowBTNNewAddress({showBTNNewAddress:true});\r\n            this.setDataDiliveryPrice(this.props.addressDefault, 'На '+this.props.addressDefault);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n    }\r\n\r\n    getListAddressVisual(){\r\n        return(\r\n            <div>\r\n                {this.state.dataAddress}\r\n                {this.state.dataAddressOff}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (this.state.addressOk === false ? <div>Загрузка адресов доставки <ScreenSpinner/></div> : this.getListAddressVisual()\r\n            );\r\n    };\r\n}\r\n\r\nexport default DiliveryAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n            axios('https://sushi-time31.ru/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:{id:a},\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            this.props.setAddressDefault('del');\r\n                           // console.log('Обновляем адреса',data);\r\n                            this.props.getAddressUserSystem(true);\r\n                            this.props.setPopout({ popout:null});\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    openDefault (a) {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Отмена',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }, {\r\n                        title: 'Удалить',\r\n                        autoclose: true,\r\n                        action: () => this.deletedAddress(a),\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Удаление адреса</h2>\r\n                    <p>Вы уверены что хотите удалить адрес?</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n    getAddressFull(n){\r\n        return(<div>\r\n                <span style={{width:\"75%\",float:\"left\"}}>\r\n                 г. {this.props.AddresInfo.city}, ул. {this.props.AddresInfo.street}, д. {this.props.AddresInfo.home}, подъезд {this.props.AddresInfo.podezd}, этаж {this.props.AddresInfo.etaj}, кв. {this.props.AddresInfo.kvartira}\r\n                </span>\r\n                <span style={{width:\"24%\",float:\"right\"}}><Icon28EditOutline\r\n                    onClick={\r\n                        ()=>{\r\n                            // console.log('Редактируем адрес ',n);\r\n                            this.props.setAddressEdit(this.props.AddresInfo.id);\r\n                        }\r\n                    }\r\n                    style={{float:\"left\",marginRight:\"10px\"}}/> <Icon28CancelCircleOutline style={{float:\"left\"}}\r\n                                                                                           onClick={\r\n                                                                                               ()=>{\r\n                                                                                                   // console.log('Удаляем адрес ');\r\n                                                                                                   this.openDefault(this.props.AddresInfo.id);\r\n                                                                                               }\r\n                                                                                           }\r\n                /></span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} defaultChecked onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n,'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n, 'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddressOff extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n        this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n        axios('https://sushi-time31.ru/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    addressInfo:{id:a},\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.result.result_add === true){\r\n                        this.props.setAddressDefault('del');\r\n                        //console.log('Обновляем адреса',data);\r\n                        this.props.getAddressUserSystem(true);\r\n                        this.props.setPopout({ popout:null});\r\n                    }else{\r\n                        console.log('Ошибка ',data);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n            });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'У Вас в корзине лежат товары, которые на этот адрес не доставляются!'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'У Вас в корзине лежат товары, которые на этот адрес не доставляются!'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddressOff;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAffiliateAddress from \"./GetOneAffiliateAddress\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass AffiliateList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAffiliate:[],\r\n            addressAffiliateOk:false,\r\n            dataAffiliate:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios('https://sushi-time31.ru/api/getAffiliate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_City: 1,\r\n                    id_UserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo,'Самовывоз');\r\n                }else{\r\n                    //console.log(data,'Самовывоз');\r\n                    if(Object.keys(data.listOffAffiliate).length>0){\r\n                       // console.log('Есть запрещенные точки, проводим цикл');\r\n                        Object.keys(data.listOffAffiliate).map((datas,keys)=>\r\n                            {\r\n                                if(this.props.AffiliateDefault === keys){\r\n                                    //console.log('Точка самовывоза по умолчанию совпадает с запрещенной, ставим нуль ', keys);\r\n                                    this.props.setAffiliateDefault(0);\r\n                                }else{\r\n                                   // console.log('Точка по умолчанию не совпадает с запрещенной, ничего не делаем ',keys);\r\n                                }\r\n                            }\r\n                        );\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }else{\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    setAddressInfoUsers(e,type=1){\r\n        if(type===1){\r\n            var listAddressU = Object.keys(this.state.listAffiliate);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.state.listAffiliate[listAddressU[e]];\r\n            this.props.setStates({\r\n                addressOrderInfoUser: DataSetAddress.title\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    getAddressAffiliate(listAddress) {\r\n        this.props.getDeliveryDataPriceItogAffiliate();\r\n        this.setAddressInfoUsers(this.props.AffiliateDefault);\r\n        this.state.dataAffiliate = Object.keys(listAddress).map((dataAffiliate, keyId) =>\r\n            <GetOneAffiliateAddress\r\n                key={'Affiliate_'+keyId}\r\n                AddresInfo={listAddress[dataAffiliate]}\r\n                NumberAddress={keyId}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n            />\r\n        );\r\n       this.setState({addressAffiliateOk:true});\r\n        //this.state.addressOk:true;\r\n        //return ArrayPr;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            this.state.addressAffiliateOk === false ? <div><h3>Ареса самовывоза</h3> <ScreenSpinner/> <p></p></div> : this.state.dataAffiliate\r\n        );\r\n    };\r\n}\r\n\r\nexport default AffiliateList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\n\r\nclass GetOneAffiliateAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n    }\r\n\r\n    getAddressTitle(){\r\n        return(\r\n            <span>\r\n               {this.props.AddresInfo.title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    getAddressFull(){\r\n        return(\r\n            <span style={{\"color\":\"#ffae6b\"}} dangerouslySetInnerHTML={{__html: this.props.AddresInfo.operating_mode}}>\r\n\r\n            </span>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    defaultChecked onClick={() => {\r\n                        this.props.setAffiliateDefault(n);\r\n                    ;this.props.setAddressInfoUsers(n);\r\n                    }\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    onClick={() => {\r\n                        this.props.setAffiliateDefault(n)}\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.AffiliateDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAffiliateAddress;","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\n\r\nclass NewOrderServer extends React.Component{\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    setDataServer(){\r\n        this.props.setStates({statusNewOrder:'Запрос прошел'});\r\n        axios('https://sushi-time31.ru/api/setNewOrder&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    idUserVK: this.props.userInfo.id,\r\n                    dataOrder:this.props.DataOrderInfo\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                   // console.log('Ответ сервера ',data);\r\n                    if(data.status == \"OK\"){\r\n                        this.props.getPageOkOrderSet({newOrderStats:true});\r\n                        this.props.setOkNewOrderView();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button size=\"xl\" onClick={()=>{this.setDataServer()}} className=\"WeightFontBold\">Завершить заказ</Button>\r\n        );\r\n    };\r\n}\r\n\r\nexport default NewOrderServer;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport {List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\n\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\n\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            StatusNotification:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getStatusNotificate();\r\n    }\r\n\r\n    getPanelProfil(){\r\n        return(\r\n            <div id={this.props.id} style={{maxWidth:'1200px',margin:'0 auto'}} them='white'>\r\n                {this.props.fetchedUser &&\r\n                    <Group title=\"Ваши данные\r\n    \">\r\n                        <Cell\r\n                            before={this.props.fetchedUser.photo_200 ? <Avatar src={this.props.fetchedUser.photo_200}/> : null}\r\n                            description={this.props.fetchedUser.city && this.props.fetchedUser.city.title ? this.props.fetchedUser.city.title : ''}\r\n                        >\r\n                            {`${this.props.fetchedUser.first_name} ${this.props.fetchedUser.last_name}`}\r\n                        </Cell>\r\n                    </Group>\r\n                }\r\n\r\n                {this.props.dataUsers.dataUsers.error ?\r\n                    this.getInfoUserNoneAuth()\r\n                    :\r\n\r\n                    <Group title=\"Активность\">\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Coins />}\r\n                            >\r\n                                Бонус Таймы: {this.props.dataUsers.dataUsers.dataUser.point}\r\n                            </Cell>\r\n                        </List>\r\n                    </Group>\r\n                }\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24Notification />}\r\n                            asideContent={<Switch\r\n                                checked={this.state.StatusNotification}\r\n                                onChange={()=>{this.PushClick()}} />}\r\n                            description=\"Изменение статуса заказа, акциии...\"\r\n                        >\r\n                            PUSH - уведомления\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth() {\r\n        return (\r\n            <Div>\r\n                Авторизуйтесь по номеру телефона, чтобы просматривать данные!\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n                this.props.setStatusNotification(datas.response.is_allowed);\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            });\r\n    }\r\n\r\n    //defaultChecked\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            })\r\n            .catch((err)=> {\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getPanelProfil()\r\n        );\r\n    }\r\n}\r\nexport default UserInfo;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport { View, Group, List, Cell } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Persik = props => (\r\n    <Panel id={props.id}>\r\n        <PanelHeader\r\n            left={<HeaderButton onClick={props.go} data-to=\"home\">\r\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n            </HeaderButton>}\r\n        >\r\n            Persik\r\n        </PanelHeader>\r\n        <Div>\r\n            <h2 size=\"x3\" level=\"1\">Это не совсем персик</h2>\r\n            <View activePanel=\"main\">\r\n                <Panel id=\"main\">\r\n                    <PanelHeader>VKUI</PanelHeader>\r\n                    <Group title=\"Items\">\r\n                        <List>\r\n                            <Cell>Hello</Cell>\r\n                            <Cell>World</Cell>\r\n                        </List>\r\n                    </Group>\r\n                </Panel>\r\n            </View>\r\n        </Div>\r\n        <img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\r\n    </Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport UserInfo from './ProfileUser/UserInfo';\nimport Persik from './Persik';\nimport NoPersik from './Nopersik';\n\nconst ProfileUserPage = (dataUsers) => {\n\tconst [activePanel, setActivePanel] = useState('homeUsers');\n\tconst [fetchedUser, setUser] = useState(null);\n\t//const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\n\tuseEffect(() => {\n\t\t// connect.subscribe(({ detail: { type, data }}) => {\n\t\t// \tif (type === 'VKWebAppUpdateConfig') {\n\t\t// \t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t// \t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t// \t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t// \t}\n\t\t// });\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\t//setPopout(null);\n\t\t\t//console.log(connect);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\n\treturn (\n\t\t<View activePanel={activePanel}>\n\t\t\t<UserInfo id='homeUsers' fetchedUser={fetchedUser} go={go} dataUsers={dataUsers} setActivePanels={setActivePanel.bind(this)} setStatusNotification={dataUsers.setStatusNotification.bind(this)}/>\n\t\t</View>\n\t);\n}\n\nexport default ProfileUserPage;\n\n","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\n// import Icon24Back from '@vkontakte/icons/dist/24/back';\r\n// import ModalProduct from '../ModalProduct.js';\r\nimport OneProduct from \"./OneProduct\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass ProductList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activePanel: 'panel1',\r\n            nameCategory: 'none',\r\n            productsLists: null,\r\n            products:[{\"1\":{\"title\":\"ЕКАРНЫЙ БАБАЙ\"}}]\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        function ReverceCatalog(Pr){\r\n            var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n                // console.log(last, index);\r\n                return (arr = arr.concat(last))\r\n            }, []);\r\n            return res;\r\n        }\r\n\r\n\r\n        function compare(a, b) {\r\n            if (a.price < b.price) {\r\n                return -1;\r\n            }\r\n            if (a.price > b.price) {\r\n                return 1;\r\n            }\r\n            // a должно быть равным b\r\n            return 0;\r\n        }\r\n\r\n        function comparePrice(Pr){\r\n            //console.log(Pr);\r\n            return Object.keys(Pr).sort(compare)\r\n        }\r\n\r\n\r\n        function ArrayProducts(Pr,ClickProductF,setProductModal,setCart, getButtonInCartProduct,ReverceStatus = 0) {\r\n            var CatalogLists = [];\r\n            if(ReverceStatus === 0){\r\n                CatalogLists = ReverceCatalog(Pr);\r\n            }\r\n            if(ReverceStatus === 1){\r\n                CatalogLists = comparePrice(Pr);\r\n            }\r\n\r\n            if(ReverceStatus === 2){\r\n                CatalogLists = Object.keys(Pr);\r\n            }\r\n\r\n            const ArrayPr = CatalogLists.map((oneProduct, keyId) =>\r\n                <OneProduct key={'Products_'+keyId} product={Pr[oneProduct]} ClickProduct={ClickProductF.bind(this)} setCart={setCart.bind(this)} setProductModal={setProductModal.bind(this)} getButtonInCartProduct={getButtonInCartProduct.bind(this)}/>\r\n            );\r\n            return ArrayPr;\r\n        }\r\n\r\n\r\n        function ShowProductCategory(nameCategorys){\r\n            //console.log('ShowProductCategory ',nameCategorys);\r\n            if(nameCategorys.nameCategorys === 'sets'){\r\n                // console.log('d-d-d-d-',nameCategorys.productsLists[nameCategorys.idCategory]);\r\n                return (<GetSets\r\n                    key={nameCategorys.key}\r\n                    names={nameCategorys.nameCategorys}\r\n                    ProductArray={nameCategorys.productsLists}\r\n                    ClickProduct={nameCategorys.ClickProduct.bind(this)}\r\n                    setCart={nameCategorys.setCart.bind(this)}\r\n                    setProductModal={nameCategorys.setProductModal.bind(this)}\r\n                    getButtonInCartProduct={nameCategorys.getButtonInCartProduct.bind(this)}\r\n                />);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'sushi'){\r\n                return (<GetSushi names={nameCategorys.nameCategorys}/>);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'roli'){\r\n                return (<GetRoli names={nameCategorys.nameCategorys}/>);\r\n            }else{\r\n                return (<GetNoneCat names={nameCategorys.nameCategorys}/>);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        function GetSets(ArrayPr) {\r\n           //console.log('ArrayPr ',ArrayPr);\r\n            return (\r\n                <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                    {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this))}\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetSushi(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с креветкой</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши краб</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши копченый лосот</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetRoli(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с тунцом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл Филадельфия</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Филадельфия с крабом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetNoneCat(names){\r\n            return (\r\n                <Div id={names} className=\"blockCategoryFlex\">\r\n                <h1>К сожаление категория пуста!</h1>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        // function GetModalProduct(product){\r\n        //     return(\r\n        //\r\n        //     )\r\n        // }\r\n\r\n        return (\r\n            <ShowProductCategory\r\n                productsLists={this.props.productsLists}\r\n                nameCategorys={this.props.nameCategory}\r\n                idCategory={this.props.idCategorys}\r\n                ClickProduct={this.props.onClickProduct.bind(this,'Panels_Product')}\r\n                setCart={this.props.setCart.bind(this)}\r\n                setProductModal={this.props.setProductModal.bind(this)}\r\n                getButtonInCartProduct={this.props.getButtonInCartProduct.bind(this)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductList;","import React from 'react';\r\nimport {Div, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport ProductList from \"./ProductList\";\r\nimport axios from \"axios\";\r\n//import ProductsInfo from \"../../../../SushiHappyTime/src/ProductsInfo\";\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nclass CategoryList extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            loadingPage: true,\r\n            activePanel: 'brand',\r\n            products: [],\r\n            panelCategory: '',\r\n            ActiveCategory: 0,\r\n            productModal:[{\"title\":\"Название товара\",\"description\":\"Описание товара\",\"typeproduct\":\"0\",\"price\":\"1000\"}]\r\n        };\r\n    }\r\n\r\n    hndlClick = (aP) => {\r\n        console.log('--- ', 'Нажали на кнопку '+aP);\r\n        this.setState({ activePanel: aP })\r\n    };\r\n\r\n    setProductModal = (aP) => {\r\n        console.log('--- ', 'Установили товар в модалку '+aP+' - - - -XTTT');\r\n        this.setState({ productModal: aP })\r\n    };\r\n\r\n    setActiveCategory = (aP) => {\r\n        console.log('--- ', 'Установили категорию '+aP);\r\n        this.setState({ ActiveCategory: aP })\r\n    };\r\n\r\n\r\n    getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getButtonInCartProduct(typeProduct,setCart){\r\n        //console.log(this.props.CartProducts,'---0---');\r\n        if(!!this.props.CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            this.props.CartProducts.map((data,key)=>{\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  this.getCountButton(typeProduct,this.props.CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return this.getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return this.getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true});\r\n        this.setState({products:this.props.ProductsLists,loadingPage: false});\r\n        //console.log('Передали: ',this.props.ProductsLists);\r\n            }\r\n\r\n    classNameDivCategory(){\r\n        //console.log(this.props.queryParams.vk_platform);\r\n        if(this.props.queryParams.vk_platform == \"desktop_web\"){\r\n            return \"GroupBlockCategory DivBlockDesctopCategoys\";\r\n        }else{\r\n            return \"GroupBlockCategory\";\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n\r\n        function ModalProductInfo(OPT){\r\n            if(OPT.Loadings === false){\r\n                console.log(OPT);\r\n                return(\r\n                    <div className=\"blockProduct\" style={{\"margin\":\"0\",\"textAlign\":\"left\",\"background\":\"#ffffff\"}}>\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            noShadow={false}\r\n                            left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                        >\r\n                            {escapeHtmlDecode(OPT.ProductInfo[0].title)}\r\n                        </PanelHeader>\r\n                        <Div id={'product_type_'+OPT.ProductInfo[0].type_info}>\r\n                            <div className=\"imgPrewieProduct\"><img src={OPT.ProductInfo[0].img} alt={OPT.ProductInfo[0].title}/></div>\r\n                            <div className=\"titleProduct\">{escapeHtmlDecode(OPT.ProductInfo[0].title)} <span className=\"redTextP\">{OPT.ProductInfo[0].type_info}</span></div>\r\n                            <div className=\"DescrProduct\">{escapeHtmlDecode(OPT.ProductInfo[0].description)}</div>\r\n                            <div className=\"priceProductBig\"><span className=\"priceProduct\">{OPT.ProductInfo[0].price} ₽</span>\r\n                                {OPT.getButtonInCartProduct(OPT.ProductInfo[0],OPT.setCart)}\r\n                            </div>\r\n                        </Div>\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <div>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                    >Ошибка</PanelHeader>\r\n                        <div style={{\"textAlign\":\"center\",\"padding\":\"5% 0\"}}>Ошибка, вернитесь назад</div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        function GetCategorys(OPT){\r\n            if(OPT.Loadings === false) {\r\n               // console.log(OPT,'-0-0-0-');\r\n               // console.log('Загрузилось', OPT.CategoryList);\r\n                //console.log('Товары ', OPT.CategoryList[OPT.ShowCategory].ProductList);\r\n                return (<div style={{background:\"#FFFFFF\"}}>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>Назад</HeaderButton>}\r\n                    >\r\n                        {OPT.CategoryList[OPT.ShowCategory].Title}\r\n                    </PanelHeader>\r\n                    <ProductList\r\n                        onClickProduct={OPT.ClickProduct.bind(this)}\r\n                        productsLists={OPT.CategoryList[OPT.ShowCategory].ProductList} key={OPT.CategoryList[OPT.ShowCategory].id_Category}\r\n                        idCategorys={OPT.ShowCategory}\r\n                        nameCategory=\"sets\"\r\n                        setCart={OPT.setCart.bind(this)}\r\n                        getButtonInCartProduct={OPT.getButtonInCartProduct.bind(this)}\r\n                        setProductModal={OPT.setProductModal.bind(this)}\r\n                    />\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <PanelHeader>Ошибка</PanelHeader>\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        function GetBrandPanels(OPT,Loadings){\r\n           // console.log(OPT,' - - - категории грузим',OPT.Loadings);\r\n\r\n\r\n            if(CategoryList.length === 0){\r\n                return '';\r\n            }else {\r\n                if(OPT.Loadings === false) {\r\n                    //ProductObject = Object.keys(OPT.CategoryList);\r\n                    //console.log('Преобразовали',ProductObject);\r\n                    // const ArrayBrands = Object.keys(OPT.CategoryList).map((CategoryProdcuts, key) =>\r\n                    const ArrayBrands = Object.keys(OPT.CategoryList).map((idCategorys, key) =>\r\n\r\n                        <Div\r\n                            style={{\"background\":\"linear-gradient( rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4) ), url(//sushi-time31.ru/images/API_IMG/\"+OPT.CategoryList[idCategorys].imgCategory+\")\",\"backgroundSize\":\"100%\"}}\r\n                            className=\"DivCategoryBlock\"\r\n                            key={key+'_'+idCategorys}\r\n                            onClick={\r\n                                () => {\r\n                                    OPT.ActiveCategory(idCategorys);\r\n                                    OPT.ClickCategory('Panels_38')\r\n                                }\r\n                            }\r\n                        >\r\n                            {OPT.CategoryList[idCategorys].Title}\r\n                        </Div>\r\n                    );\r\n                    return ArrayBrands;\r\n                }\r\n                else {\r\n                    return 'Loading ...';\r\n                }\r\n                // return '';\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        const osname = platform();\r\n\r\n        return (\r\n            <View activePanel={this.state.activePanel}>\r\n                <Panel id=\"brand\">\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                    >\r\n                        Категории\r\n                    </PanelHeader>\r\n                    <Group>\r\n                        <Div className=\"logoBlock\">\r\n                            <img src=\"//sushi-time31.ru/images/API_IMG/logo_susshi_time.png\"/>\r\n                            {this.props.queryParams.vk_platform == \"desktop_web\"\r\n                                ?\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a>+7 (4722) 777-498</a>\r\n                                </Div>\r\n                                :\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a href=\"tel:+74722777498\">Позвонить</a>\r\n                                </Div>\r\n                            }\r\n                        </Div>\r\n                        <div id=\"SliderHeader\">\r\n                            {this.props.sliderHeader()}\r\n                        </div>\r\n                    </Group>\r\n                        <Group\r\n                            //title=\"Выбери категорию\"\r\n                            className={this.classNameDivCategory()} >\r\n                        <GetBrandPanels key=\"BrandPanels\" CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)} ActiveCategory={this.setActiveCategory.bind(this)}/>\r\n                    </Group>\r\n                </Panel>\r\n                {/*{this.state.loadingPage ? <Panel id=\"Panels_38\" />  : <Panel id=\"Panels_38\" ><PanelHeader >Суши</PanelHeader></Panel> && <GetCategory CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)}/>}*/}\r\n                <Panel id=\"Panels_38\">\r\n                    <GetCategorys\r\n                        CategoryList={this.state.products}\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickCategory={this.hndlClick.bind(this)}\r\n                        ClickProduct={this.hndlClick.bind(this,'Panels_Product')}\r\n                        setProductModal={this.setProductModal.bind(this)}\r\n                        ShowCategory={this.state.ActiveCategory}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                    />\r\n                </Panel>\r\n                <Panel id=\"Panels_Product\">\r\n\r\n                    <ModalProductInfo\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickBack={this.hndlClick.bind(this)}\r\n                        ProductInfo={this.state.productModal}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                    />\r\n                </Panel>\r\n                {/*<Panel id=\"Panels_38\" />*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}*/}\r\n                {/*    >*/}\r\n                {/*        Cуши*/}\r\n                {/*    </PanelHeader>*/}\r\n\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sushi\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"light2\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Роллы*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"roli\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Сеты*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sets\" idCategorys=\"0\"/>*/}\r\n                {/*</Panel>*/}\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CategoryList;","import React, {useEffect} from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n//import ModalProduct from './panels/ModalProduct';\r\nimport CategoryList from './CategoryList';\r\n//import App from \"./Profile\";\r\n\r\nconst CatalogProduct = (OPT) => {\r\n    // const [activePanel, setActivePanel] = useState('home');\r\n    // const [fetchedUser, setUser] = useState(null);\r\n    // const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\r\n\r\n    useEffect(() => {\r\n        // connect.subscribe(({ detail: { type, data }}) => {\r\n        //     if (type === 'VKWebAppUpdateConfig') {\r\n        //         const schemeAttribute = document.createAttribute('scheme');\r\n        //         schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n        //         document.body.attributes.setNamedItem(schemeAttribute);\r\n        //     }\r\n        // });\r\n        async function fetchData() {\r\n            // const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            // setUser(user);\r\n            // setPopout(null);\r\n           // console.log(OPT.ProductsLists,'--- ВОТ');\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n            <CategoryList setCart={OPT.setCart.bind(this)} CartProducts={OPT.CartProducts} ProductsLists={OPT.ProductsLists} sliderHeader={OPT.sliderHeader.bind(this)} queryParams={OPT.queryParams}/>\r\n    );\r\n\r\n};\r\n\r\nexport default CatalogProduct;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport NewOrderServer from './NewOrderServer';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Info from '@vkontakte/icons/dist/24/info';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\n\r\nclass PaymentsPage extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            SalePoints:this.props.SalePoints,\r\n            value2:0,\r\n            statusNewOrder:'11'\r\n        }\r\n\r\n        this.props.getReloadInfODeliveryPay();\r\n    }\r\n\r\n    setPointsDefaultsSale(SalePoints){\r\n        SalePoints = SalePoints*1;\r\n        this.setState({SalePoints});\r\n        this.props.setStates({SalePoints:SalePoints});\r\n    }\r\n\r\n    options () {\r\n        let options = [];\r\n        for (let i = 0; i <= this.props.userSystemInfo.dataUser.point*1; i += 1) {\r\n            options.push(<option value={`${i}`} key={`${i}`}>{i}</option>)\r\n        }\r\n        return options;\r\n    }\r\n\r\n    getCountsTimeBonus(){\r\n        var points = this.props.userSystemInfo.dataUser.point*1;\r\n        if(points >0){\r\n            return(\r\n                <div>\r\n                        <Div>Доступно таймов для списания: <b>{points}</b></Div>\r\n                    <FormLayout>\r\n                        <Slider\r\n                            step={1}\r\n                            min={0}\r\n                            max={points}\r\n                            value={Number(this.state.SalePoints)}\r\n                            onChange={(SalePoints)=> this.setPointsDefaultsSale(SalePoints)}\r\n                            top=\"Списать в оплату\"\r\n                        />\r\n                        <Select onChange={e => this.setPointsDefaultsSale(e.target.value)} value={String(this.state.SalePoints)}>\r\n                            {this.options()}\r\n                        </Select>\r\n\r\n                    <div style={{display: 'none',justifyContent:'center'}}>\r\n                        <Button size=\"l\" stretched style={{marginRight: 10}}>Выбранное кол-во</Button>\r\n                        <Button size=\"l\" stretched style={{marginLeft: 10}}>Списать все</Button>\r\n                    </div>\r\n                    </FormLayout>\r\n                </div>);\r\n        }else{\r\n            return(<Cell className=\"IconColorOrange\" before={<Icon24Coins />}> К сожалению у Вас <b>0</b> таймов</Cell>);\r\n        }\r\n    }\r\n\r\n    getSumCartItogo(){\r\n        var sum = this.props.sumCart-this.props.SalePoints;\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog) {\r\n            sum = sum + (this.props.DataDeliveryInfo.priceDelivery * 1);\r\n        }\r\n        if(sum<0){sum = 0;}\r\n        return (sum);\r\n    }\r\n\r\n\r\n    checkMinSummaCart(){\r\n        if(this.props.DataDeliveryInfo.errorOrderFinal){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={false}\r\n\r\n                >\r\n                    <h2>Сумма минимального заказа {this.props.DataDeliveryInfo.minSumOrder} рублей</h2>\r\n                    <p>Мы не можем принять Ваш заказ, так как сумма Вашей покупки, меньше необходимой</p>\r\n                </Placeholder>\r\n            );\r\n        }else{\r\n            return(\r\n                this.checkTypeDiliveryInfo()\r\n            );\r\n        }\r\n    }\r\n\r\n    PriceInfoVisual(){\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog){\r\n            return(\r\n                <Cell before={<Icon24Info />}> Стоимость доставки: <b>{this.props.DataDeliveryInfo.priceDelivery} ₽</b></Cell>\r\n            );\r\n        }else{\r\n            return('');\r\n        }\r\n    }\r\n\r\n    getAddressDelivery(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAddressGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAddressGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAddressGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getAddressAffiliate(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAffiliateGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getDataOrder(){\r\n        var DataOrder = {};\r\n\r\n        var DataAddressDelivery = this.getAddressDelivery(this.props.DataDeliveryInfo.addressDefault);\r\n        var DataAddressAffiliate = this.getAddressAffiliate(this.props.DataDeliveryInfo.AffiliateDefault);\r\n\r\n        DataOrder.idUserVK = this.props.userInfo.id;\r\n        DataOrder.typeDelivery = this.props.DataDeliveryInfo.checkedTypeDilivery;\r\n        DataOrder.AddressDelivery = {\"Info\":DataAddressDelivery,\"idAddress\":DataAddressDelivery.id};\r\n        DataOrder.idAffiliatePickup = {\"Info\":DataAddressAffiliate,\"idAffiliate\":DataAddressAffiliate.id};\r\n        DataOrder.PointsSale = this.props.SalePoints;\r\n        DataOrder.DeliverySum = this.props.DataDeliveryInfo.DeliveryPriceItog ? this.props.DataDeliveryInfo.priceDelivery : 0;\r\n        DataOrder.Comments = this.props.DataDeliveryInfo.comments;\r\n        DataOrder.DopInfo = this.props.DataDeliveryInfo.commentary;\r\n        DataOrder.typePay = this.props.DataDeliveryInfo.typePay;\r\n        DataOrder.countPerson = this.props.DataDeliveryInfo.countPerson;\r\n        DataOrder.cart = this.props.DataDeliveryInfo.cart;\r\n        return DataOrder;\r\n    }\r\n\r\n\r\n    checkTypeDiliveryInfo(){\r\n        if(this.props.checkedTypeDilivery === 0 && this.props.addressDefault === null){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Выбрать адрес</Button>}\r\n\r\n                >\r\n                <h2>Вы не выбрали адрес доставки</h2>\r\n                    <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите адрес доставки, либо адрес точки самовывоза, откуда Вам будет удобно забрать заказ.</p>\r\n                </Placeholder>\r\n\r\n            );\r\n        }else{\r\n            return(<div>\r\n                    <Group title=\"Оплата бонусными баллами\">\r\n                        {this.getCountsTimeBonus()}\r\n\r\n                    </Group>\r\n                    <Group title=\"Итоговые данные по заказу\">\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Place />}\r\n                                description={<span>\r\n                                      <i>{this.props.DataDeliveryInfo.addressOrderInfoUser}</i>\r\n                                  </span>}\r\n                                size=\"l\">\r\n                                {this.props.checkedTypeDilivery === 0 ? \" Доставка курьером \" : \" Заберу заказ сам\"}\r\n                            </Cell>\r\n                            <Cell before={<Icon24Coins />}> Списано таймов: <b>{this.props.SalePoints}</b></Cell>\r\n                            {this.PriceInfoVisual()}\r\n                            <Cell before={<Icon24MoneyCircle />}> К оплате: <b className=\"OrangeColor\">{this.getSumCartItogo()} ₽</b></Cell>\r\n                        </List>\r\n                    </Group>\r\n                <Group title=\"Способ оплаты\">\r\n                    <List>\r\n                        <Cell>\r\n                    <Radio name=\"typePayments\" value=\"1\"\r\n                           description=\"Оплата наличными при получении\"\r\n                           defaultChecked={this.props.DataDeliveryInfo.typePay === 1 ? true : false}\r\n                           onClick={() => {this.props.setStates({typePay:1})}}>Наличные</Radio>\r\n                    <Radio name=\"typePayments\" value='2' description=\"Оплата банковской картой, по терминалу\"\r\n                           defaultChecked={this.props.DataDeliveryInfo.typePay === 2 ? true : false}\r\n                           onClick={() => {this.props.setStates({typePay:2})}}>Терминал</Radio>\r\n\r\n                        </Cell>\r\n                        <Cell>\r\n                        <Div>\r\n                            <NewOrderServer setStates={this.setState.bind(this)}\r\n                                            userInfo={this.props.userInfo}\r\n                                            DataOrderInfo={this.getDataOrder()}\r\n                                            getPageOkOrderSet={this.props.setStates.bind(this)}\r\n                                            setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                            />\r\n                        </Div>\r\n                        </Cell>\r\n                    </List>\r\n                    </Group>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.checkMinSummaCart()\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentsPage;","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\nimport Dilivery from \"./Dilivery\";\r\n\r\nimport './styleCart.css';\r\n\r\nimport ButtonCart from \"../catalog/ButtonInCart\";\r\nimport PaymentsPage from \"./PaymentsPage\";\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass GetCartHome extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n\r\n    ReloadDeliveryPay(){\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n       function go(e){\r\n         setActivePanel(e);\r\n         // setActivePanel(e.currentTarget.dataset.to);\r\n       };\r\n\r\n       function setActivePanel(e){\r\n           // useState(e);\r\n          // this.setState({activePanel: e});\r\n           this.ActivePanels(e);\r\n       }\r\n\r\n       function setPopout(e){\r\n           if(e === ''){\r\n               // useState(<ScreenSpinner size='large' />);\r\n               this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n           }else{\r\n               // useState(e);\r\n               this.setState({popout: e});\r\n           }\r\n       }\r\n\r\n       function  getCartVisual(id, Products,setCart){\r\n           //setPopout(null);\r\n            if(Products.length<=0){\r\n                return(<div style={{\"textAlign\":\"center\",\"padding\":\"5px 10px\",\"marginTop\":\"30px\"}}><h2>Корзина пуста</h2><p>К сожалению, для того чтобы что-то заказать, Вам нужно положить этот товар в корзину!</p></div>);\r\n            }else {\r\n\r\n                var results = Products.map((cartProduct,idProducts) =>\r\n                    <div className=\"ProductInCartBlock\" key={\"blockProducts_\"+idProducts}>\r\n                        <div\r\n\r\n                        className=\"blockProduct\"\r\n                        style={{\r\n                            \"width\": \" 100%\",\r\n                            \"margin\": \"5% 0\",\r\n                            \"padding\": \"0%\",\r\n                            \"float\":\"none\",\r\n                            marginBottom:10\r\n                        }}\r\n                        >\r\n                            <div className=\"imgPrewieProduct\">\r\n                                <img src={cartProduct.img}/>\r\n                            </div>\r\n                            <div className=\"titleProduct\">\r\n                                {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                                {cartProduct.title} <span className=\"redTextP\">{cartProduct.type_info}</span>\r\n                            </div>\r\n                            <div className=\"DescrProduct2\">\r\n                                {cartProduct.description}\r\n                            </div>\r\n                            <div style={{clear:\"both\"}}>\r\n                                {/*Товаров: {cartProduct.count} <br/>*/}\r\n                                <span className=\"priceProduct\">На сумму: <span className=\"WeightFontBold\">{cartProduct.count * cartProduct.price} ₽</span></span>\r\n                                <div className=\"priceProductBig\"style={{width:\"100%\",bottom:-8}}><ButtonCart CartProducts={Products} typeProduct2={cartProduct}\r\n                                                                             setCarts={setCart.bind(this)}/></div>\r\n                            </div>\r\n                        </div>\r\n                        <Separator style={{ margin: '20px 0' }} />\r\n                    </div>\r\n                );\r\n\r\n                return(<div className=\"CartBlockProducts\">{results}</div>);\r\n\r\n            }\r\n        }\r\n\r\n        function getDiliveryData(){\r\n            return (<div><h2>Доставка</h2></div>);\r\n        }\r\n\r\n\r\n\r\n        function getButtonNavigation(typeNav, action){\r\n\r\n           switch(typeNav){\r\n               case\"1\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button className=\"activeButons\" onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"2\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"3\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>; break;\r\n           }\r\n\r\n           return(\r\n               <HorizontalScroll>\r\n                   {ButtonBlock}\r\n               </HorizontalScroll>\r\n           );\r\n        }\r\n\r\n        function getOneStepCartNone(){\r\n           return(\r\n               <Panel id=\"home\">\r\n\r\n                   <Placeholder\r\n                       icon={<Icon56MarketOutline />}\r\n                       action={false}\r\n\r\n                   >\r\n                       <h2>Корзина пуста</h2>\r\n                       <p>Для совершения заказа, положите в нее хотя-бы 1 товар</p>\r\n                   </Placeholder>\r\n\r\n               </Panel>\r\n           );\r\n        }\r\n\r\n        function getOneStepCart(ProductList,setCart,sumCart,setState){\r\n           return (\r\n               <Panel id=\"home\" >\r\n               <PanelHeader theme=\"light\"> {getButtonNavigation('1', setState.bind(this))}</PanelHeader>\r\n               <Group title=\"Товары\">\r\n                <Div className=\"CartBlockProductsOneStep\">\r\n                {getCartVisual(\"homes\", ProductList, setCart.bind())}\r\n            <div style={{clear:\"both\"}}></div>\r\n            </Div>\r\n        </Group>\r\n        <Group>\r\n            <Div className=\"SumItogOneSTepCart\">Сумма итого: <span className=\"OrangeColor\">{sumCart} ₽</span></Div>\r\n        </Group>\r\n        <Div><Button size=\"xl\" onClick={()=> {setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button></Div>\r\n               </Panel>\r\n        );\r\n        }\r\n\r\n\r\n\r\n        return(\r\n            <View activePanel={this.state.activePanel} className={osName === IOS ? \"IOSCLASSCSS\" : \"AndroidCLASSCSS\"} popout={this.state.popout} header={this.props.ProductList.length<=0 ? false : true}>\r\n\r\n\r\n                    {this.props.ProductList.length<=0 ? getOneStepCartNone() :\r\n\r\n                        getOneStepCart(this.props.ProductList, this.props.setCart.bind(),this.props.sumCart, this.setState.bind(this))\r\n                    }\r\n\r\n                <Panel id=\"dilivery\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('2', this.setState.bind(this))}</PanelHeader>\r\n                    <Dilivery\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        getUserSystemInfo={this.props.getUserSystemInfo.bind()}\r\n\r\n                        addressDefault={this.props.addressDefault}\r\n                        setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n\r\n                        AffiliateDefault={this.props.AffiliateDefault}\r\n                        setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        setTypeDilivery={this.props.setTypeDilivery.bind(this)}\r\n\r\n                        commentary={this.props.commentary}\r\n                        setComment={this.props.setComment.bind(this)}\r\n\r\n                        countPerson={this.props.countPerson}\r\n\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                        getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                        /*Для вычисления суммы бесплатной доставки*/\r\n                        sumCart={this.props.sumCart}\r\n\r\n                        setPopout={this.setState.bind(this)}\r\n                        ProductList={this.props.ProductList}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n                        hideModals={this.props.hideModals.bind(this)}\r\n\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" stretched level=\"secondary\"  style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"home\"});}}>В корзину</Button>\r\n                        <Button size=\"l\" stretched className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"order\"});}}>К оплате</Button>\r\n                    </Div>\r\n                </Panel>\r\n                <Panel id=\"order\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('3', this.setState.bind(this))}</PanelHeader>\r\n                    <PaymentsPage\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        SalePoints={this.props.SalePoints}\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        sumCart={this.props.sumCart}\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        addressDefault={this.props.addressDefault}\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                        getReloadInfODeliveryPay={this.props.checkedTypeDilivery ? this.props.getDeliveryDataPriceItogAffiliate.bind(this) : this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n\r\n                        action={this.setState.bind(this)}\r\n\r\n                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" level=\"secondary\" stretched style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button>\r\n\r\n                    </Div>\r\n                </Panel>\r\n            </View>\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default GetCartHome;","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './StartPageVKapp';\n// import App from './App2';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// globals/index.js\r\n\r\nglobal.ApiKey = '03478f08258a5b0e7f4a1e83dae33da9';\r\n\r\nglobal.CityListBind = [];","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert, Div,Input,FormLayout, Button, Select } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass FormNewAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                city: '',\r\n                street: '',\r\n                home: '',\r\n                entrance: '',\r\n                level: '',\r\n                flat: '',\r\n                comment:''\r\n        }\r\n\r\n        this.addressItems = [\r\n            // { label: 'Город', name: 'city', statusChech:'yes', minValue:5, valPls:'' },\r\n            { label: 'Название улицы', name: 'street', statusChech:'yes', minValue:4, valPls:'' },\r\n            { label: '№ дома', name: 'home', statusChech:'yes', minValue:0, valPls:'' },\r\n            { label: '№ квартиры/офиса', name: 'flat', statusChech:'', minValue:0, valPls:'' },\r\n            { label: '№ подъезда', name: 'entrance', statusChech:'', minValue:0, valPls:'' },\r\n            { label: 'Этаж', name: 'level', statusChech:'', minValue:0, valPls:''},\r\n            { label: 'Примечание', name: 'comment', statusChech:'', minValue:0, valPls:'Пример: Квартира сестры' }\r\n        ];\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.openDefault = this.openDefault.bind(this);\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n\r\n        if(this.props.AddressEdit){\r\n            this.state = {\r\n                    id:this.props.AddressEdit.id,\r\n                    city: this.props.AddressEdit.city,\r\n                    street: this.props.AddressEdit.street,\r\n                    home: this.props.AddressEdit.home,\r\n                    entrance: this.props.AddressEdit.podezd,\r\n                    level: this.props.AddressEdit.etaj,\r\n                    flat: this.props.AddressEdit.kvartira,\r\n                    comment: this.props.AddressEdit.comment\r\n                }\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n       // console.log(this.state);\r\n    }\r\n\r\n\r\n    openDefault () {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Исправить',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Не все поля адреса заполнены</h2>\r\n                    <p>Внимательно заполните все поля, для сохранения адреса доставки!</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n\r\n    saveNewAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://sushi-time31.ru/api/setAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n    saveEditAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://sushi-time31.ru/api/editAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            //this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n    getCitySelect(idCity,def = null){\r\n        if(idCity in global.CityListBind) {\r\n            const ListCityOrigin = global.CityListBind[idCity].listCity;\r\n            const ListCitys = Object.keys(global.CityListBind[idCity].listCity);\r\n            const ListOption = ListCitys.map((data, key) => {\r\n                return (<option\r\n                    key={key}\r\n                    value={ListCityOrigin[data].title}\r\n                >\r\n                    {\r\n                        ListCityOrigin[data].title\r\n                    }\r\n                </option>);\r\n            });\r\n            return (\r\n                ListOption\r\n            );\r\n        }else{\r\n            return (\"\");\r\n        }\r\n    }\r\n\r\n    getNulledForm(){\r\n        return(\r\n            <FormLayout>\r\n                <Select placeholder=\"Город / Населенный пункт\" onChange={this.onChange} name=\"city\" key={\"input_city\"} top=\"Город\">\r\n                    {this.getCitySelect(1)}\r\n                </Select>\r\n                {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                    <Input\r\n                        type=\"text\"\r\n                        name={name}\r\n                        key={\"input_\"+name}\r\n                        top={label}\r\n                        onChange={this.onChange}\r\n                        status={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >=minValue  ? 'valid' : 'error'\r\n                                    : 'error'\r\n                                : \"\"\r\n                        }\r\n                        bottom={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >=minValue  ? '' : 'Введенные значение не корректно '+this.state[name].length\r\n                                    : 'Обязательно к заполнению'\r\n                                : \"\"\r\n                        }\r\n                        placeholder={valPls}\r\n                    />\r\n                ))}\r\n                <Button size=\"l\" style={{background:\"#ff7300\"}} onClick={()=>{this.saveNewAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Подтвердить адрес</Button>\r\n            </FormLayout>\r\n        );\r\n    }\r\n\r\n\r\n    getEditForm(){\r\n        return(\r\n            <FormLayout>\r\n                <Select placeholder=\"Город / Населенный пункт\" onChange={this.onChange} name=\"city\" key={\"input_city\"} top=\"Город\" defaultValue={this.state.city}>\r\n                    {this.getCitySelect(1)}\r\n                </Select>\r\n                {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                    <Input\r\n                        type=\"text\"\r\n                        name={name}\r\n                        key={\"input_\"+name}\r\n                        top={label}\r\n                        onChange={this.onChange}\r\n                        status={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >minValue  ? 'valid' : 'error'\r\n                                    : 'error'\r\n                                : \"\"\r\n                        }\r\n                        value={this.state[name]}\r\n                        bottom={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >minValue  ? '' : 'Введенные значение не корректно'\r\n                                    : 'Обязательно к заполнению'\r\n                                : \"\"\r\n                        }\r\n                        placeholder={valPls}\r\n                    />\r\n                ))}\r\n                <Button size=\"l\" style={{background:\"#ff7300\"}} onClick={()=>{this.saveEditAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Завершить редактирование</Button>\r\n            </FormLayout>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Div>\r\n                {this.props.AddressEdit ? this.getEditForm() : this.getNulledForm()}\r\n            </Div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default FormNewAddress;","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\n\r\nexport default function ButtonInCart({CartProducts,typeProduct2,setCarts}){\r\n\r\n    function getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getButtonInCartProduct(typeProduct,setCart){\r\n       // console.log(CartProducts,'---0---',typeProduct,setCart);\r\n        if(!!CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            CartProducts.map((data,key)=>{\r\n                //console.log(data.id_Product,typeProduct.id_Product, data.type_product,typeProduct.type_product,'++++++++++++++++++');\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  getCountButton(typeProduct,CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return(getButtonInCartProduct(typeProduct2,setCarts));\r\n\r\n}\r\n","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nexport default function OneProduct({product,idCategory, ClickProduct, setCart, setProductModal, getButtonInCartProduct}) {\r\n// console.log('ут должна функция должна быть',ClickProduct);\r\n    // const ArrayProducts = product.map(oneProduct =>\r\n    //     //<OneProduct key={oneProduct.id} product={oneProduct} />\r\n    //     <Div className=\"blockProduct\" key={\"id_product_\"+oneProduct.id_Product}>\r\n    //         <Div className=\"imgPrewieProduct\"><img alt={oneProduct.title} src={oneProduct.img}/></Div><Div className=\"titleProduct\">{oneProduct.title}</Div><Div className=\"DescrProduct\">{oneProduct.description}</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">{oneProduct.price} руб.</span></Div>\r\n    //     </Div>\r\n    // );\r\n\r\n    // console.log(key);\r\n\r\n    function escapeHtml(text) {\r\n        var map = {\r\n            '&': '&amp;',\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '\"': '&quot;',\r\n            \"'\": '&#039;'\r\n        };\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n\r\n    function number_format(number, decimals, dec_point, separator ) {\r\n        number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\r\n        var n = !isFinite(+number) ? 0 : +number,\r\n            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n            sep = (typeof separator === 'undefined') ? ',' : separator ,\r\n            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n            s = '',\r\n            toFixedFix = function(n, prec) {\r\n                var k = Math.pow(10, prec);\r\n                return '' + (Math.round(n * k) / k)\r\n                    .toFixed(prec);\r\n            };\r\n        // Фиксим баг в IE parseFloat(0.55).toFixed(0) = 0;\r\n        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))\r\n            .split('.');\r\n        if (s[0].length > 3) {\r\n            s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n        }\r\n        if ((s[1] || '')\r\n            .length < prec) {\r\n            s[1] = s[1] || '';\r\n            s[1] += new Array(prec - s[1].length + 1)\r\n                .join('0');\r\n        }\r\n        return s.join(dec);\r\n    }\r\n\r\n    function getWeightProduct(Product_Weight,Product_WeightType){\r\n        if(Product_WeightType != 'л'){\r\n            return(\r\n                number_format(Product_Weight,'0','.', ' ')+' '+Product_WeightType\r\n            );\r\n        }else{\r\n            return(\r\n                Product_Weight+' '+Product_WeightType\r\n            );\r\n        }\r\n    }\r\n\r\n    function getModyficateBlock(ArrayMod){\r\n        var ListMod = Object.keys(ArrayMod);\r\n        if(ListMod.length <=0){\r\n            return \"\";\r\n        }else{\r\n            var VisualList = ListMod.map((datas,keys)=>{\r\n                return (<div key={keys} className=\"ModyficateProduct\"><img src={ArrayMod[datas].mod_img} /></div>);\r\n            });\r\n            return(\r\n                <div className=\"ModyficateBlock\">{VisualList}</div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function getProductDiv(productList,idCategory,ClickProduct,setCart,setProductModal ,getButtonInCartProduct){\r\n\r\n         //console.log(ClickProduct,'в корзину функция');\r\n        var ProductCat = productList;\r\n\r\n        const WeightProduct = '';\r\n\r\n\r\n\r\n        const ArrayProducts = ProductCat.map((typeProduct,idTypeProduct) =>\r\n            <Div key={\"blockProducts_\"+typeProduct.id_Product+\"_\"+idTypeProduct} className=\"blockProduct\" id={\"id_product_\"+typeProduct.id_Product+\"_type_\"+typeProduct.type_product}>\r\n                {getModyficateBlock(typeProduct.modyficate)}\r\n                <Div className=\"imgPrewieProduct\">\r\n                    <img\r\n                        alt={typeProduct.title}\r\n                        src={typeProduct.img}\r\n                        onClick={() =>{\r\n                            ClickProduct('Panels_Product');\r\n                            setProductModal([typeProduct]);\r\n                            console.log('Нажали на фотку',ProductCat,idTypeProduct)}\r\n                        }\r\n                    />\r\n                </Div>\r\n                <Div className=\"titleProduct\">\r\n                    {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                    {escapeHtmlDecode(typeProduct.title)}\r\n                    <span className=\"redTextP\">\r\n                        {getWeightProduct(typeProduct.weight,typeProduct.weight_type)}\r\n                    </span>\r\n                </Div>\r\n                <Div className=\"DescrProduct\">\r\n                    {escapeHtmlDecode(typeProduct.description)}\r\n                    <div>\r\n                    </div>\r\n                    {typeProduct.type_info != '' ?\r\n                        <div className=\"WeightBlock\">\r\n                            {typeProduct.type_info}\r\n                        </div>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                </Div>\r\n                <Div className=\"priceProductBig\">\r\n                    <span className=\"priceProduct\">\r\n                        {number_format(typeProduct.price,'0','.',' ')} ₽\r\n                    </span>\r\n                    {getButtonInCartProduct(typeProduct,setCart)}\r\n                </Div>\r\n            </Div>\r\n        );\r\n\r\n\r\n        return ArrayProducts;\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        getProductDiv(product,idCategory,ClickProduct, setCart , setProductModal, getButtonInCartProduct)\r\n    );\r\n}"],"sourceRoot":""}