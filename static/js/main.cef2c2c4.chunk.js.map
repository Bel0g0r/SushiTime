{"version":3,"sources":["StartPageVKapp.js","panels/ProfileUser/UserOrderList.js","panels/ProfileUser/OrderTypeList.js","panels/ProfileUser/OrderShowDeail.js","panels/Notice/index.js","panels/Cart/Dilivery.js","panels/Cart/DiliveryAddress.js","panels/Cart/GetOneAddress.js","panels/Cart/GetOneAddressOff.js","panels/Cart/AffiliateList.js","panels/Cart/GetOneAffiliateAddress.js","panels/preorder/index.js","panels/noPreorder/index.js","panels/Cart/NewOrderServer.js","panels/ProfileUser/UserInfo.js","panels/Persik.js","panels/Nopersik.js","panels/Profile.js","panels/catalog/ProductList.js","panels/catalog/CategoryList.js","panels/catalog/CatalogProduct.js","panels/Cart/PaymentsPage.js","panels/Cart/CartHome.js","index.js","panels/global/index.js","img/persik.png","panels/Cart/FormNewAddress.js","panels/catalog/ButtonInCart.js","panels/catalog/OneProduct.js"],"names":["require","App","props","parseQueryString","string","slice","split","map","queryParam","kvp","key","value","reduce","query","state","AudioInfo","ReloadBasket","Audio","Notice","CountNotice","CountNoticeNoView","typeOrderGetText","typeOrderGet","numberOrderShow","listOrderUser","ParamStart","products","DopProductList","DopProductUserSet","LoadDopProduct","loadingCatalog","activeStory","activePanelOrders","loadingPage","user","userSystemInfo","error","dataUser","cart","countCartProduct","dopPresets","imgListPresets","addressDefault","AffiliateDefault","checkedTypeDilivery","commentary","typePay","countPerson","SalePoints","sumCart","activeModal","formNewAddressData","formEditAddressData","listAddressGlobal","listAffiliateGlobal","priceDelivery","minSumOrder","minSumFreeDelivery","errorOrderFinal","DeliveryPriceItog","DeliveryAddressOKCity","addressOrderInfoUser","newOrderStats","StatusLoadSlide","slideHeaderArray","slideIndex","StatusNotification","CityListBind","typeOrderDate","SelectDatePreorder","SelectTimePreorder","onStoryChange","bind","axios","method","url","global","ApiKey","responseType","then","data","ListCitySelect","list","catch","err","console","log","idUsers","CountNoticeNoCheck","result","type","idNotice","this","id","getNotice","getCartDB","setState","getUserSystemInfo","as","bs","stretched","icon","action","size","level","onClick","e","currentTarget","dataset","story","aa","sumCartItog","CPr","getSumCartOnDiscount","SumDopsProduct","Object","keys","length","n","count","price","document","cookie","typeProduct","price_discount","new_price","vk_platform","headers","typeSlide","getTypeSlideGet","setSlideArray","errorInfo","listSlide","ArraySlide","status","ArraySlides","Bullets","AutoPlays","SliderVisual","datas","src","img","style","maxWidth","autoplay","slideWidth","width","height","bullets","getSlideHeaderArray","setTimeout","reloadSlideHeaderSetTime","connect","sendPromise","response","is_allowed","PushClick","AllNotice","setNotice","setNoticeServer","DeleteNotifi","OffPushNotyfication","OnPushNotyfication","getStatusNotificate","getCityUser","setUser","a","async","fetchData","setInterval","getIntervalCart","setHashDataReload","i","dataOld","dataNew","ListProduct","setCountCartVisal","ListDopPresets","listPresetProduct","imgPresetProduct","id_user","loading","listProduct","ListOld","JSON","stringify","ListNew","ListPresetsOld","ListPresetsNew","DopPresetsData","statusBasket","StatusReloadBasketData","statusPresets","ReloadBasketDataFN","PlayInfoAudio","ReloadBasketDataDopPresets","audio","stop","play","setUserSystem","JsonBasket","basketJson","tE","counts","push","countPlus","setcountCartProduct","noAdd","cartProducts","id_Product","type_product","setcountCartProductVar","splice","setDataServer","btoa","encodeURI","setCartServer","HashParam","window","location","hash","newHeight","screen","send","setHashNew","queryParams","search","modal","onClose","setModal","header","right","title","dynamicContentHeight","caption","actions","osname","platform","countNoticeView","tabbar","selected","data-story","text","label","activePanel","getSuccesOrderPage","theme","userData","setTypeOrderList","left","IOS","addon","setOrderShowNumber","listOrderUserSet","idOrderDetail","OrderDatas","setCart","CartProducts","ProductsLists","sliderHeader","getSliderGalery","noShadow","ProductList","setDopProduct","PresetsDopProductList","userInfo","setAddressDefault","setAffiliateDefault","setTypeDilivery","setComment","setStates","setDeliveryDataItogs","getDeliveryDataPriceItog","getDeliveryDataPriceItogAffiliate","showModal","hideModals","DataDeliveryInfoPay","setTypeOrderDate","comments","setOkNewOrderView","getNotificationPage","go","dataUsers","setStatusNotification","setShowUserOrderList","React","Component","UserOrderList","loadOrders","before","color","getAllGroups","OrderTypeList","getOrderUserSystem","countOrder","Pr","reduceRight","arr","last","index","coll","concat","typeNumber","iconsD","countOrders","ListOrder","ReverceList","dataOrder","keyOrder","CurrentOrder","statusY","status_order","delete_order","summaOrders","sum_order","description","date","time","id_order","fontSize","marginLeft","getOrderType","results","getNowOrder","getOldOrder","getCancelledOrder","getOneTypeOrders","OrderShowDetail","ststusReturn","statusOld","statusReal","ststusReturns","Order","pre_order","date_pre_order","replace","m","sale_price","product_price","Price_sales","discount_amount","Discount","indicator","cost","escapeHtmlDecode","product_title","price_product","title_product","title_gift_product","dilivery","dilivery_type","Address","dilivery_adres","PriceDeli","dilivery_price","TextDel","affiliate","affiliate_info","promo_status","PromoInfo","promo_code","promo_info","point_out","point_in","StatusIcon","getStatusIconText","detailText","getStatusOrderReal","getStatusOrderText","status_order_real","payment","type_pay","getPerson","person","getInfoPointsOrder","getInfoPreorderBlock","getInfoPromokod","promo","getOrderComposition","productList","getOrderDopComposition","dopProductList","getOrderGiftComposition","giftProductList","getOrderDeliveryInfo","getComment","Comment","popout","statusView","Data","setNoticeData","asideContent","getImagesNotice","dangerouslySetInnerHTML","__html","NoteNotice","textAlign","blueBackground","backgroundColor","Dilivery","UserCard","phone","email","CheckSMSCode","phoneValue","codeValue","resultVerificationCode","tooltip","snackbar","showBTNNewAddress","showFormNewAddress","openBase","phone_number","layout","fill","phoneVerification","VerificationCode","idUserVK","event","target","types","values_count","display","justifyContent","marginRight","background","getDataCountPerson","readOnly","top","placeholder","onChange","getValueInputCode","checkVerificationCode","defaultValue","getValueInputPhone","setVerificationPhone","DataDeliveryInfo","getButtonTypeOrder","typeDelivery","DataInfos","getButtonTypeDilivery","getListAddress","getListAffiliate","getPreorderBlock","getCountPersonInput","getCommentsTextarea","className","setPopout","setShowBTNNewAddress","showModals","getCommentsData","Param","getNoneCartProduct","getInfoUserAuth","getInfoUserNoneAuth","getOkListAddress","DiliveryAddress","listAddress","listAddressOff","addressOk","dataAddress","getAddressUserSystem","AddressEdit","delUpdate","id_UserVK","getFormNewAddress","ListAddressNoDelivery","listAddressGlobalOff","getAddressUsers","listAddressU","DataSetAddress","city","street","home","diliveryData","priceDilivery","min_sum_order","min_sum_free_dilivery","setDataDiliveryPrice","setAddressInfoUsers","keyId","setDataDeliveryPrice","setAddressEdit","AddresInfo","NumberAddress","dataAddressOff","dataAddress2","keyId2","getListAddressVisual","GetOneAddress","AddressN","closePopout","comment","addressInfo","result_add","autoclose","deletedAddress","float","podezd","etaj","kvartira","openDefault","name","getAddressFull","defaultChecked","getAddressTitle","defaultCheckedR","GetOneAddressOff","disabled","AffiliateList","listAffiliate","addressAffiliateOk","dataAffiliate","id_City","listOffAffiliate","getAddressAffiliate","GetOneAffiliateAddress","operating_mode","Preorder","loadBlockPreorder","listDatePreorder","onChangeS","getDateList","ListDate","getSelectTime","ListTimes","timeList","ListTime","times","false","getSelectDate","getBlockPreorder","NoPreorder","loadBlockOrder","paddingBottom","getBlocknoPreorder","NewOrderServer","statusNewOrder","DataOrderInfo","getPageOkOrderSet","UserInfo","margin","them","fetchedUser","photo_200","first_name","last_name","point","checked","textDecoration","href","getPanelProfil","ProfileUserPage","useState","setActivePanel","useEffect","to","setActivePanels","nameCategory","productsLists","compare","b","ArrayProducts","ClickProductF","setProductModal","getButtonInCartProduct","ReverceStatus","CatalogLists","ReverceCatalog","sort","comparePrice","oneProduct","OneProduct","product","ClickProduct","GetSets","ArrayPr","names","ProductArray","GetSushi","alt","GetRoli","GetNoneCat","nameCategorys","idCategory","idCategorys","onClickProduct","CategoryList","hndlClick","aP","productModal","setActiveCategory","ActiveCategory","panelCategory","ButOk","id_CartPr","getCountButton","getInCarts","classNameDivCategory","OPT","Loadings","imgCategory","ClickCategory","Title","ShowCategory","id_Category","ClickBack","ProductInfo","type_info","fontWeight","old_price","CatalogProduct","PaymentsPage","value2","getReloadInfODeliveryPay","options","points","step","min","max","Number","setPointsDefaultsSale","String","sum","checkTypeDiliveryInfo","checkPreorderActive","DataOrder","DataAddressDelivery","getAddressDelivery","DataAddressAffiliate","AddressDelivery","idAffiliatePickup","PointsSale","DeliverySum","Comments","DopInfo","dateObj","Date","getCountsTimeBonus","getDate","getMountsDate","getMonth","getUTCFullYear","PriceInfoVisual","getSumCartItogo","getDataOrder","returnPlaceholderPreorder","checkPreorderType","checkMinSummaCart","osName","GetCartHome","LoadStatus","ListPresets","number","typeCount","overflow","paddingRight","ListDopProduct","getButtonDopProduct","getCountDopProductIcon","minWidth","Prod","alls","idProduct","Buttons","getCartVisual","Products","cartProduct","idProducts","marginBottom","clear","getPriceProducts","bottom","typeProduct2","setCarts","getButtonNavigation","typeNav","ButtonBlock","data-to","GetPresetsVisual","getOneStepCart","DopProductListVisual","ReactDOM","render","getElementById","module","exports","FormNewAddress","entrance","flat","addressItems","statusChech","minValue","valPls","idCity","ListCityOrigin","listCity","ListCitys","ListOption","getCitySelect","saveNewAddress","saveEditAddress","getEditForm","getNulledForm","ButtonInCart","number_format","decimals","dec_point","separator","isFinite","prec","Math","abs","sep","dec","s","k","pow","round","toFixed","toFixedFix","Array","join","ProductCat","idTypeProduct","ArrayMod","ListMod","VisualList","mod_img","getModyficateBlock","modyficate","Product_Weight","weight","Product_WeightType","weight_type","getProductDiv"],"mappings":"qhBAqCAA,EAAQ,K,IAGFC,E,YACF,WAAaC,GAAQ,IAAD,8BAChB,4CAAMA,KAmJVC,iBAAmB,SAACC,GAChB,OAAOA,EAAOC,MAAM,GAAGC,MAAM,KACxBC,KAAI,SAACC,GACF,IAAIC,EAAMD,EAAWF,MAAM,KAC3B,MAAO,CAACI,IAAKD,EAAI,GAAIE,MAAOF,EAAI,OAEnCG,QAAO,SAACC,EAAOJ,GAEZ,OADAI,EAAMJ,EAAIC,KAAOD,EAAIE,MACdE,IACR,KA1JP,EAAKC,MAAQ,CACTC,UAAU,CACNC,aAAc,IAAIC,MAAM,kDAG5BC,OAAO,GACPC,YAAY,EACZC,kBAAkB,KAElBC,iBAAiB,kFACjBC,aAAa,MACbC,gBAAgB,EAChBC,cAAc,GAEdC,YAAW,EACXC,SAAS,GACTC,eAAe,GACfC,kBAAkB,GAClBC,gBAAe,EACfC,gBAAe,EACfC,YAAa,UACbC,kBAAkB,gBAClBC,aAAa,EACbC,KAAK,GACLC,eAAe,CAACC,OAAM,EAAKC,SAAS,IACpCC,KAAK,GACLC,iBAAiB,GAEjBC,WAAY,GACZC,gBAAgB,EAEhBC,eAAe,KACfC,iBAAiB,EACjBC,oBAAoB,EACpBC,WAAW,GACXC,QAAQ,EACRC,YAAY,EACZC,WAAW,EACXC,QAAQ,EACRC,YAAY,KACZC,mBAAmB,GACnBC,oBAAoB,GAEpBC,kBAAkB,GAClBC,oBAAoB,GAEpBC,cAAc,EACdC,YAAY,IACZC,mBAAmB,EAGnBC,iBAAgB,EAEhBC,mBAAkB,EAGlBC,uBAAsB,EAGtBC,qBAAqB,GACrBC,eAAc,EAEdC,iBAAgB,EAChBC,iBAAiB,GACjBC,WAAY,EAEZC,oBAAmB,EAEnBC,aAAa,GAEbC,eAAc,EACdC,mBAAmB,KACnBC,mBAAmB,MAGvB,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBA9EL,E,2EAiFN,IAAD,OACTC,IAAM,CACFC,OAAO,MACPC,IAAI,8CAA8CC,EAAOC,OACzDC,aAAa,SAEZC,MAAK,YAAW,IAATC,EAAQ,EAARA,KACD,UAAWA,IAGV,EAAKlE,MAAMmE,eAAiBD,EAAKE,KACjCN,EAAOT,aAAea,EAAKE,SAIlCC,OAAM,SAACC,GACJC,QAAQC,IAAI,yIAA2BF,Q,gCAIzCG,GAAS,IAAD,OACdd,IAAM,CACFC,OAAO,MACPC,IAAI,kDAAkDY,EAAQ,WAAWX,EAAOC,OAChFC,aAAa,SAEZC,MAAK,YAAW,IAATC,EAAQ,EAARA,KACD,UAAWA,GAEV,EAAKlE,MAAMK,YAAc,KACzB,EAAKL,MAAMM,kBAAoB,KAC/B,EAAKN,MAAMI,OAAS,IAEhB,EAAKJ,MAAMM,oBAAsB4D,EAAKQ,oBAAwB,EAAK1E,MAAMK,cAAgB6D,EAAK7D,cAC9F,EAAKL,MAAMI,OAAS8D,EAAKS,OACzB,EAAK3E,MAAMK,YAAc6D,EAAK7D,YAC9B,EAAKL,MAAMM,kBAAoB4D,EAAKQ,mBACpCH,QAAQC,IAAI,sHAAwB,EAAKxE,MAAMI,YAI1DiE,OAAM,SAACC,GACJC,QAAQC,IAAI,iKAAgCF,Q,sCAKxCM,EAAKC,GAAU,IAAD,OACtBJ,EAAUK,KAAK9E,MAAMoB,KAAK2D,GAC9BpB,IAAM,CACFC,OAAO,MACPC,IAAI,wDAAwDY,EAAQ,aAAaI,EAAS,YAAYD,EAAK,WAAWd,EAAOC,OAC7HC,aAAa,SAEZC,MAAK,YAAW,IAATC,EAAQ,EAARA,KACD,UAAWA,EACVK,QAAQC,IAAI,sHAAuBN,IAEnC,EAAKc,UAAUP,GACfF,QAAQC,IAAI,sHAAuBN,OAG1CG,OAAM,SAACC,GACJC,QAAQC,IAAI,iKAAgCF,Q,0CAkBpDC,QAAQC,IAAI,6EACTM,KAAK9E,MAAMgD,eACV8B,KAAKG,UAAUH,KAAK9E,MAAMoB,KAAK2D,IAC/BD,KAAKI,SAAS,CAACjE,YAAa,eACxBqC,eAAc,EACdC,mBAAmB,KACnBC,mBAAmB,KACnB1C,kBAAkB,KAEtBgE,KAAKK,kBAAkBL,KAAK9E,MAAMoB,KAAK2D,KAEvCR,QAAQC,IAAI,oE,6CAKhBM,KAAKI,SAAS,CAACjE,YAAa,oB,uCAGfmE,EAAGC,GAChBP,KAAKI,SAAS,CACV3E,iBAAiB6E,EACjB5E,aAAa6E,EACbnE,kBAAmB,yB,2CAKN,IAAD,OAChB,OACI,kBAAC,IAAD,CAAaoE,WAAS,EACTC,KAAM,kBAAC,IAAD,MACNC,OAAQ,kBAAC,IAAD,CAAQC,KAAK,IAAIC,MAAM,WAAWC,QAAS,WAAK,EAAKT,SAAS,CAClE3E,iBAAiB,kFACjBC,aAAa,MACbU,kBAAmB,qBACnBD,YAAa,oBAJT,mHAQjB,sHACA,ggB,iDAML6D,KAAK9E,MAAM0C,YAAcoC,KAAK9E,MAAMmC,SACnC2C,KAAKI,SAAS,CAACtC,iBAAgB,IAC5BkC,KAAK9E,MAAM2C,oBAAsBmC,KAAK9E,MAAMmC,QAE3C2C,KAAKI,SAAS,CAACrC,mBAAkB,IAGjCiC,KAAKI,SAAS,CAACrC,mBAAkB,KAGrCiC,KAAKI,SAAS,CAACtC,iBAAgB,M,0DAOnCkC,KAAKI,SAAS,CACVzC,cAAe,EACfC,YAAa,IACbC,mBAAoB,IAGrBmC,KAAK9E,MAAMmC,QAAU,KACpB2C,KAAKI,SAAS,CAACtC,iBAAgB,IAC5BkC,KAAK9E,MAAMmC,QAAU,EAEpB2C,KAAKI,SAAS,CAACrC,mBAAkB,IAGjCiC,KAAKI,SAAS,CAACrC,mBAAkB,KAGrCiC,KAAKI,SAAS,CAACtC,iBAAgB,M,oCAKxBgD,GACXd,KAAKI,SAAS,CAAEjE,YAAa2E,EAAEC,cAAcC,QAAQC,U,0CAGrCH,GAAc,IAAD,OAAXI,EAAW,wDACrB,GAALJ,IAAQA,EAAI,KACL,IAAPI,GACClB,KAAKI,SAAS,CACVzD,iBAAkBmE,IAI1B,IAAIK,EAAc,EAClBnB,KAAK9E,MAAMwB,KAAK/B,KAAI,SAACyG,GACbD,GAAe,EAAKE,qBAAqBD,MAIjD,IAAIE,EAAiB,EAClBC,OAAOC,KAAKxB,KAAK9E,MAAMc,mBAAmByF,OAAS,GAElDF,OAAOC,KAAKxB,KAAK9E,MAAMc,mBAAmBrB,KAAI,SAACsF,EAAGyB,GAC1CJ,GAAkB,EAAKpG,MAAMc,kBAAkBiE,GAAI0B,OAA8C,EAAvC,EAAKzG,MAAMc,kBAAkBiE,GAAI2B,UAKvG5B,KAAKI,SAAS,CAAC/C,QAAQ8D,EAAYG,IAEnCO,SAASC,OAAS,UAAU9B,KAAK9E,MAAMwB,O,2CAGtBqF,GACjB,MAAK,mBAAoBA,IAA+C,IAA/BA,EAAYC,eAG1CD,EAAYC,eAAeC,UAAUF,EAAYJ,MAFhDI,EAAYH,MAAMG,EAAYJ,Q,iCAMnCb,GACPd,KAAKI,SAAS,CACVnD,WAAW6D,M,8BAIXA,GACJd,KAAKI,SAAS,CAAC9D,KAAKwE,M,oCAGVA,GACVd,KAAKI,SAAS,CAAC7D,eAAe,CAACC,OAAM,EAAMC,SAASqE,O,wCAIpD,OAAOd,KAAK9E,MAAMW,WAAWqG,aACzB,IAAI,cAAe,MAAO,UAC1B,QAAS,MAAO,Y,4CAKF,IAAD,QACY,IAA1BlC,KAAK9E,MAAMW,YAIVgD,IAAM,qDAAqDG,EAAOC,OAC9D,CACIH,OAAQ,OACRqD,QAAS,CAAC,eAAgB,qCAC1B/C,KAAM,CACFgD,UAAWpC,KAAKqC,mBAEpBnD,aAAc,SAEjBC,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACA,UAAWA,GACX,EAAKkD,cAAc,IAAI,GACvB7C,QAAQC,IAAIN,EAAK5C,MAAO,IAAK4C,EAAKmD,YAGlC,EAAKD,cAAclD,EAAKoD,WAAW,MAG1CjD,OAAM,YAAY,IAAVC,EAAS,EAATA,IACLC,QAAQC,IAAI,mHAAoCF,Q,oCAKlDiD,EAAWC,IACP,IAAXA,GACC1C,KAAKI,SAAS,CAAChC,iBAAkBqE,KACE,IAA/BzC,KAAK9E,MAAMiD,iBACX6B,KAAKI,SAAS,CAACjC,iBAAiB,MAGD,IAA/B6B,KAAK9E,MAAMiD,iBACX6B,KAAKI,SAAS,CAACjC,iBAAiB,M,wCAK1B,IAAD,OACTwE,EAAcpB,OAAOC,KAAKxB,KAAK9E,MAAMkD,kBACrCwE,EAAU,OACVC,EAAY,OACEF,EAAYlB,OAE9B,GADGkB,EAAYlB,QAAU,IAAGmB,GAAU,EAAMC,GAAY,IACtB,IAA/B7C,KAAK9E,MAAMiD,gBAA2BwE,EAAYlB,OAAS,EAAG,CAC7D,IAAIqB,EAAeH,EAAYhI,KAAI,SAACoI,EAAMvB,GAEtC,OAAQ,yBAAK1G,IAAK0G,EAAMwB,IAAK,EAAK9H,MAAMkD,iBAAiB2E,GAAOE,IAAKC,MAAO,CAACC,SAAS,aAG1F,OACI,kBAAC,IAAD,CACIC,SAAUP,EAGVQ,WAAW,OACXH,MAAO,CAACI,MAAM,OAAOC,OAAQ,QAC7BC,QAASZ,GAERE,GAIT,MACI,K,iDAOR9C,KAAKyD,sBACLC,WAAW1D,KAAK2D,yBAAyB/E,KAAKoB,MAAM,O,4CAQlC,IAAD,OACjB4D,IAAQC,YAAY,wBAAyB,CAAC,OAAU,8BAA+B,OAAU,CAAC,QAAW,YAAY,EAAI,QAAQ,aAAe,6EAC/I1E,MAAK,SAAC4D,GACH,EAAK3C,SAAS,CAAC9B,mBAAoByE,EAAMe,SAASC,gBAErDxE,OAAM,SAACC,GACJ,EAAKY,SAAS,CAAC9B,oBAAoB,S,4CAIzBwC,GAClBd,KAAKI,SAAS,CAAC9B,mBAAmBwC,M,mCAGzBf,UAEFC,KAAK9E,MAAMI,OAAOyE,K,4CAMzB,OACI,kBAAC,IAAD,CACIzB,mBAAoB0B,KAAK9E,MAAMoD,mBAC/B0F,UAAWhE,KAAKgE,UAAUpF,KAAKoB,MAC/BI,SAAUJ,KAAKI,SAASxB,KAAKoB,MAE7BiE,UAAWjE,KAAK9E,MAAMI,OAEtB4I,UAAWlE,KAAKmE,gBAAgBvF,KAAKoB,MACrCoE,aAAcpE,KAAKoE,aAAaxF,KAAKoB,U,mCAMR,IAAlCA,KAAK9E,MAAMoD,mBACV0B,KAAKqE,sBAELrE,KAAKsE,uB,4CAIS,IAAD,OACjBV,IAAQC,YAAY,4BAA6B,IAC5C1E,MAAK,SAAC4D,GACH,EAAK3C,SAAS,CAAC9B,oBAAoB,OAEtCiB,OAAM,SAACC,GACA,EAAKY,SAAS,CAAC9B,oBAAoB,S,2CAK9B,IAAD,OAChBsF,IAAQC,YAAY,6BAA8B,IAC7C1E,MAAK,SAAC4D,GACH,EAAKwB,yBAERhF,OAAM,SAACC,GACA,EAAK+E,2B,0CAOA,IAAD,OAChBvE,KAAKwE,cACLxE,KAAKuE,sBAYL1F,IAAM,CACFC,OAAO,MAGPC,IAAI,8CAA8CC,EAAOC,OAAO,kDAChEC,aAAa,SACdC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAEP,EAAKgB,SAAS,CAEVtE,SAAUsD,EAAKE,KACfpD,gBAAe,OAGlBqD,OAAM,SAACC,GACJC,QAAQC,IAAI,kBAAkBF,MA1BtC,SAAyBiF,EAAQtE,EAAUE,EAAkBH,GAA7D,QAAAwE,EAAAC,OAAA,kEAAAD,EAAA,MACuBd,IAAQC,YAAY,wBAD3C,OACUvH,EADV,OAEImI,EAAQnI,GAIR6D,EAAU7D,EAAK2D,IACfC,EAAU5D,EAAK2D,IACfI,EAAkB/D,EAAK2D,IAR3B,qCA8BA2E,CAAU5E,KAAKyE,QAAQ7F,KAAKoB,MAAMA,KAAKG,UAAUvB,KAAKoB,MAAMA,KAAKK,kBAAkBzB,KAAKoB,MAAMA,KAAKE,UAAUtB,KAAKoB,OAClHA,KAAK2D,2BACDkB,YAAY,WAAY7E,KAAK8E,gBAAgB,IAAIlG,KAAKoB,MAAO,KAC7D6E,YAAY,WAAY7E,KAAKE,UAAUF,KAAK9E,MAAMoB,KAAK2D,KAAKrB,KAAKoB,MAAO,KACxEA,KAAK+E,kBAAkB/E,Q,sCAGfgF,GAGZhF,KAAKG,UAAUH,KAAK9E,MAAMoB,KAAK2D,M,6CAIZgF,EAAQC,GAC3B,OAAGD,IAAYC,I,yCAIAC,GAEfnF,KAAKI,SAAS,CAEV1D,KAAMyI,EACN9I,aAAa,IAEjB2D,KAAKoF,sB,iDAIkBC,IACD,IAAnBA,EACCrF,KAAKI,SAAS,CAEVxD,WAAYyI,EAAeC,kBAC3BzI,eAAgBwI,EAAeE,mBAGnCvF,KAAKI,SAAS,CAEVxD,WAAY,GACZC,gBAAgB,M,gCAKlB2I,GAAS,IAAD,QACY,IAAvBxF,KAAK9E,MAAMuK,SACVzF,KAAKI,SAAS,CAACqF,SAAS,IAE5B5G,IAAM,CACFC,OAAO,MACPC,IAAI,kDAAkDC,EAAOC,OAAO,oCAAoCuG,EACxGtG,aAAa,SACdC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAEJ,UAAWA,IACVA,EAAKsG,YAAc,GACnBjG,QAAQC,IAAIN,EAAK5C,MAAM,IAAI4C,EAAKmD,YAGZ,OAArBnD,EAAKsG,cACJtG,EAAKsG,YAAc,IAGvB,IAAIC,EAAUC,KAAKC,UAAU,EAAK3K,MAAMwB,MACpCoJ,EAAUF,KAAKC,UAAUzG,EAAKsG,aAC9BK,EAAiBH,KAAKC,UAAU,EAAK3K,MAAM0B,YAC3CoJ,EAAiBJ,KAAKC,UAAUzG,EAAK6G,gBAErCC,EAAe,EAAKC,uBAAuBR,EAAQG,GACnDM,EAAgB,EAAKD,uBAAuBJ,EAAeC,IAE3C,IAAjBE,IACC,EAAKG,mBAAmBjH,EAAKsG,aAC7B,EAAKY,cAAc,gBAChB,mBAAoBlH,IACnB,EAAKgB,SAAS,CAAC,eAAiBhB,EAAKrD,iBACrC0D,QAAQC,IAAIN,EAAKrD,mBAIJ,IAAlBqK,GACC,EAAKG,2BAA2BnH,EAAK6G,mBAMxC1G,OAAM,YAAY,IAAVC,EAAS,EAATA,IACLC,QAAQC,IAAI,kBAAkBF,Q,oCAK5BkF,GAKN,OAJI1E,KAAKwG,OAELxG,KAAKwG,MAAMC,OAEP/B,GACJ,IAAI,eAEA1E,KAAK9E,MAAMC,UAAUC,aAAasL,U,wCAOhClB,GAAS,IAAD,OACtBxF,KAAKI,SAAS,CAACqF,SAAS,IAExB5G,IAAM,CACFC,OAAO,MACPC,IAAI,4CAA4CC,EAAOC,OAAO,sCAAsCuG,EACpGtG,aAAa,SACdC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAEJ,UAAWA,EAEVK,QAAQC,IAAIN,EAAK5C,MAAM,IAAI4C,EAAKmD,WAEhC,EAAKoE,cAAcvH,EAAKE,KAAK,IAGjC,EAAKc,SAAS,CACV/D,aAAa,OAIhBkD,OAAM,YAAY,IAAVC,EAAS,EAATA,IACLC,QAAQC,IAAI,kBAAkBF,Q,oCAM5BgG,EAAQoB,GAElB/H,IAAM,kDAAkDG,EAAOC,OAAO,eAAeuG,EACjF,CACA1G,OAAQ,OACJqD,QAAS,CAAE,eAAgB,qCAC/B/C,KAAM,CACFyH,WAAYD,GAEhB1H,aAAa,SAEZC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACF,UAAWA,GACVK,QAAQC,IAAIN,EAAK5C,MAAM,IAAI4C,EAAKmD,cAGvChD,OAAM,YAAY,IAAVC,EAAS,EAATA,IACLC,QAAQC,IAAI,6GAAkCF,Q,8BAIlDsB,GAAY,IAAD,OAATgG,EAAS,uDAAJ,IAGLC,EAAS/G,KAAK9E,MAAMwB,KAAK+E,OAC/B,GAAS,KAANqF,EAEC,GAAGC,GAAQ,EAAG,CAEV/G,KAAK9E,MAAMwB,KAAKsK,KAAKlG,GACrB,IAAMmG,EAAYF,EAClB/G,KAAK9E,MAAMwB,KAAKuK,GAAWtF,MAAQ,EACnC3B,KAAKkH,oBAAoB,OACxB,CAED,IAAIC,GAAQ,EAYZ,GAVAnH,KAAK9E,MAAMwB,KAAK/B,KAAI,SAACyM,EAAatM,GAC1BsM,EAAaC,aAAevG,EAAEuG,YAAcD,EAAaE,eAAexG,EAAEwG,eAE1E,EAAKpM,MAAMwB,KAAK5B,GAAK6G,MAAQ,EAAKzG,MAAMwB,KAAK5B,GAAK6G,MAAQ,EAC1D4F,GAAgD,EAAKrM,MAAMwB,KAAK5B,GAAK6G,MACrEwF,GAAO,OAKF,IAAVA,EAAe,CAEdnH,KAAK9E,MAAMwB,KAAKsK,KAAKlG,GACrB,IAAMmG,EAAYF,EAClB/G,KAAK9E,MAAMwB,KAAKuK,GAAWtF,MAAQ,EACnC4F,UAMR,GAAGR,GAAQ,OAEN,CACGI,GAAQ,EACZnH,KAAK9E,MAAMwB,KAAK/B,KAAI,SAACyM,EAAatM,GAC1BsM,EAAaC,aAAevG,EAAEuG,YAAcD,EAAaE,eAAexG,EAAEwG,eAEtE,EAAKpM,MAAMwB,KAAK5B,GAAK6G,OAAO,EAE5B,EAAKzG,MAAMwB,KAAK8K,OAAO1M,EAAK,IAE5B,EAAKI,MAAMwB,KAAK5B,GAAK6G,MAAQ,EAAKzG,MAAMwB,KAAK5B,GAAK6G,MAAQ,EAC1D4F,GAAgD,EAAKrM,MAAMwB,KAAK5B,GAAK6G,MACrEwF,GAAO,OAS3B,IAAII,EAAyB,EAC7BvH,KAAK9E,MAAMwB,KAAK/B,KAAI,SAACyG,GACpBmG,GAAgDnG,EAAIO,SAErD3B,KAAKkH,oBAAoBK,GACzB,IAAIE,EAAgBC,KAAKC,UAAU/B,KAAKC,UAAU7F,KAAK9E,MAAMwB,QAE7DsD,KAAK4H,cAAc5H,KAAK9E,MAAMoB,KAAK2D,GAAGwH,K,oCAG5BxH,GAAqB,IAAlBH,EAAiB,uDAAV,IAAI8B,EAAM,uCACxBmF,EAAS/G,KAAK9E,MAAMc,kBAAkByF,OAC5C,OAAO3B,GACH,IAAK,IACEiH,GAAQ,EACP/G,KAAK9E,MAAMc,kBAAkBiE,GAAM,CAAC,MAAQ,EAAE,MAAQ2B,GAEnD3B,KAAMD,KAAK9E,MAAMc,kBAChBgE,KAAK9E,MAAMc,kBAAkBiE,GAAI0B,QAEjC3B,KAAK9E,MAAMc,kBAAkBiE,GAAM,CAAC,MAAQ,EAAE,MAAQ2B,GAG9D,MACJ,IAAK,IACEmF,GAAQ,GAGJ9G,KAAMD,KAAK9E,MAAMc,oBAC6B,GAA1CgE,KAAK9E,MAAMc,kBAAkBiE,GAAI0B,aAEzB3B,KAAK9E,MAAMc,kBAAkBiE,GAEpCD,KAAK9E,MAAMc,kBAAkBiE,GAAI0B,SAUrD,OAJAlC,QAAQC,IAAIM,KAAK9E,MAAMc,mBAEvBgE,KAAKkH,oBAAoB,GAAE,KAEtBjH,KAAMD,KAAK9E,MAAMc,oBAAsBgE,KAAK9E,MAAMc,kBAAkBiE,GAAI0B,OAAQ,GACjF3B,KAAKI,SAAS,CAAC,gBAAiB,IACzB,IAEPJ,KAAKI,SAAS,CAAC,gBAAiB,IACzBJ,KAAK9E,MAAMc,kBAAkBiE,GAAI0B,S,0CAU5C,IAAI4F,EAAyB,EAC7BvH,KAAK9E,MAAMwB,KAAK/B,KAAI,SAACyG,GAChBmG,GAAgDnG,EAAIO,SAGzD3B,KAAKkH,oBAAoBK,K,sCAGbzG,GACZd,KAAKI,SAAS,CAACpD,oBAAoB8D,M,uCAItBA,GACbd,KAAKI,SAAS,CAAC5B,cAAcsC,M,wCAIfA,GACL,QAANA,IACCA,EAAI,GAERd,KAAKI,SAAS,CAACtD,eAAegE,M,0CAKdA,GAChBd,KAAK9E,MAAM6B,iBAAmB+D,I,+BAIzBA,GACLd,KAAKI,SAAS,CAAC9C,YAAYwD,M,yCAGZ4D,GACf1E,KAAKI,SAAS,CAACzE,gBAAgB+I,EAC3BtI,kBAAkB,uB,uCAGTsI,GAEb1E,KAAKI,SAAS,CAACxE,cAAc8I,M,0CAK/B,IAAMmD,EAAa7H,KAAKzF,iBAAiBuN,OAAOC,SAASC,MAGnDC,EAAmB,GADZH,OAAOI,OAAO3E,OAEzB9D,QAAQC,IAAI,sEAAeuI,GAE3BrE,IAAQuE,KAAK,uBAAwB,CAAC,OAAUF,IAE7C,qBAAsBJ,IACrB7H,KAAK9E,MAAMgB,gBAAiB,EAC5B8D,KAAKoI,WAAW,oB,iCAKb1D,GACPhB,WAAW,WACPjE,QAAQC,IAAI,gJACZM,KAAKI,SAAS,CAACjE,YAAYuI,IAC3Bd,IAAQuE,KAAK,sBAAuB,CAAC,SAAY,WACjDnI,KAAKI,SAAS,CAAClE,gBAAe,KAChC0C,KAAKoB,MAAO,O,+BAGP,IAAD,OACAqI,EAAcrI,KAAKzF,iBAAiBuN,OAAOC,SAASO,QACvCtI,KAAKzF,iBAAiBuN,OAAOC,SAASC,MAMtDhI,KAAK9E,MAAMW,YAIe,IAA1BmE,KAAK9E,MAAMW,aACVmE,KAAK9E,MAAMW,WAAawM,GAM5B,IAAME,EACF,kBAAC,IAAD,CAAWjL,YAAa0C,KAAK9E,MAAMoC,aAC/B,kBAAC,IAAD,CACI2C,GAAG,mBACHuI,QAAS,kBAAM,EAAKC,SAAS,OAC7BC,OACI,kBAAC,IAAD,CACIC,MAAO,kBAAC,IAAD,CAAc9H,QAAS,WAAM,EAAK4H,SAAS,QAA3C,yCADX,mFAOJG,MAAM,oGACNC,qBAAqB,OACrBC,QAAQ,GACRC,QAAS,CAAC,CACNH,MAAO,GACP9I,KAAM,UACNY,OAAQ,WACJ,EAAK+H,SAAS,UAIrBzI,KAAK9E,MAAMqC,oBAGhB,kBAAC,IAAD,CACI0C,GAAG,oBACHuI,QAAS,kBAAM,EAAKC,SAAS,OAC7BC,OACI,kBAAC,IAAD,CACIC,MAAO,kBAAC,IAAD,CAAc9H,QAAS,WAAM,EAAK4H,SAAS,QAA3C,yCADX,iHAOJG,MAAM,4HACNC,qBAAqB,OACrBC,QAAQ,GACRC,QAAS,CAAC,CACNH,MAAO,GACP9I,KAAM,UACNY,OAAQ,WACJ,EAAK+H,SAAS,UAIrBzI,KAAK9E,MAAMsC,sBAKlBwL,EAASC,cAEf,GAAoC,IAAjCjJ,KAAK9E,MAAMM,mBAA4D,OAAjCwE,KAAK9E,MAAMM,kBAChD,IAAI0N,EAAkB,QAElBA,EAAkBlJ,KAAK9E,MAAMM,kBAGrC,OACI,kBAAC,IAAD,CAAMW,YAAa6D,KAAK9E,MAAMiB,YAAagN,OACvC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACItI,QAASb,KAAKrB,cACdyK,SAAqC,YAA3BpJ,KAAK9E,MAAMiB,YACrBkN,aAAW,UACXC,KAAK,8CACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CAAYpG,MAAO,CAAC,QAAU,QAC1BrC,QAASb,KAAKrB,cACdyK,SAAqC,aAA3BpJ,KAAK9E,MAAMiB,YACrBkN,aAAW,WACXC,KAAK,kCACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CACIzI,QAASb,KAAKrB,cACdyK,SAAqC,SAA3BpJ,KAAK9E,MAAMiB,YACrBkN,aAAW,OACXE,MAAOvJ,KAAK9E,MAAMyB,iBAClB2M,KAAK,8CACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CACIzI,QAASb,KAAKrB,cACdyK,SAAqC,kBAA3BpJ,KAAK9E,MAAMiB,YACrBkN,aAAW,gBACXE,MAAOL,EACPI,KAAK,sEACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CACIzI,QAASb,KAAKrB,cACdyK,SAAqC,SAA3BpJ,KAAK9E,MAAMiB,YACrBkN,aAAW,OACXC,KAAK,8CACR,kBAAC,IAAD,SAGL,kBAAC,IAAD,CAAMrJ,GAAG,eAAeuJ,YAAY,YAAYd,QAAQ,GACpD,kBAAC,IAAD,CAAOzI,GAAG,aAELD,KAAKyJ,uBAKd,kBAAC,IAAD,CAAMxJ,GAAG,gBAAgBuJ,YAAaxJ,KAAK9E,MAAMkB,mBAC7C,kBAAC,IAAD,CAAO6D,GAAG,iBACN,kBAAC,IAAD,CACIyJ,MAAM,SADV,2DAKA,kBAAC,IAAD,CACIC,SAAU3J,KAAK9E,MAAMoB,KACrBsN,iBAAkB5J,KAAK4J,iBAAiBhL,KAAKoB,SAGrD,kBAAC,IAAD,CAAOC,GAAG,sBACN,kBAAC,IAAD,CACIyJ,MAAM,QACNG,KAAM,kBAAC,IAAD,CAAchJ,QAAS,kBAAM,EAAKT,SAAS,CAAChE,kBAAmB,oBAAoB4M,IAAWc,IAChG,kBAAC,IAAD,MAAuB,kBAAC,IAAD,OAC3BC,MAAO,kBAAC,IAAD,CAAclJ,QAAS,kBAAM,EAAKT,SAAS,CAAChE,kBAAmB,oBAA/D,mCAEN4D,KAAK9E,MAAMO,kBAEhB,kBAAC,IAAD,CACIkO,SAAU3J,KAAK9E,MAAMoB,KACrBZ,aAAcsE,KAAK9E,MAAMQ,aACzBsO,mBAAoBhK,KAAKgK,mBAAmBpL,KAAKoB,MACjDiK,iBAAkBjK,KAAKiK,iBAAiBrL,KAAKoB,SAGrD,kBAAC,IAAD,CAAOC,GAAG,oBACN,kBAAC,IAAD,CACIyJ,MAAM,QACNG,KAAM,kBAAC,IAAD,CAAchJ,QAAS,kBAAM,EAAKT,SAAS,CAAChE,kBAAmB,yBAAyB4M,IAAWc,IACrG,kBAAC,IAAD,MAAuB,kBAAC,IAAD,OAC3BC,MAAO,kBAAC,IAAD,CAAclJ,QAAS,kBAAM,EAAKT,SAAS,CAAChE,kBAAmB,yBAA/D,mCAEN,wCAAW4D,KAAK9E,MAAMS,iBAE3B,kBAAC,IAAD,CACIuO,cAAelK,KAAK9E,MAAMS,gBAC1BwO,WAAYnK,KAAK9E,MAAMU,cAAcoE,KAAK9E,MAAMS,qBAO5D,kBAAC,IAAD,CAAMsE,GAAG,UAAUuJ,YAAY,UAAUd,QAAQ,GAC7C,kBAAC,IAAD,CAAOzI,GAAG,WAGFD,KAAK9E,MAAMgB,eAEP,kBAAC,IAAD,CAAgBkO,QAASpK,KAAKoK,QAAQxL,KAAKoB,MAAOqK,aAAcrK,KAAK9E,MAAMwB,KAAM4N,cAAetK,KAAK9E,MAAMY,SAAUyO,aAAcvK,KAAKwK,gBAAgB5L,KAAKoB,MAAOqI,YAAaA,IAEjL,kBAAC,IAAD,QAIhB,kBAAC,IAAD,CAAMpI,GAAG,WAAWuJ,YAAY,YAC5B,kBAAC,IAAD,CAAOvJ,GAAG,YACN,kBAAC,IAAD,oFAGR,kBAAC,IAAD,CAAMA,GAAG,OAAOuJ,YAAY,OAAOjB,MAAOA,GACtC,kBAAC,IAAD,CAAOtI,GAAG,OAAOiD,MAAO,CAAC,cAAgB,SACrC,kBAAC,IAAD,CAAawG,MAAM,QACNe,UAAU,GADvB,8CAKA,yBAAK3P,IAAI,YAAYoI,MAAO,CAAC,cAAgB,SAEzC,kBAAC,IAAD,CACIwH,YAAa1K,KAAK9E,MAAMwB,KACxBX,eAAgBiE,KAAK9E,MAAMa,eAC3BC,kBAAmBgE,KAAK9E,MAAMc,kBAC9B2O,cAAe3K,KAAK2K,cAAc/L,KAAKoB,MACvC/D,eAAgB+D,KAAK9E,MAAMe,eAC3B2O,sBACI,CACA,KAAQ5K,KAAK9E,MAAM0B,WACnB,IAAOoD,KAAK9E,MAAM2B,gBAItBuN,QAASpK,KAAKoK,QAAQxL,KAAKoB,MAC3BzD,eAAgByD,KAAK9E,MAAMqB,eAC3BsO,SAAU7K,KAAK9E,MAAMoB,KACrB+D,kBAAmBL,KAAKK,kBAAkBzB,KAAKoB,MAE/ClD,eAAgBkD,KAAK9E,MAAM4B,eAC3BgO,kBAAmB9K,KAAK8K,kBAAkBlM,KAAKoB,MAE/CjD,iBAAkBiD,KAAK9E,MAAM6B,iBAC7BgO,oBAAqB/K,KAAK+K,oBAAoBnM,KAAKoB,MAEnDhD,oBAAqBgD,KAAK9E,MAAM8B,oBAChCgO,gBAAiBhL,KAAKgL,gBAAgBpM,KAAKoB,MAE3C/C,WAAY+C,KAAK9E,MAAM+B,WACvBgO,WAAYjL,KAAKiL,WAAWrM,KAAKoB,MAEjC7C,YAAa6C,KAAK9E,MAAMiC,YAExBC,WAAY4C,KAAK9E,MAAMkC,WAEvB8N,UAAWlL,KAAKI,SAASxB,KAAKoB,MAC9BmL,qBAAsBnL,KAAKoL,yBAAyBxM,KAAKoB,MACzDqL,kCAAmCrL,KAAKqL,kCAAkCzM,KAAKoB,MAE/E3C,QAAS2C,KAAK9E,MAAMmC,QAEpBiO,UAAWtL,KAAKyI,SAAS7J,KAAKoB,MAC9BuL,WAAYvL,KAAKyI,SAAS7J,KAAKoB,KAAK,MAEpCwL,oBACI,CACIhN,cAAcwB,KAAK9E,MAAMsD,cACzBiN,iBAAiBzL,KAAKyL,iBAAiB7M,KAAKoB,MAE5CvB,mBAAmBuB,KAAK9E,MAAMuD,mBAC9BC,mBAAmBsB,KAAK9E,MAAMwD,mBAE9Bf,cAAcqC,KAAK9E,MAAMyC,cACzBC,YAAYoC,KAAK9E,MAAM0C,YACvBC,mBAAmBmC,KAAK9E,MAAM2C,mBAG9BC,gBAAgBkC,KAAK9E,MAAM4C,gBAE3BC,kBAAkBiC,KAAK9E,MAAM6C,kBAG7BC,sBAAsBgC,KAAK9E,MAAM8C,sBAEjCC,qBAAqB+B,KAAK9E,MAAM+C,qBAEhCjB,oBAAoBgD,KAAK9E,MAAM8B,oBAC/BD,iBAAiBiD,KAAK9E,MAAM6B,iBAC5BD,eAAekD,KAAK9E,MAAM4B,eAE1BW,kBAAkBuC,KAAK9E,MAAMuC,kBAC7BC,oBAAqBsC,KAAK9E,MAAMwC,oBAEhCgO,SAAS1L,KAAK9E,MAAM+B,WACpBC,QAAQ8C,KAAK9E,MAAMgC,QACnBC,YAAY6C,KAAK9E,MAAMiC,YACvBT,KAAKsD,KAAK9E,MAAMwB,KAChBV,kBAAkBgE,KAAK9E,MAAMc,mBAKrC2P,kBAAmB3L,KAAK2L,kBAAkB/M,KAAKoB,QAIvD,yBAAKkD,MAAO,CAAC,MAAQ,aAI7B,kBAAC,IAAD,CAAMjD,GAAG,gBAAgBuJ,YAAY,iBACjC,kBAAC,IAAD,CAAOvJ,GAAG,iBACN,kBAAC,IAAD,2EACCD,KAAK4L,wBAGd,kBAAC,IAAD,CAAM3L,GAAG,OAAOuJ,YAAY,QACxB,kBAAC,IAAD,CAAOvJ,GAAG,QACN,kBAAC,IAAD,mDACA,kBAAC,IAAD,CACIA,GAAG,OACH4L,GAAG,SACHC,UAAW9L,KAAK9E,MAAMqB,eACtBwP,sBAAuB/L,KAAK+L,sBAAsBnN,KAAKoB,MACvDgM,qBAAsBhM,KAAKgM,qBAAqBpN,KAAKoB,e,GAxnC/DiM,IAAMC,WAioCT7R,Q,sNC3pCT8R,E,YACF,WAAY7R,GAAQ,IAAD,8BACf,4CAAMA,KACDY,MAAQ,CACTkR,YAAW,GAHA,E,4EAUf,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACAC,OAAQ,kBAAC,IAAD,MACRxL,QAASb,KAAK1F,MAAMsP,iBAAiBhL,KAAKoB,KAAK,kFAAiB,QAE5D,0BAAMkD,MAAO,CAACoJ,MAAM,YAApB,oFAEJ,kBAAC,IAAD,CACAD,OAAQ,kBAAC,IAAD,MACRxL,QAASb,KAAK1F,MAAMsP,iBAAiBhL,KAAKoB,KAAK,0GAAqB,QAEhE,0BAAMkD,MAAO,CAACoJ,MAAM,YAApB,4GAEJ,kBAAC,IAAD,CACAD,OAAQ,kBAAC,IAAD,MACRxL,QAASb,KAAK1F,MAAMsP,iBAAiBhL,KAAKoB,KAAK,oGAAoB,WAE/D,0BAAMkD,MAAO,CAACoJ,MAAM,YAApB,yG,+BAQZ,OACItM,KAAK9E,MAAMkR,WAEP,kBAAC,IAAD,MAEApM,KAAKuM,mB,GA1CON,IAAMC,WAgDnBC,O,mMClDTK,E,YACF,WAAYlS,GAAQ,IAAD,8BACf,4CAAMA,KACDY,MAAQ,CACTU,cAAc,GACdwQ,YAAW,GAJA,E,iFASfpM,KAAKyM,uB,2CAGY,IAAD,OAChBzM,KAAKI,SAAS,CAACgM,YAAW,IAC1BvN,IAAM,CACFC,OAAO,MACPC,IAAI,sDAAsDC,EAAOC,OAAO,aAAae,KAAK1F,MAAMqP,SAAS1J,GACzGf,aAAa,SAEZC,MAAK,YAAW,IAATC,EAAQ,EAARA,KACD,UAAWA,EACV,EAAKgB,SAAS,CAACsM,WAAW,KAG1B,EAAKtM,SAAS,CAACxE,cAAcwD,EAAKE,OAClC,EAAKhF,MAAM2P,iBAAiB7K,EAAKE,OAErC,EAAKc,SAAS,CAACgM,YAAW,OAE7B7M,OAAM,SAACC,GACJC,QAAQC,IAAI,yIAA2BF,Q,kCAKvCmN,GAKR,OAJUpL,OAAOC,KAAKmL,GAAIC,aAAY,SAAUC,EAAKC,EAAMC,EAAOC,GAE9D,OAAcH,EAAII,OAAOH,KAC1B,M,qCAIoB,IAAD,OAAbhN,EAAa,uDAAN,MACZoN,EAAa,EACbC,EAAQ,GACZ,OAAOrN,GACH,IAAK,MAAOoN,EAAa,EAAGC,EAAS,kBAAC,IAAD,MAAkB,MACvD,IAAK,SAAUD,EAAa,EAAIC,EAAS,kBAAC,IAAD,MAAmB,MAC5D,IAAK,MAAOD,EAAa,EAAIC,EAAS,kBAAC,IAAD,MAAuB,MAC7D,QAAQD,EAAY,EAKxB,IAAIE,EAAc,EAEZC,EAAYrN,KAAKsN,YAAYtN,KAAK9E,MAAMU,eAAejB,KAAI,SAAC4S,EAAUC,GAExE,IAAIC,EAAe,EAAKvS,MAAMU,cAAc2R,GAExCG,GAAU,EAsBd,GAjBQA,EAFU,IAAfR,EACIO,EAAaE,cAAgBT,GAA2C,GAA7BO,EAAaE,aAMxDF,EAAaE,cAAgBT,EAQJ,KAA7BO,EAAaG,eACZF,GAAU,IAGC,IAAZA,EAAiB,CAChBN,IAEA,IAAIS,EAAc,iEAAa,2BAAIJ,EAAaK,UAAjB,WAE/B,OACI,kBAAC,IAAD,CAAMhT,IAAK,UAAUyS,EACflB,OAAQc,EACRY,YAAa,8BAAON,EAAaO,KAApB,IAA0B,2BAAIP,EAAaQ,MAA3C,MAAwDJ,GACrEhN,QAAS,EAAKvG,MAAM0P,mBAAmBpL,KAAK,EAAK6O,EAAaS,WAEhE,mEAAWT,EAAaS,UAL5B,IAK0C,0BAAMhL,MAAO,CAACiL,SAAS,QAAQC,WAAW,KAAK9B,MAAM,YAArD,mEAStD,OAAGc,GAAc,EAET,kBAAC,IAAD,CAAMtS,IAAK,eAAX,qGAODuS,I,oCAMP,OACI,kBAAC,IAAD,CAAOvS,IAAI,eACJ8N,MAAM,mFAER5I,KAAKqO,aAAa,U,oCAO3B,OACI,kBAAC,IAAD,CAAOvT,IAAI,eACJ8N,MAAM,2GAER5I,KAAKqO,aAAa,U,0CAM3B,OACI,kBAAC,IAAD,CAAOvT,IAAI,kBACJ8N,MAAM,qGAER5I,KAAKqO,aAAa,a,yCAO3B,IAAIC,EAAU,GACd,OAAOtO,KAAK1F,MAAMoB,cACd,IAAI,MAAO4S,EAAUtO,KAAKuO,cAAc,MACxC,IAAI,MAAOD,EAAUtO,KAAKwO,cAAc,MACxC,IAAI,SAAUF,EAAUtO,KAAKyO,oBAGjC,OAAOH,I,qCAIP,OACItO,KAAK0O,qB,+BAMT,OAAO,iCACC1O,KAAK9E,MAAMkR,WAEP,kBAAC,IAAD,MAEApM,KAAKuM,oB,GA9KGN,IAAMC,WAsLnBM,Q,4QCjLTmC,E,YACF,WAAYrU,GAAQ,IAAD,8BACf,4CAAMA,KACDY,MAAQ,GAFE,E,6HAWAwJ,GACf,IAAIkK,EAAe,mDAEnB,OAAOlK,GACH,IAAI,IAAKkK,EAAe,uCAAU,MAClC,IAAI,IAAKA,EAAe,mDAAY,MACpC,IAAI,IAAKA,EAAe,6CAAW,MACnC,IAAI,IAAKA,EAAe,uCAE5B,OAAOA,I,yCAGQC,EAAUC,GACzB,OAAkB,OAAfA,EAEQD,EAEAC,EAAWpM,S,wCAIRgC,GACd,IAEIqK,EAAgB,kBAAC,IAAD,MAEpB,OAAOrK,GACH,IAAI,IAAc,kBAAC,IAAD,MAAkB,MACpC,IAAI,IAAc,kBAAC,IAAD,MAAuB,MACzC,IAAI,IAAc,kBAAC,IAAD,MAAmB,MACrC,IAAI,IAAc,kBAAC,IAAD,MAEtB,OAAOqK,I,2CAIUC,GACjB,MAA8B,SAA3BA,EAAMC,UAAUvM,OACR,GAGH,kBAAC,IAAD,CAAOkG,MAAM,oKACT,kBAAC,IAAD,CACIyD,OAAQ,kBAAC,IAAD,OAEP2C,EAAMC,UAAUC,mB,iCAO1B5F,EAAKxJ,GACZ,OAAOA,GACH,IAAI,SACA,IAAInF,EAAM,CACN,QAAS,IACT,OAAQ,IACR,OAAQ,IACR,SAAU,IACV,SAAU,KAEd,MACJ,IAAI,SACIA,EAAM,CACN,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,UAKjB,OAAO2O,EAAK6F,QAAQ,YAAY,SAASC,GAAK,OAAOzU,EAAIyU,Q,uCAG5C9F,GACb,OAAOA,EACF6F,QAAQ,SAAU,KAClBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,UAAW,KACnBA,QAAQ,UAAW,O,0CAIRH,GAAO,IAAD,OAEtB,GAAY,IAATA,GAAyB,OAAVA,EACd,OAAQ,kBAAC,IAAD,CAAOpG,MAAM,6EACjB,kBAAC,IAAD,iHAGR,IAAMzD,EAAc6J,EAAMrU,KAAI,SAACyE,EAAKtE,GAEhC,GAAGsE,EAAKiQ,YAAcjQ,EAAKkQ,cACvB,IAAIC,EAAc,8BAAM,2BAAInQ,EAAKkQ,cAAT,WAAN,IAAoC,2BAAIlQ,EAAKiQ,WAAT,WAApC,UAEdE,EAAc,8BAAM,2BAAInQ,EAAKiQ,WAAT,WAAN,KAGtB,GAA2B,KAAxBjQ,EAAKoQ,gBACJ,IAAIC,EAAW,oEAAYrQ,EAAKoQ,gBAAjB,gBAEXC,EAAW,GAGnB,OACI,kBAAC,IAAD,CAAM3U,IAAK,gBAAgBA,EACvBiT,YAAa,0BAAMjT,IAAK,kBAAkBA,GAAMyU,EAAnC,MAAmDnQ,EAAKuC,MAAxD,kBAAmE,2BAAI8N,IACpFC,UAAW,kBAAC,IAAD,YAAgBtQ,EAAKuQ,KAArB,gBAEX,0BAAM7U,IAAK,iBAAiBA,GAAM,EAAK8U,iBAAiBxQ,EAAKyQ,oBAIzE,OAAQ,kBAAC,IAAD,CAAOjH,MAAM,6EAChBzD,K,6CAIc6J,GAAO,IAAD,OAEzB,GAAY,IAATA,GAAyB,OAAVA,EACd,MAAQ,GAGZ,IAAM7J,EAAc6J,EAAMrU,KAAI,SAACyE,EAAKtE,GAEhC,IAAIyU,EAAc,8BAAM,2BAAInQ,EAAK0Q,cAAT,WAAN,KAGlB,OACI,kBAAC,IAAD,CAAMhV,IAAK,oBAAoBA,EAC3BiT,YAAa,0BAAMjT,IAAK,sBAAsBA,GAAMyU,EAAvC,MAAuDnQ,EAAKuC,MAA5D,kBACb+N,UAAW,kBAAC,IAAD,YAAgBtQ,EAAKuQ,KAArB,gBAEX,0BAAM7U,IAAK,qBAAqBA,GAAM,EAAK8U,iBAAiBxQ,EAAK2Q,oBAK7E,MAAkB,IAAf5K,GAAoC,OAAfA,EACZ,GAGJ,kBAAC,IAAD,CAAOyD,MAAM,0FAChBzD,K,8CAKe6J,GAAO,IAAD,OAE1B,GAAY,IAATA,GAAyB,OAAVA,EACd,MAAQ,GAGZ,IAAM7J,EAAc6J,EAAMrU,KAAI,SAACyE,EAAKtE,GAEhC,IAAIyU,EAAc,8BAAM,2BAAInQ,EAAK0Q,cAAT,WAAN,KAGlB,OACI,kBAAC,IAAD,CAAMhV,IAAK,qBAAqBA,EAC5BiT,YAAa,0BAAMjT,IAAK,uBAAuBA,GAAMyU,EAAxC,MAAwDnQ,EAAKuC,MAA7D,kBACb+N,UAAW,kBAAC,IAAD,YAAgBtQ,EAAKuQ,KAArB,gBAEX,0BAAM7U,IAAK,sBAAsBA,GAAM,EAAK8U,iBAAiBxQ,EAAK4Q,yBAK9E,MAAkB,IAAf7K,GAAoC,OAAfA,EACZ,GAGJ,kBAAC,IAAD,CAAOyD,MAAM,8CAChBzD,K,2CAKY6J,GAEjB,GAAmC,oDAAhCA,EAAMiB,SAASC,cACd,IAAIC,EAAUnB,EAAMiB,SAASG,eACzBC,EAAYrB,EAAMiB,SAASK,eAC3BC,EAAU,wDAEVJ,EAAUnB,EAAMwB,UAAUC,eAC1BJ,EAAY,MACZE,EAAU,yDAGd,OAAQ,kBAAC,IAAD,CAAO3H,MAAM,+FACjB,kBAAC,IAAD,CAAM9N,IAAK,aACPiT,YAAaoC,EACbT,UAAW,kBAAC,IAAD,aAAiBW,EAAjB,iBAEVE,M,sCAMDvB,GACZ,GAAyB,UAAtBA,EAAM0B,aACL,IAAIC,EAAY,kBAAC,IAAD,CAAO/H,MAAM,oDACzB,kBAAC,IAAD,KAAK,2BAAIoG,EAAM4B,YAAf,IAAgC5B,EAAM6B,WAAWjI,aAGjD+H,EAAY,GAGpB,OAAOA,I,yCAGQ3B,GAMf,OALiB,6BACT,kBAAC,IAAD,CAAM3C,OAAQ,kBAAC,IAAD,OAAd,oFAAgD2C,EAAM8B,WACtD,kBAAC,IAAD,CAAOzE,OAAQ,kBAAC,IAAD,OAAf,gGAAmD2C,EAAM+B,a,iCAM1D/B,GAEP,MAAY,IAATA,GAAyB,OAAVA,EACN,GAKR,kBAAC,IAAD,CAAOpG,MAAM,sEACT,kBAAC,IAAD,KAAMoG,M,gCAKRA,GAYN,MAVY,IAATA,GAAyB,OAAVA,IACdA,EAAQ,KAUR,kBAAC,IAAD,CACI3C,OAAQ,kBAAC,IAAD,OADZ,+CAGc2C,K,+BAOlB,IAAMA,EAAQhP,KAAK1F,MAAM6P,WACnB6G,EAAahR,KAAKiR,kBAAkBjC,EAAMrB,cAC1CuD,EAAa,2GAEnB,OACI,yBAAKpW,IAAI,kBACL,kBAAC,IAAD,CACI8N,MAAOsI,GAEP,kBAAC,IAAD,CACI7E,OAAQ2E,GAEPhR,KAAKmR,mBAAmBnR,KAAKoR,mBAAmBpC,EAAMrB,cAAcqB,EAAMqC,oBAE/E,kBAAC,IAAD,CACIhF,OAAQ,kBAAC,IAAD,OAEP2C,EAAMhB,KAHX,IAGkBgB,EAAMf,MAExB,kBAAC,IAAD,CACI5B,OAAQ,kBAAC,IAAD,OAEP2C,EAAMsC,QAAQC,UAEnB,kBAAC,IAAD,CACIlF,OAAQ,kBAAC,IAAD,OAEP2C,EAAMlB,UAHX,WAKC9N,KAAKwR,UAAUxC,EAAMyC,QACrBzR,KAAK0R,mBAAmB1C,IAExBhP,KAAK2R,qBAAqB3C,GAC9BhP,KAAK4R,gBAAgB5C,EAAM6C,OAC3B7R,KAAK8R,oBAAoB9C,EAAM+C,aAC/B/R,KAAKgS,uBAAuBhD,EAAMiD,gBAClCjS,KAAKkS,wBAAwBlD,EAAMmD,iBACnCnS,KAAKoS,qBAAqBpD,GAC1BhP,KAAKqS,WAAWrD,EAAMsD,c,GA3TTrG,IAAMC,WAkUrByC,O,6JCvUTrT,GAHS2N,c,YAKX,WAAa3O,GACZ,IAAD,8BACI,4CAAMA,KACDY,MAAQ,CACTsO,YAAY,OACZ+I,OAAO,MAJf,E,0EASazR,GACTd,KAAKI,SAAS,CAACoJ,YAAa1I,M,mCAGnB,IAAD,OACR,OACI,kBAAC,IAAD,CAAaN,WAAS,EACTC,KAAM,kBAAC,IAAD,MACNC,OAAQ,kBAAC,IAAD,CAAQC,KAAK,IAAIC,MAAM,WAAWC,QAAS,WAAK,EAAKvG,MAAM8F,SAAS,CAACjE,YAAa,cAAlF,sDAGjB,qHACA,0W,kCAKAwQ,GAKR,OAJUpL,OAAOC,KAAKmL,GAAIC,aAAY,SAAUC,EAAKC,EAAMC,EAAOC,GAE9D,OAAcH,EAAII,OAAOH,KAC1B,M,oCAKOhN,EAAKC,EAASyS,GACb,GAAR1S,GACCE,KAAK1F,MAAM4J,UAAUpE,EAAMC,GAC3BC,KAAK1F,MAAM8J,aAAarE,KAEN,IAAfyS,GACCxS,KAAK1F,MAAM4J,UAAUpE,EAAMC,K,sCAKvBkD,GACZ,OAAW,OAARA,GAAuB,IAAPA,EAAmB,GAE9B,yBAAKD,IAAKC,EAAKC,MAAO,CAACI,MAAM,Y,kCAK7B,IAAD,OAiCP,OA/BmBtD,KAAKsN,YAAYtN,KAAK1F,MAAM2J,WAAWtJ,KAAI,SAAC8X,EAAKxS,GAEhE,GAAgD,KAA7C,EAAK3F,MAAM2J,UAAUwO,GAArB,YACC,IAAInG,EAAQ,UACRkG,GAAa,OAEblG,EAAQ,GACRkG,GAAa,EAGrB,OAAO,kBAAC,IAAD,CACH1X,IAAK,YAAY2X,GAEjB,kBAAC,IAAD,CACIpG,OAAQ,kBAAC,IAAD,CACJnJ,MAAO,CAACoJ,MAAMA,GACdzL,QAAS,WAAO,EAAK6R,cAAc,EAAE,EAAKpY,MAAM2J,UAAUwO,GAArB,gBAA8CD,MAEvFG,aAAc,kBAAC,IAAD,CACV9R,QAAS,WAAO,EAAK6R,cAAc,EAAE,EAAKpY,MAAM2J,UAAUwO,GAArB,gBAA8CD,OAItF,EAAKlY,MAAM2J,UAAUwO,GAArB,OAEJ,EAAKG,gBAAgB,EAAKtY,MAAM2J,UAAUwO,GAArB,KAClB,kBAAC,IAAD,CAAK3X,IAAK,UAAU2X,EAAMI,wBAAyB,CAACC,OAAQ,EAAKxY,MAAM2J,UAAUwO,GAArB,KAAmCtD,QAAQ,MAAO,mB,4CAUxG,IAAD,OACjB,OAAqC,IAAlCnP,KAAK1F,MAAMgE,mBACPiD,OAAOC,KAAKxB,KAAK1F,MAAM2J,WAAWxC,QAAQ,EAClCzB,KAAK+S,aAEL/S,KAAKE,YAIZ,kBAAC,IAAD,CAAaM,WAAS,EACTC,KAAM,kBAAC,IAAD,MACNC,OAAQ,kBAAC,IAAD,CAAQC,KAAK,IAAIC,MAAM,WACfC,QAAS,WAAK,EAAKvG,MAAM0J,cADjC,uHAGRd,MAAO,CAAC8P,UAAU,WAL/B,gP,+BAeR,OACIhT,KAAK4L,0B,GAxHIK,IAAMC,YA+HZ5Q,O,gPC3HT2X,EAAiB,CACnBC,gBAAiB,WAGfC,E,YACF,WAAa7Y,GACZ,IAAD,8BACI,4CAAMA,KACDY,MAAQ,CACTkY,SAAS,CAACC,MAAM,GAAGC,MAAM,IACzBC,cAAa,EACbC,WAAW,GACXC,UAAU,GACVC,wBAAuB,EACvBC,SAAS,EACTC,SAAU,KACVC,mBAAkB,EAClBC,oBAAmB,GAGvB,EAAKC,SAAW,EAAKA,SAASnV,KAAd,gBAdpB,E,iFAoBI,IAA8BwB,GAYO,IAApCJ,KAAK1F,MAAMiC,eAAeC,QAZG4D,EAY8BJ,KAAKI,SAASxB,KAAKoB,MAZ/E,EAAA0E,EAAAC,OAAA,gDACIf,IAAQC,YAAY,yBAAyB,CAAC,KAAO,gDAChD1E,MAAK,SAACC,GAEHgB,EAAS,CAAEgT,SAAS,CAACC,MAAOjU,EAAK4U,mBAEpCzU,OAAM,SAACC,GACJC,QAAQC,IAAI,kBAAkBF,MAP1C,wC,iCAgBiB,IAAD,OAAVsB,EAAU,uDAAN,KACNd,KAAK9E,MAAM0Y,UACf5T,KAAKI,SAAS,CAAEwT,SACR,kBAAC,IAAD,CACIK,OAAO,WACPzL,QAAS,kBAAM,EAAKpI,SAAS,CAAEwT,SAAU,QACzCvH,OAAQ,kBAAC,IAAD,CAAQ1L,KAAM,GAAIuC,MAAO+P,GAAgB,kBAAC,IAAD,CAAaiB,KAAK,UAAU5Q,MAAO,GAAIC,OAAQ,OAE3F,OAAJzC,GAAY,4SACR,OAAJA,GAAYA,O,6CAMN,IAAD,OAElBjC,IAAM,wDAAwDG,EAAOC,OACjE,CACIH,OAAQ,OACRqD,QAAS,CAAE,eAAgB,qCAC3B/C,KAAM,CACF+U,kBAAmBnU,KAAK9E,MAAMkY,SAASC,OAE3CnU,aAAa,SAEhBC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACF,UAAWA,EACVK,QAAQC,IAAIN,EAAK5C,MAAM,IAAI4C,EAAKmD,WAEb,WAAhBnD,EAAKsD,OAEJ,EAAKtC,SAAS,CAACmT,cAAa,IAG5B,EAAKQ,SAAS,wKAIzBxU,OAAM,YAAY,IAAVC,EAAS,EAATA,IACLC,QAAQC,IAAI,yEAA4BF,Q,8CAI5B,IAAD,OAEnBX,IAAM,uDAAuDG,EAAOC,OAChE,CACIH,OAAQ,OACRqD,QAAS,CAAE,eAAgB,qCAC3B/C,KAAM,CACF+U,kBAAmBnU,KAAK9E,MAAMkY,SAASC,MACvCe,iBAAkBpU,KAAK9E,MAAMuY,UAC7BY,SAASrU,KAAK1F,MAAMuQ,SAAS5K,IAEjCf,aAAa,SAEhBC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACF,UAAWA,EACVK,QAAQC,IAAIN,EAAK5C,MAAM,IAAI4C,EAAKmD,WAEb,cAAhBnD,EAAKsD,OAEJ,EAAKpI,MAAM+F,kBAAkB,EAAK/F,MAAMuQ,SAAS5K,IAIjD,EAAK8T,cAIhBxU,OAAM,SAACC,GACJC,QAAQC,IAAI,yEAA4BF,Q,yCAIjC8U,GACftU,KAAKI,SAAS,CAACgT,SAAS,CAACC,MAAOiB,EAAMC,OAAOxZ,W,wCAI/BuZ,GACdtU,KAAKI,SAAS,CAACqT,UAAWa,EAAMC,OAAOxZ,U,sCAG3B+F,GACZd,KAAK1F,MAAM2Q,WAAWnK,EAAEyT,OAAOxZ,S,yCAGhByZ,GACf,IAAIC,EAAezU,KAAK1F,MAAM6C,YAC9B,OAAOqX,GACH,IAAK,IAAKC,GAAgB,EAAG,MAC7B,IAAK,IAAKA,GAAgB,EAAG,MAC7B,QAAShV,QAAQC,IAAI,6EAGtB+U,GAAc,IAAIA,EAAe,GAChB,KAAjBA,IAAsBA,EAAe,GACrCA,EAAc,IAAIA,EAAe,GAEpCzU,KAAK1F,MAAM4Q,UAAU,CAAC/N,YAAasX,M,4CAInC,OACI,kBAAC,IAAD,CAAO7L,MAAM,oFACT,kBAAC,IAAD,CAAK1F,MAAO,CAACwR,QAAS,OAAOC,eAAe,WACxC,kBAAC,IAAD,CAAQhU,KAAK,IAAIH,WAAS,EAAC0C,MAAO,CAAC0R,YAAa,GAAGzR,SAAS,GAAG0R,WAAW,WAAYhU,QAASb,KAAK8U,mBAAmBlW,KAAKoB,KAAK,MAAjI,KACA,kBAAC,IAAD,CAAOF,KAAK,SAASoD,MAAO,CAACC,SAAS,GAAG6P,UAAU,UAAWjY,MAAOiF,KAAK1F,MAAM6C,YAAa4X,SAAS,aACtG,kBAAC,IAAD,CAAQpU,KAAK,IAAIH,WAAS,EAAC0C,MAAO,CAACkL,WAAY,GAAGjL,SAAS,GAAG0R,WAAW,WAAYhU,QAASb,KAAK8U,mBAAmBlW,KAAKoB,KAAK,MAAhI,S,4CAMM,IAAD,OACjB,OAAO,kBAAC,IAAD,KACH,kBAAC,IAAD,MACiC,IAA5BA,KAAK9E,MAAMqY,cAAyB,kBAAC,IAAD,CAAiByB,IAAI,oKAEtD,kBAAC,IAAD,CAAOlV,KAAK,SAASmV,YAAY,OAAOC,SAAUlV,KAAKmV,kBAAkBvW,KAAKoB,QAG9E,kBAAC,IAAD,CAAQY,MAAM,WAAWsC,MAAO,CAAC,WAAa,WACtCrC,QAAS,WAEL,EAAKuU,0BAHjB,sEAQA,kBAAC,IAAD,CAAQxU,MAAM,YAAYsC,MAAO,CAAC,MAAQ,SAAUrC,QAAS,WAAO,EAAKT,SAAS,CAACmT,cAAa,MAAhG,iGAGyB,IAA5BvT,KAAK9E,MAAMqY,cAA0B,kBAAC,IAAD,CAAiByB,IAAI,sJACvD,kBAAC,IAAD,CAAOlV,KAAK,SAASmV,YAAY,cAAcI,aAAcrV,KAAK9E,MAAMkY,SAASC,MAAO6B,SAAUlV,KAAKsV,mBAAmB1W,KAAKoB,QAC/H,kBAAC,IAAD,CAAQY,MAAM,WAAWsC,MAAO,CAAC,WAAa,WACtCrC,QACI,WACI,EAAK0U,yBAHrB,uEAUA,kBAAC,IAAD,CAAQ1U,QAAS,WAAO,EAAKT,SAAS,CAACmT,cAAa,KAAS3S,MAAM,YAAYsC,MAAO,CAAC,MAAQ,UAA/F,oEAGPlD,KAAK9E,MAAM0Y,Y,8CAII,IAAD,OACnB,OAAO,kBAAC,IAAD,CAAK1Q,MAAO,CAACwR,QAAS,OAAO,cAAgB,MAChD,kBAAC,IAAD,CAAQ/T,KAAK,IAAIH,WAAS,EAAC0C,MAAO,CAAC0R,YAAa,GAAIhU,MAA0C,IAAnCZ,KAAK1F,MAAM0C,oBAA4B,YAAc,WAAY6D,QAAS,WAAK,EAAKvG,MAAM0Q,gBAAgB,KAArK,oDACA,kBAAC,IAAD,CAAQrK,KAAO,IAAIH,WAAS,EAACI,MAA0C,IAAnCZ,KAAK1F,MAAM0C,oBAA4B,YAAc,WAAa6D,QAAS,WAAK,EAAKvG,MAAM0Q,gBAAgB,KAA/I,6D,2CAKa,IAAD,OAChB,OAAO,kBAAC,IAAD,CAAK9H,MAAO,CAACwR,QAAS,OAAO,cAAgB,KAAK,WAAa,MAC9D,kBAAC,IAAD,CAAQ/T,KAAK,IAAIH,WAAS,EAAC0C,MAAO,CAAC0R,YAAa,GACxChU,MAAOZ,KAAK1F,MAAMkb,iBAAiBhX,cAAgB,WAAa,YAChEqC,QAAS,WAAK,EAAKvG,MAAMkb,iBAAiB/J,kBAAiB,KAFnE,0DAMA,kBAAC,IAAD,CAAQ9K,KAAO,IAAIH,WAAS,EACpBI,MAAOZ,KAAK1F,MAAMkb,iBAAiBhX,cAAgB,YAAc,WACjEqC,QAAS,WAAK,EAAKvG,MAAMkb,iBAAiB/J,kBAAiB,KAFnE,8D,yCAYR,OACI,kBAAC,IAAD,CACI7C,MAAM,8HAEL5I,KAAKyV,qBAEFzV,KAAK1F,MAAMkb,iBAAiBhX,cAExB,kBAAC,IAAD,CACIkX,aAAc1V,KAAK1F,MAAMkb,iBAAiBxY,sBAG9C,kBAAC,IAAD,CACI2Y,UAAW3V,KAAK1F,MAAMkb,iBACtBtK,UAAWlL,KAAK1F,MAAM4Q,UAAUtM,KAAKoB,MACrClF,IAAI,iB,wCASxB,OACI,6BACKkF,KAAK4V,wBAC8B,IAAnC5V,KAAK1F,MAAM0C,oBACRgD,KAAK6V,iBAEL7V,KAAK8V,mBAER9V,KAAK+V,mBACL/V,KAAKgW,sBACLhW,KAAKiW,yB,2CAMd,OACI,kBAAC,IAAD,CACIxV,KAAM,kBAAC,IAAD,MACNC,QAAQ,GAGR,yLACA,gW,uCAMK,IAAD,OAEZ,OACI,kBAAC,IAAD,CACIwV,UAAU,wBACVtN,MAAM,wFACHmF,YAAa/N,KAAK9E,MAAM2Y,kBACpB,kBAAC,IAAD,CACIlT,KAAK,IACLC,MAAM,YACNsC,MAAO,CAAE2R,WAAY,UAAUvI,MAAM,WAErCzL,QAAS,WACL,EAAKvG,MAAMgR,UAAU,sBAN7B,mFAUA,IAEP,kBAAC,IAAD,CACIT,SAAU7K,KAAK1F,MAAMuQ,SACrB/N,eAAgBkD,KAAK1F,MAAMwC,eAC3BgO,kBAAmB9K,KAAK1F,MAAMwQ,kBAAkBlM,KAAKoB,MACrDmW,UAAWnW,KAAK1F,MAAM6b,UAAUvX,KAAKoB,MACrCoW,qBAAsBpW,KAAKI,SAASxB,KAAKoB,MACzC8T,mBAAoB9T,KAAK9E,MAAM4Y,mBAC/B5I,UAAWlL,KAAK1F,MAAM4Q,UAAUtM,KAAKoB,MACrCmL,qBAAsBnL,KAAK1F,MAAM6Q,qBAAqBvM,KAAKoB,MAE3DqW,WAAYrW,KAAK1F,MAAMgR,UAAU1M,KAAKoB,MACtCuL,WAAYvL,KAAK1F,MAAMiR,WAAW3M,KAAKoB,W,yCAOnD,OACI,kBAAC,IAAD,CAAO4I,MAAM,qGACb,kBAAC,IAAD,CACIiC,SAAU7K,KAAK1F,MAAMuQ,SACrB9N,iBAAkBiD,KAAK1F,MAAMyC,iBAC7BgO,oBAAqB/K,KAAK1F,MAAMyQ,oBAAoBnM,KAAKoB,MACzDqL,kCAAmCrL,KAAK1F,MAAM+Q,kCAAkCzM,KAAKoB,MACrFkL,UAAWlL,KAAK1F,MAAM4Q,UAAUtM,KAAKoB,W,4CAO7C,OACI,kBAAC,IAAD,CAAO4I,MAAM,kHACT,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAU7N,MAAOiF,KAAK1F,MAAM2C,WAAYiY,SAAUlV,KAAKsW,gBAAgB1X,KAAKoB,MAAOiV,YAAY,8F,uCAM1FsB,GACb,OACIA,GAAQ,EAAIvW,KAAKwW,qBAAuBxW,KAAKyW,oB,+BAMjD,OACI,8BACyC,IAApCzW,KAAK1F,MAAMiC,eAAeC,OACvBwD,KAAK0W,uBAG4B,IAApC1W,KAAK1F,MAAMiC,eAAeC,OACvBwD,KAAK2W,iBAAiB3W,KAAK1F,MAAMoQ,YAAYjJ,a,GA5V1CwK,IAAMC,WAsWdiH,Q,0MC/WTyD,E,YACF,WAAYtc,GAAQ,IAAD,8BACf,4CAAMA,KACDY,MAAQ,CACT2b,YAAY,GACZC,eAAe,GACfC,WAAU,EACVC,YAAY,IAND,E,iFAWfhX,KAAKiX,uBACLjX,KAAK1F,MAAM4Q,UAAU,CAAC3N,mBAAoB,kBAAC,IAAD,CAAgB4Y,UAAWnW,KAAK1F,MAAM6b,UAAUvX,KAAKoB,MAAO6K,SAAU7K,KAAK1F,MAAMuQ,SAAUoM,qBAAsBjX,KAAKiX,qBAAqBrY,KAAKoB,MAAO8K,kBAAmB9K,KAAK1F,MAAMwQ,kBAAkBlM,KAAKoB,MAAOuL,WAAYvL,KAAK1F,MAAMiR,WAAW3M,KAAKoB,Y,qCAGzRc,GAEXd,KAAK1F,MAAM4Q,UAAU,CAAC1N,oBAAqB,kBAAC,IAAD,CAAgB0Z,YAAalX,KAAK9E,MAAM2b,YAAY/V,GAAIqV,UAAWnW,KAAK1F,MAAM6b,UAAUvX,KAAKoB,MAAO6K,SAAU7K,KAAK1F,MAAMuQ,SAAUoM,qBAAsBjX,KAAKiX,qBAAqBrY,KAAKoB,MAAO8K,kBAAmB9K,KAAK1F,MAAMwQ,kBAAkBlM,KAAKoB,MAAOuL,WAAYvL,KAAK1F,MAAMiR,WAAW3M,KAAKoB,UAC7UA,KAAK1F,MAAM+b,WAAW,uB,6CAIc,IAAD,OAAlBc,EAAkB,wDACnCtY,IAAM,qDAAqDG,EAAOC,OAC9D,CACIH,OAAQ,OACRqD,QAAS,CAAE,eAAgB,qCAC3B/C,KAAM,CACFgY,UAAWpX,KAAK1F,MAAMuQ,SAAS5K,IAEnCf,aAAa,SAEhBC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACF,UAAWA,GACVK,QAAQC,IAAIN,EAAK5C,MAAM,IAAI4C,EAAKmD,WACd,sBAAfnD,EAAK5C,QACJiD,QAAQC,IAAI,yUACZ,EAAK2X,uBAMT,EAAKjX,SAAS,CAACyW,YAAYzX,EAAKyX,cAChC,EAAKvc,MAAM4Q,UAAU,CAACzN,kBAAkB2B,EAAKyX,cAE7C,EAAKzW,SAAS,CAAC0W,eAAe1X,EAAKkY,wBACnC,EAAKhd,MAAM4Q,UAAU,CAACqM,qBAAqBnY,EAAKkY,yBAE/B,IAAdH,EACC,EAAKK,gBAAgB,EAAKtc,MAAM2b,aAAY,GAE5C,EAAKW,gBAAgB,EAAKtc,MAAM2b,iBAI3CtX,OAAM,SAACC,GACJC,QAAQC,IAAI,iGAAgCF,Q,0CAKpCsB,GAAU,IAARhB,EAAO,uDAAF,EACnB,GAAa,IAATA,EAAY,CACZ,IAAI2X,EAAelW,OAAOC,KAAKxB,KAAK9E,MAAM2b,aAC1C,GAAGY,EAAahW,OAAS,EAAG,CAKxB,IAAIiW,EAAiB1X,KAAK9E,MAAM2b,YAAYY,EAAa3W,IACzDd,KAAK1F,MAAM4Q,UAAU,CACjBjN,qBAAsB,WAAQyZ,EAAeC,KAAO,mBAAWD,EAAeE,OAAS,aAAUF,EAAeG,W,0CAOhI7X,KAAK1F,MAAMwQ,kBAAkB,MAC7B9K,KAAK9E,MAAM8b,YAAc,kBAAC,IAAD,CAAgBb,UAAWnW,KAAK1F,MAAM6b,UAAUvX,KAAKoB,MAAO6K,SAAU7K,KAAK1F,MAAMuQ,SAAUoM,qBAAsBjX,KAAKiX,qBAAqBrY,KAAKoB,MAAO8K,kBAAmB9K,KAAK1F,MAAMwQ,kBAAkBlM,KAAKoB,QACrOA,KAAKI,SAAS,CAAC2W,WAAU,IACzB/W,KAAK1F,MAAM8b,qBAAqB,CAACvC,mBAAkB,M,2CAIlCnS,GAAkB,wDAAC,IAChC+V,EAAelW,OAAOC,KAAKxB,KAAK9E,MAAM2b,aAK1C,GAAGY,EAAahW,QAAU,EACtBhC,QAAQC,IAAI,gSACZM,KAAK1F,MAAMwQ,kBAAkB,WAG7B,KAAI2M,EAAa/V,KAAM1B,KAAK9E,MAAM2b,aAM9B,OAFA7W,KAAK1F,MAAMwQ,kBAAkB,GAEtB9K,KAAKwX,gBAAgBxX,KAAK9E,MAAM2b,aAAa,GAI5D,GAAGY,EAAahW,QAAU,OAGpB,CACF,IAAIiW,EAAiB1X,KAAK9E,MAAM2b,YAAYY,EAAa/V,IAAIoW,aAC7D9X,KAAK1F,MAAM4Q,UAAU,CACjBvN,cAAe+Z,EAAeK,cAC9Bna,YAAa8Z,EAAeM,cAC5Bna,mBAAoB6Z,EAAeO,2B,sCAO/BpB,GAAgC,IAAD,OAAnBM,EAAmB,wDACV,OAA9BnX,KAAK1F,MAAMwC,eAA0ByE,OAAOC,KAAKqV,GAAapV,OAAS,IAEtEzB,KAAK1F,MAAMwQ,kBAAkB,GAC7B9K,KAAKkY,qBAAqB,GAC1BlY,KAAK1F,MAAM6Q,uBACXnL,KAAKmY,oBAAoBnY,KAAK1F,MAAMwC,iBAGP,OAA9BkD,KAAK1F,MAAMwC,eAA0ByE,OAAOC,KAAKqV,GAAapV,QAAU,IAEvEzB,KAAK1F,MAAMwQ,kBAAkB,MAC7B9K,KAAKkY,qBAAqB,KAGb,IAAdf,GAECnX,KAAK1F,MAAMwQ,kBAAkB,GAC7B9K,KAAKwX,gBAAgBX,GAAY,GACjC7W,KAAKkY,qBAAqB,GAC1BlY,KAAK1F,MAAM6Q,uBACXnL,KAAKmY,oBAAoBnY,KAAK1F,MAAMwC,kBAEpCkD,KAAK9E,MAAM8b,YAAczV,OAAOC,KAAKqV,GAAalc,KAAI,SAACqc,EAAaoB,GAAd,OAClD,kBAAC,IAAD,CACID,oBAAqB,EAAKA,oBAAoBvZ,KAAK,GACnDuM,qBAAsB,EAAK7Q,MAAM6Q,qBAAqBvM,KAAK,GAC3DyZ,qBAAsB,EAAKH,qBAAqBtZ,KAAK,GACrDqY,qBAAsB,EAAKA,qBAAqBrY,KAAK,GACrDuX,UAAW,EAAK7b,MAAM6b,UAAUvX,KAAK,GACrCiM,SAAU,EAAKvQ,MAAMuQ,SACrByN,eAAgB,EAAKA,eAAe1Z,KAAK,GACzC9D,IAAK,WAAWsd,EAChBG,WAAY1B,EAAYG,GACxBwB,cAAeJ,EACftb,eAAgB,EAAKxC,MAAMwC,eAC3BgO,kBAAmB,EAAKxQ,MAAMwQ,kBAAkBlM,KAAK,QAI7DoB,KAAK9E,MAAMud,eAAiBlX,OAAOC,KAAKxB,KAAK9E,MAAM4b,gBAAgBnc,KAAI,SAAC+d,EAAcC,GAAf,OACnE,kBAAC,IAAD,CACIR,oBAAqB,EAAKA,oBAAoBvZ,KAAK,GACnDuM,qBAAsB,EAAK7Q,MAAM6Q,qBAAqBvM,KAAK,GAC3DyZ,qBAAsB,EAAKH,qBAAqBtZ,KAAK,GACrDqY,qBAAsB,EAAKA,qBAAqBrY,KAAK,GACrDuX,UAAW,EAAK7b,MAAM6b,UAAUvX,KAAK,GACrCiM,SAAU,EAAKvQ,MAAMuQ,SACrByN,eAAgB,EAAKA,eAAe1Z,KAAK,GACzC9D,IAAK,WAAW6d,EAChBJ,WAAY,EAAKrd,MAAM4b,eAAe4B,GACtCF,cAAeG,EACf7b,eAAgB,EAAKxC,MAAMwC,eAC3BgO,kBAAmB,EAAKxQ,MAAMwQ,kBAAkBlM,KAAK,QAG7DoB,KAAKI,SAAS,CAAC2W,WAAU,IACzB/W,KAAK1F,MAAM8b,qBAAqB,CAACvC,mBAAkB,IACnD7T,KAAKkY,qBAAqBlY,KAAK1F,MAAMwC,eAAgB,gBAAMkD,KAAK1F,MAAMwC,gBACtEkD,KAAK1F,MAAM6Q,uBACXnL,KAAKmY,oBAAoBnY,KAAK1F,MAAMwC,mB,6CAMxC,OACI,6BACKkD,KAAK9E,MAAM8b,YACXhX,KAAK9E,MAAMud,kB,+BAOpB,OAAiC,IAAzBzY,KAAK9E,MAAM6b,UAAsB,6KAA+B,kBAAC,IAAD,OAAyB/W,KAAK4Y,2B,GAvMhF3M,IAAMC,WA4MrB0K,Q,oNC/MTiC,E,YACF,WAAYve,GAAQ,IAAD,8BACf,4CAAMA,KACDY,MAAQ,CACT4d,SAAS,IAGb,EAAKC,YAAc,EAAKA,YAAYna,KAAjB,gBANJ,E,+EAUf,IAAIgK,EAAQ,GAQZ,OALIA,EADiC,KAAlC5I,KAAK1F,MAAMie,WAAWS,QACbhZ,KAAK1F,MAAMie,WAAWS,QAEtB,8BAAOhZ,KAAK1F,MAAMie,WAAWX,OAA7B,IAAsC5X,KAAK1F,MAAMie,WAAWV,MAIpE,8BACKjP,K,qCAKElE,GAAG,IAAD,OACT1E,KAAK1F,MAAM6b,UAAU,CAAE5D,OAAO,kBAAC,IAAD,QAE9B1T,IAAM,yDAAyDG,EAAOC,OAClE,CACIH,OAAQ,OACRqD,QAAS,CAAE,eAAgB,qCAC3B/C,KAAM,CACF6Z,YAAY,CAAChZ,GAAGyE,GAChB2P,SAASrU,KAAK1F,MAAMuQ,SAAS5K,IAEjCf,aAAa,SAEhBC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACF,UAAWA,EACVK,QAAQC,IAAIN,EAAK5C,MAAM,IAAI4C,EAAKmD,YAEF,IAA3BnD,EAAKS,OAAOqZ,YACX,EAAK5e,MAAMwQ,kBAAkB,OAE7B,EAAKxQ,MAAM2c,sBAAqB,GAChC,EAAK3c,MAAM6b,UAAU,CAAE5D,OAAO,QAE9B9S,QAAQC,IAAI,wCAAUN,MAIjCG,OAAM,SAACC,GACJC,QAAQC,IAAI,oHAAoCF,Q,oCAK5DQ,KAAK1F,MAAM6b,UAAU,CAAE5D,OAAQ,S,kCAItB7N,GAAI,IAAD,OACZ1E,KAAK1F,MAAM6b,UAAU,CAAE5D,OACf,kBAAC,IAAD,CACIxJ,QAAS,CAAC,CACNH,MAAO,uCACPuQ,WAAW,EACXjW,MAAO,UACR,CACC0F,MAAO,6CACPuQ,WAAW,EACXzY,OAAQ,kBAAM,EAAK0Y,eAAe1U,MAEtC8D,QAASxI,KAAK+Y,aAEd,qHACA,8N,qCAMDrX,GAAG,IAAD,OACb,OAAO,6BACC,0BAAMwB,MAAO,CAACI,MAAM,MAAM+V,MAAM,SAAhC,WACKrZ,KAAK1F,MAAMie,WAAWZ,KAD3B,mBACuC3X,KAAK1F,MAAMie,WAAWX,OAD7D,aAC0E5X,KAAK1F,MAAMie,WAAWV,KADhG,gDACgH7X,KAAK1F,MAAMie,WAAWe,OADtI,8BACqJtZ,KAAK1F,MAAMie,WAAWgB,KAD3K,mBACuLvZ,KAAK1F,MAAMie,WAAWiB,UAE7M,0BAAMtW,MAAO,CAACI,MAAM,MAAM+V,MAAM,UAAU,kBAAC,IAAD,CACtCxY,QACI,WAEI,EAAKvG,MAAMge,eAAe,EAAKhe,MAAMie,WAAWtY,KAGxDiD,MAAO,CAACmW,MAAM,OAAOzE,YAAY,UAPrC,IAOgD,kBAAC,IAAD,CAA2B1R,MAAO,CAACmW,MAAM,QACdxY,QACI,WAEI,EAAK4Y,YAAY,EAAKnf,MAAMie,WAAWtY,W,sCAQtHa,EAAEY,GAAG,IAAD,OAChB,OAAGZ,IAAMY,EAED,kBAAC,IAAD,CAAOgY,KAAK,kBAAkB3e,MAAOiF,KAAK1F,MAAMie,WAAWtY,GAAI8N,YAAa/N,KAAK2Z,eAAejY,GAAIkY,gBAAc,EAAC/Y,QAAS,WAAO,EAAKvG,MAAMwQ,kBAAkBpJ,GAAG,EAAKpH,MAAM+d,qBAAqB3W,EAAE,qDAAa,EAAKpH,MAAM6Q,uBAAuB,EAAK7Q,MAAM6d,oBAAoBzW,KAAO1B,KAAK6Z,mBAI/R,kBAAC,IAAD,CAAOH,KAAK,kBAAkB3e,MAAOiF,KAAK1F,MAAMie,WAAWtY,GAAI8N,YAAa/N,KAAK2Z,eAAejY,GAAIb,QAAS,WAAO,EAAKvG,MAAMwQ,kBAAkBpJ,GAAG,EAAKpH,MAAM+d,qBAAqB3W,EAAG,qDAAa,EAAKpH,MAAM6Q,uBAAuB,EAAK7Q,MAAM6d,oBAAoBzW,KAAO1B,KAAK6Z,qB,+BAOzR,OACI7Z,KAAK8Z,gBAAgB9Z,KAAK1F,MAAMwC,eAAekD,KAAK1F,MAAMke,mB,GA3H1CvM,IAAMC,WAgInB2M,Q,gMChITkB,E,YACF,WAAYzf,GAAQ,IAAD,8BACf,4CAAMA,KACDY,MAAQ,CACT4d,SAAS,IAGb,EAAKC,YAAc,EAAKA,YAAYna,KAAjB,gBANJ,E,+EAUf,IAAIgK,EAAQ,GAQZ,OALIA,EADiC,KAAlC5I,KAAK1F,MAAMie,WAAWS,QACbhZ,KAAK1F,MAAMie,WAAWS,QAEtB,8BAAOhZ,KAAK1F,MAAMie,WAAWX,OAA7B,IAAsC5X,KAAK1F,MAAMie,WAAWV,MAIpE,8BACKjP,K,qCAKElE,GAAG,IAAD,OACb1E,KAAK1F,MAAM6b,UAAU,CAAE5D,OAAO,kBAAC,IAAD,QAE9B1T,IAAM,yDAAyDG,EAAOC,OAClE,CACIH,OAAQ,OACRqD,QAAS,CAAE,eAAgB,qCAC3B/C,KAAM,CACF6Z,YAAY,CAAChZ,GAAGyE,GAChB2P,SAASrU,KAAK1F,MAAMuQ,SAAS5K,IAEjCf,aAAa,SAEhBC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACF,UAAWA,EACVK,QAAQC,IAAIN,EAAK5C,MAAM,IAAI4C,EAAKmD,YAEF,IAA3BnD,EAAKS,OAAOqZ,YACX,EAAK5e,MAAMwQ,kBAAkB,OAE7B,EAAKxQ,MAAM2c,sBAAqB,GAChC,EAAK3c,MAAM6b,UAAU,CAAE5D,OAAO,QAE9B9S,QAAQC,IAAI,wCAAUN,MAIjCG,OAAM,SAACC,GACJC,QAAQC,IAAI,oHAAoCF,Q,oCAKxDQ,KAAK1F,MAAM6b,UAAU,CAAE5D,OAAQ,S,sCAInBzR,EAAEY,GACd,OAEQ,kBAAC,IAAD,CAAOsY,UAAQ,EAACN,KAAK,kBAAkB3e,MAAOiF,KAAK1F,MAAMie,WAAWtY,GAAI8N,YAAa,2VAA0E/N,KAAK6Z,qB,+BAW5K,OACI7Z,KAAK8Z,gBAAgB9Z,KAAK1F,MAAMwC,eAAekD,KAAK1F,MAAMke,mB,GA9EvCvM,IAAMC,WAmFtB6N,Q,iLCpFTE,E,YACF,WAAY3f,GAAQ,IAAD,8BACf,4CAAMA,KACDY,MAAQ,CACTgf,cAAc,GACdC,oBAAmB,EACnBC,cAAc,IALH,E,iFASE,IAAD,OAChBvb,IAAM,mDAAmDG,EAAOC,OAC5D,CACIH,OAAQ,OACRqD,QAAS,CAAE,eAAgB,qCAC3B/C,KAAM,CACFib,QAAS,EACTjD,UAAUpX,KAAK1F,MAAMuQ,SAAS5K,IAElCf,aAAa,SAEhBC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACF,UAAWA,EACVK,QAAQC,IAAIN,EAAK5C,MAAM,IAAI4C,EAAKmD,UAAU,0DAGvChB,OAAOC,KAAKpC,EAAKkb,kBAAkB7Y,OAAO,GAEzCF,OAAOC,KAAKpC,EAAKkb,kBAAkB3f,KAAI,SAACoI,EAAMvB,GAEnC,EAAKlH,MAAMyC,mBAAqByE,GAE/B,EAAKlH,MAAMyQ,oBAAoB,MAM3C,EAAK3K,SAAS,CAAC8Z,cAAc9a,EAAKE,OAClC,EAAKib,oBAAoB,EAAKrf,MAAMgf,eACpC,EAAK5f,MAAM4Q,UAAU,CAACxN,oBAAoB0B,EAAKE,SAE/C,EAAKc,SAAS,CAAC8Z,cAAc9a,EAAKE,OAClC,EAAKib,oBAAoB,EAAKrf,MAAMgf,eACpC,EAAK5f,MAAM4Q,UAAU,CAACxN,oBAAoB0B,EAAKE,WAK1DC,OAAM,SAACC,GACJC,QAAQC,IAAI,iGAAgCF,Q,0CAIpCsB,GAAU,IAARhB,EAAO,uDAAF,EACvB,GAAU,IAAPA,EAAS,CACR,IAAI2X,EAAelW,OAAOC,KAAKxB,KAAK9E,MAAMgf,eAKtCxC,EAAiB1X,KAAK9E,MAAMgf,cAAczC,EAAa3W,IAC3Dd,KAAK1F,MAAM4Q,UAAU,CACjBjN,qBAAsByZ,EAAe9O,W,0CAM7BiO,GAAc,IAAD,OAC7B7W,KAAK1F,MAAM+Q,oCACXrL,KAAKmY,oBAAoBnY,KAAK1F,MAAMyC,kBACpCiD,KAAK9E,MAAMkf,cAAgB7Y,OAAOC,KAAKqV,GAAalc,KAAI,SAACyf,EAAehC,GAAhB,OACpD,kBAAC,IAAD,CACItd,IAAK,aAAasd,EAClBG,WAAY1B,EAAYuD,GACxB5B,cAAeJ,EACfrb,iBAAkB,EAAKzC,MAAMyC,iBAC7BgO,oBAAqB,EAAKzQ,MAAMyQ,oBAAoBnM,KAAK,GACzDuZ,oBAAqB,EAAKA,oBAAoBvZ,KAAK,QAG5DoB,KAAKI,SAAS,CAAC+Z,oBAAmB,M,+BAQjC,OACsC,IAAlCna,KAAK9E,MAAMif,mBAA+B,6BAAK,2HAAL,IAA+B,kBAAC,IAAD,MAA/B,IAAgD,6BAAgBna,KAAK9E,MAAMkf,kB,GA3FrGnO,IAAMC,WAgGnB+N,Q,2HCnGTO,E,YACF,WAAYlgB,GAAQ,IAAD,8BACf,4CAAMA,KACDY,MAAQ,CACT4d,SAAS,IAHE,E,+EAQf,OACI,8BACI9Y,KAAK1F,MAAMie,WAAW3P,S,uCAM9B,OACI,0BAAM1F,MAAO,CAAC,MAAQ,WAAY2P,wBAAyB,CAACC,OAAQ9S,KAAK1F,MAAMie,WAAWkC,oB,sCAMlF3Z,EAAEY,GAAG,IAAD,OAChB,OAAGZ,IAAMY,EAED,kBAAC,IAAD,CACIgY,KAAK,mBACL3e,MAAOiF,KAAK1F,MAAMie,WAAWtY,GAC7B8N,YAAa/N,KAAK2Z,iBAClBC,gBAAc,EAAC/Y,QAAS,WACpB,EAAKvG,MAAMyQ,oBAAoBrJ,GAClC,EAAKpH,MAAM6d,oBAAoBzW,KAIhC1B,KAAK6Z,mBAMT,kBAAC,IAAD,CACIH,KAAK,mBACL3e,MAAOiF,KAAK1F,MAAMie,WAAWtY,GAC7B8N,YAAa/N,KAAK2Z,iBAClB9Y,QAAS,WACL,EAAKvG,MAAMyQ,oBAAoBrJ,KAGnC1B,KAAK6Z,qB,+BASjB,OACI7Z,KAAK8Z,gBAAgB9Z,KAAK1F,MAAMyC,iBAAiBiD,KAAK1F,MAAMke,mB,GA7DnCvM,IAAMC,WAkE5BsO,O,uJChETE,E,YACF,WAAYpgB,GAAQ,IAAD,8BACf,4CAAMA,KACDY,MAAQ,CACTyf,mBAAkB,EAClBC,iBAAiB,GACjBnc,mBAAmB,KACnBC,mBAAmB,MAGvB,EAAKmc,UAAY,EAAKA,UAAUjc,KAAf,gBATF,E,iFAafoB,KAAKI,SAAS,CAACua,mBAAkB,IACjC3a,KAAK8a,cACL9a,KAAKI,SAAS,CACV3B,mBAAmBuB,KAAK1F,MAAMqb,UAAUlX,mBACxCC,mBAAmBsB,KAAK1F,MAAMqb,UAAUjX,qBAE5Ce,QAAQC,IAAIM,KAAK1F,MAAMqb,UAAUlX,sB,oCAGvB,IAAD,OACTI,IAAM,sDAAsDG,EAAOC,OAC/D,CACIH,OAAQ,MACRqD,QAAS,CAAE,eAAgB,qCAC3B/C,KAAM,GAENF,aAAa,SAEhBC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACF,UAAWA,EACVK,QAAQC,IAAIN,EAAK5C,MAAM,IAAI4C,EAAKmD,YAEhC,EAAKnC,SAAS,CAACwa,iBAAiBxb,EAAKE,OACrCG,QAAQC,IAAIN,EAAKE,UAGxBC,OAAM,YAAY,IAAVC,EAAS,EAATA,IACLC,QAAQC,IAAI,yEAA4BF,Q,gCAI1CsB,GAAI,IAAD,EACeA,EAAEC,cAAlB2Y,EADC,EACDA,KAAM3e,EADL,EACKA,MAIdiF,KAAKI,SAAL,eAAgBsZ,EAAO3e,IACvBiF,KAAK1F,MAAM4Q,UAAX,eAAuBwO,EAAO3e,M,sCAIlB,IAAD,OACLggB,EAAWxZ,OAAOC,KAAKxB,KAAK9E,MAAM0f,kBAAkBjgB,KAAI,SAACyE,EAAKsC,GAChE,OACI,4BAAQ5G,IAAKsE,EAAK,gBAAiBrE,MAAOqE,GAAO,EAAKlE,MAAM0f,iBAAiBxb,GAAMwJ,UAG3F,OACI,6BACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIoM,IAAI,uHACJla,IAAI,eACJma,YAAY,kFACZyE,KAAK,qBACLxE,SAAUlV,KAAK6a,UACfxF,aAAcrV,KAAK1F,MAAMqb,UAAUlX,oBACzCsc,IAEF,kBAAC,IAAD,KACK/a,KAAKgb,oB,sCAOd,GAAGhb,KAAK9E,MAAMuD,sBAAsBuB,KAAK9E,MAAM0f,iBAAkB,CAC7D,IAAIK,EAAYjb,KAAK9E,MAAM0f,iBAAiB5a,KAAK9E,MAAMuD,oBAAoByc,SACrEC,EAAW5Z,OAAOC,KAAKyZ,GAAWtgB,KAAI,SAACygB,EAAO1Z,GAChD,OAA8B,IAA3BuZ,EAAUG,GAAOC,MACR,GAGJ,4BAAQvgB,IAAKsgB,EAAQ,gBACbrgB,MAAOqgB,GAEVH,EAAUG,GAAOxS,UAKlC,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACAoM,IAAI,6HACJla,IAAI,mBACJma,YAAY,wFACZyE,KAAK,qBACLxE,SAAUlV,KAAK6a,UACfxF,aAAcrV,KAAK1F,MAAMqb,UAAUjX,oBACrCyc,IAIN,MAAQ,K,yCAKZ,OACQ,kBAAC,IAAD,CAAKrgB,IAAI,eAEDkF,KAAK9E,MAAMyf,kBACP3a,KAAKsb,gBAEL,mJ,+BAOpB,OACItb,KAAKub,uB,GAhIMtP,IAAMC,WAoIdwO,Q,qJCnITc,E,YACF,WAAYlhB,GAAQ,IAAD,8BACf,4CAAMA,KACDY,MAAQ,CACTugB,gBAAe,GAHJ,E,iFAQfzb,KAAKI,SAAS,CAACqb,gBAAe,M,2CAI9B,OACQ,kBAAC,IAAD,CACIpP,OAAQ,kBAAC,IAAD,MACRnJ,MAAO,CAACwY,cAAc,SAGlB1b,KAAK9E,MAAMugB,eACP,6BAAMzb,KAAK1F,MAAMob,aAAe,0IAA8B,uJAE9D,mJ,+BAOpB,OACI1V,KAAK2b,yB,GA9BQ1P,IAAMC,WAkChBsP,O,+HCrCTI,E,YAEF,WAAathB,GACZ,IAAD,8BACI,4CAAMA,KACDY,MAAQ,GAFjB,E,6EAOgB,IAAD,OACX8E,KAAK1F,MAAM4Q,UAAU,CAAC2Q,eAAe,8EACrChd,IAAM,kDAAkDG,EAAOC,OAC3D,CACIH,OAAQ,OACRqD,QAAS,CAAE,eAAgB,qCAC3B/C,KAAM,CACFiV,SAAUrU,KAAK1F,MAAMuQ,SAAS5K,GAC9BsN,UAAUvN,KAAK1F,MAAMwhB,eAEzB5c,aAAa,SAEhBC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACF,UAAWA,EACVK,QAAQC,IAAIN,EAAK5C,MAAM,IAAI4C,EAAKmD,WAGd,MAAfnD,EAAKsD,SACJ,EAAKpI,MAAMyhB,kBAAkB,CAAC7d,eAAc,IAC5C,EAAK5D,MAAMqR,wBAItBpM,OAAM,SAACC,GACJC,QAAQC,IAAI,iGAAgCF,Q,+BAI9C,IAAD,OACL,OACI,kBAAC,IAAD,CAAQmB,KAAK,KAAKE,QAAS,WAAK,EAAK4G,iBAAkByO,UAAU,kBAAjE,6F,GAxCiBjK,IAAMC,WA6CpB0P,Q,gTC4GAI,E,YA7IX,WAAY1hB,GAAQ,IAAD,8BACf,4CAAMA,KACDY,MAAQ,CACToD,oBAAmB,GAHR,E,iFAQf0B,KAAKuE,wB,uCAGQ,IAAD,OACZ,OACI,yBAAKtE,GAAID,KAAK1F,MAAM2F,GAAIiD,MAAO,CAACC,SAAS,SAAS8Y,OAAO,UAAWC,KAAK,SACpElc,KAAK1F,MAAM6hB,aACR,kBAAC,IAAD,CAAOvT,MAAM,oEAET,kBAAC,IAAD,CACIyD,OAAQrM,KAAK1F,MAAM6hB,YAAYC,UAAY,kBAAC,IAAD,CAAQpZ,IAAKhD,KAAK1F,MAAM6hB,YAAYC,YAAe,KAC9FrO,YAAa/N,KAAK1F,MAAM6hB,YAAYxE,MAAQ3X,KAAK1F,MAAM6hB,YAAYxE,KAAK/O,MAAQ5I,KAAK1F,MAAM6hB,YAAYxE,KAAK/O,MAAQ,IAFxH,UAIQ5I,KAAK1F,MAAM6hB,YAAYE,WAJ/B,YAI6Crc,KAAK1F,MAAM6hB,YAAYG,aAK5E,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIjQ,OAAQ,kBAAC,IAAD,MACR0B,YAAY,mNACZlN,QAASb,KAAK1F,MAAM0R,qBAAqBpN,QAH7C,4DAUHoB,KAAK1F,MAAMwR,UAAUA,UAAUtP,MAC5BwD,KAAK0W,sBAGL,kBAAC,IAAD,CAAO9N,MAAM,gEACT,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIyD,OAAQ,kBAAC,IAAD,OADZ,kEAGkBrM,KAAK1F,MAAMwR,UAAUA,UAAUrP,SAAS8f,SAMtE,kBAAC,IAAD,KACQ,kBAAC,IAAD,CACIlQ,OAAQ,kBAAC,IAAD,MACRsG,aAAc,kBAAC,IAAD,CACV6J,QAASxc,KAAK9E,MAAMoD,mBACpB4W,SAAU,WAAK,EAAKlR,eACxB+J,YAAY,mLALhB,8EAYR,kBAAC,IAAD,KACQ,kBAAC,IAAD,CACI1B,OAAQ,kBAAC,IAAD,OAER,uBAAGnJ,MAAO,CAACoJ,MAAM,UAAUmQ,eAAe,QACvCC,KAAK,4BAA4BnI,OAAO,UAD3C,+F,4CAapB,OACI,kBAAC,IAAD,iV,4CAMc,IAAD,OACjB3Q,IAAQC,YAAY,wBAAyB,CAAC,OAAU,8BAA+B,OAAU,CAAC,QAAW,YAAY,EAAI,QAAQ,aAAe,6EAC/I1E,MAAK,SAAC4D,GACH,EAAK3C,SAAS,CAAC9B,mBAAoByE,EAAMe,SAASC,aAClD,EAAKzJ,MAAMyR,sBAAsBhJ,EAAMe,SAASC,eAEnDxE,OAAM,SAACC,GACJ,EAAKY,SAAS,CAAC9B,oBAAoB,IACnC,EAAKhE,MAAMyR,uBAAsB,Q,mCAOJ,IAAlC/L,KAAK9E,MAAMoD,mBACV0B,KAAKqE,sBAELrE,KAAKsE,uB,4CAIS,IAAD,OACjBV,IAAQC,YAAY,4BAA6B,IAC5C1E,MAAK,SAAC4D,GACH,EAAK3C,SAAS,CAAC9B,oBAAoB,IACnC,EAAKhE,MAAMyR,uBAAsB,MAEpCxM,OAAM,SAACC,GACJ,EAAKY,SAAS,CAAC9B,oBAAoB,IACnC,EAAKhE,MAAMyR,uBAAsB,Q,2CAKxB,IAAD,OAChBnI,IAAQC,YAAY,6BAA8B,IAC7C1E,MAAK,SAAC4D,GACH,EAAKwB,yBAERhF,OAAM,SAACC,GACA,EAAK+E,2B,+BAMjB,OACIvE,KAAK2c,qB,GA1IM1Q,IAAMC,W,2CCHdjD,cCGAA,cCsCA2T,IA3CS,SAAC9Q,GAAe,IAAD,EACA+Q,mBAAS,aADT,mBAC/BrT,EAD+B,KAClBsT,EADkB,OAEPD,mBAAS,MAFF,mBAE/BV,EAF+B,KAElB1X,EAFkB,KAMtCsY,qBAAU,YAQT,mBAAArY,EAAAC,OAAA,kEAAAD,EAAA,MACoBd,IAAQC,YAAY,wBADxC,OACOvH,EADP,OAECmI,EAAQnI,GAFT,qCAMAsI,KACE,IAOH,OACC,kBAAC,IAAD,CAAM4E,YAAaA,GAClB,kBAAC,EAAD,CACCvJ,GAAG,YACHkc,YAAaA,EACbtQ,GAVQ,SAAA/K,GACVgc,EAAehc,EAAEC,cAAcC,QAAQgc,KAUrClR,UAAWA,EACXmR,gBAAiBH,EAAele,U,GAChCmN,sBAAuBD,EAAUC,sBAAsBnN,U,GACvDoN,qBAAsBF,EAAUE,qBAAqBpN,U,4KC4G1C8L,G,kBAhJX,WAAYpQ,GAAQ,IAAD,8BACf,4CAAMA,KAEDY,MAAQ,CACTsO,YAAa,SACb0T,aAAc,OACdC,cAAe,KACfrhB,SAAS,CAAC,CAAC,EAAI,CAAC,MAAQ,gFAPb,E,sEAsBf,SAASshB,EAAQ1Y,EAAG2Y,GAChB,OAAI3Y,EAAE9C,MAAQyb,EAAEzb,OACJ,EAER8C,EAAE9C,MAAQyb,EAAEzb,MACL,EAGJ,EASX,SAAS0b,EAAc3Q,EAAG4Q,EAAcC,EAAgBpT,EAASqT,GAA2C,IAAD,OAAnBC,EAAmB,uDAAH,EAChGC,EAAe,GAenB,OAdqB,IAAlBD,IACCC,EA7BR,SAAwBhR,GAKpB,OAJUpL,OAAOC,KAAKmL,GAAIC,aAAY,SAAUC,EAAKC,EAAMC,EAAOC,GAE9D,OAAcH,EAAII,OAAOH,KAC1B,IAyBgB8Q,CAAejR,IAEb,IAAlB+Q,IACCC,EAZR,SAAsBhR,GAElB,OAAOpL,OAAOC,KAAKmL,GAAIkR,KAAKT,GAUTU,CAAanR,IAGX,IAAlB+Q,IACCC,EAAepc,OAAOC,KAAKmL,IAGfgR,EAAahjB,KAAI,SAACojB,EAAY3F,GAAb,OAC7B,kBAAC4F,EAAA,EAAD,CAAYljB,IAAK,YAAYsd,EAAO6F,QAAStR,EAAGoR,GAAaG,aAAcX,EAAc3e,KAAK,GAAOwL,QAASA,EAAQxL,KAAK,GAAO4e,gBAAiBA,EAAgB5e,KAAK,GAAO6e,uBAAwBA,EAAuB7e,KAAK,QAgC3O,SAASuf,EAAQC,GAEb,OACI,kBAAC,IAAD,CAAKne,GAAI,mBAAmBme,EAAQC,MAAOvjB,IAAK,mBAAmBsjB,EAAQC,MAAOnI,UAAU,qBACvFoH,EAAcc,EAAQE,aAAaF,EAAQF,aAAatf,KAAKoB,MAAMoe,EAAQZ,gBAAgB5e,KAAKoB,MAAMoe,EAAQhU,QAAQxL,KAAKoB,MAAMoe,EAAQX,uBAAuB7e,KAAKoB,QAKlL,SAASue,EAASF,GACd,OACI,kBAAC,IAAD,CAAKpe,GAAIoe,EAAMA,MAAOnI,UAAU,qBAC5B,kBAAC,IAAD,CAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAKA,UAAU,oBAAmB,yBAAKsI,IAAI,2BAAOxb,IAAI,mEAAuE,kBAAC,IAAD,CAAKkT,UAAU,gBAAf,0FAAoD,kBAAC,IAAD,CAAKA,UAAU,gBAAf,yFAAmD,kBAAC,IAAD,CAAKA,UAAU,mBAAf,0DAA2C,0BAAMA,UAAU,gBAAhB,+BAC7S,kBAAC,IAAD,CAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAKA,UAAU,oBAAmB,yBAAKsI,IAAI,2BAAOxb,IAAI,mEAAuE,kBAAC,IAAD,CAAKkT,UAAU,gBAAf,8EAAkD,kBAAC,IAAD,CAAKA,UAAU,gBAAf,yFAAmD,kBAAC,IAAD,CAAKA,UAAU,mBAAf,0DAA2C,0BAAMA,UAAU,gBAAhB,+BAC3S,kBAAC,IAAD,CAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAKA,UAAU,oBAAmB,yBAAKsI,IAAI,2BAAOxb,IAAI,mEAAuE,kBAAC,IAAD,CAAKkT,UAAU,gBAAf,qDAA6C,kBAAC,IAAD,CAAKA,UAAU,gBAAf,yFAAmD,kBAAC,IAAD,CAAKA,UAAU,mBAAf,0DAA2C,0BAAMA,UAAU,gBAAhB,+BACtS,kBAAC,IAAD,CAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAKA,UAAU,oBAAmB,yBAAKsI,IAAI,2BAAOxb,IAAI,mEAAuE,kBAAC,IAAD,CAAKkT,UAAU,gBAAf,4GAAuD,kBAAC,IAAD,CAAKA,UAAU,gBAAf,yFAAmD,kBAAC,IAAD,CAAKA,UAAU,mBAAf,0DAA2C,0BAAMA,UAAU,gBAAhB,gCAK5T,SAASuI,EAAQJ,GACb,OACI,kBAAC,IAAD,CAAKpe,GAAIoe,EAAMA,MAAOnI,UAAU,qBAC5B,kBAAC,IAAD,CAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAKA,UAAU,oBAAmB,yBAAKsI,IAAI,iCAAQxb,IAAI,sEAA0E,kBAAC,IAAD,CAAKkT,UAAU,gBAAf,wEAAiD,kBAAC,IAAD,CAAKA,UAAU,gBAAf,yFAAmD,kBAAC,IAAD,CAAKA,UAAU,mBAAf,IAAkC,0BAAMA,UAAU,gBAAhB,+BACrS,kBAAC,IAAD,CAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAKA,UAAU,oBAAmB,yBAAKsI,IAAI,iCAAQxb,IAAI,sEAA0E,kBAAC,IAAD,CAAKkT,UAAU,gBAAf,8EAAkD,kBAAC,IAAD,CAAKA,UAAU,gBAAf,yFAAmD,kBAAC,IAAD,CAAKA,UAAU,mBAAf,IAAkC,0BAAMA,UAAU,gBAAhB,+BACtS,kBAAC,IAAD,CAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAKA,UAAU,oBAAmB,yBAAKsI,IAAI,iCAAQxb,IAAI,sEAA0E,kBAAC,IAAD,CAAKkT,UAAU,gBAAf,+FAAoD,kBAAC,IAAD,CAAKA,UAAU,gBAAf,yFAAmD,kBAAC,IAAD,CAAKA,UAAU,mBAAf,IAAkC,0BAAMA,UAAU,gBAAhB,+BACxS,kBAAC,IAAD,CAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAKA,UAAU,oBAAmB,yBAAKsI,IAAI,iCAAQxb,IAAI,sEAA0E,kBAAC,IAAD,CAAKkT,UAAU,gBAAf,kHAAwD,kBAAC,IAAD,CAAKA,UAAU,gBAAf,yFAAmD,kBAAC,IAAD,CAAKA,UAAU,mBAAf,IAAkC,0BAAMA,UAAU,gBAAhB,gCAKxT,SAASwI,EAAWL,GAChB,OACI,kBAAC,IAAD,CAAKpe,GAAIoe,EAAOnI,UAAU,qBAC1B,qLAWR,OACI,mBAxEJ,SAA6ByI,GAEzB,MAAmC,SAAhCA,EAAcA,cAEL,kBAACR,EAAD,CACJrjB,IAAK6jB,EAAc7jB,IACnBujB,MAAOM,EAAcA,cACrBL,aAAcK,EAAcxB,cAC5Be,aAAcS,EAAcT,aAAatf,KAAKoB,MAC9CoK,QAASuU,EAAcvU,QAAQxL,KAAKoB,MACpCwd,gBAAiBmB,EAAcnB,gBAAgB5e,KAAKoB,MACpDyd,uBAAwBkB,EAAclB,uBAAuB7e,KAAKoB,QAGvC,UAAhC2e,EAAcA,cACL,kBAACJ,EAAD,CAAUF,MAAOM,EAAcA,gBAER,SAAhCA,EAAcA,cACL,kBAACF,EAAD,CAASJ,MAAOM,EAAcA,gBAE9B,kBAACD,EAAD,CAAYL,MAAOM,EAAcA,kBAoD7C,CACIxB,cAAend,KAAK1F,MAAM6iB,cAC1BwB,cAAe3e,KAAK1F,MAAM4iB,aAC1B0B,WAAY5e,KAAK1F,MAAMukB,YACvBX,aAAcle,KAAK1F,MAAMwkB,eAAelgB,KAAKoB,KAAK,kBAClDoK,QAASpK,KAAK1F,MAAM8P,QAAQxL,KAAKoB,MACjCwd,gBAAiBxd,KAAK1F,MAAMkjB,gBAAgB5e,KAAKoB,MACjDyd,uBAAwBzd,KAAK1F,MAAMmjB,uBAAuB7e,KAAKoB,Y,GA5IrDiM,IAAMC,YCFhC,SAAS0D,EAAiBtG,GACtB,OAAOA,EACF6F,QAAQ,SAAU,KAClBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,UAAW,KACnBA,QAAQ,UAAW,K,IA4Ub4P,E,YAvUX,WAAazkB,GAAQ,IAAD,8BAChB,4CAAMA,KAWV0kB,UAAY,SAACC,GACTxf,QAAQC,IAAI,OAAQ,0FAAoBuf,GACxC,EAAK7e,SAAS,CAAEoJ,YAAayV,KAdb,EAiBpBzB,gBAAkB,SAACyB,GACfxf,QAAQC,IAAI,OAAQ,iJAA8Buf,EAAG,gBACrD,EAAK7e,SAAS,CAAE8e,aAAcD,KAnBd,EAsBpBE,kBAAoB,SAACF,GACjBxf,QAAQC,IAAI,OAAQ,uHAAwBuf,GAC5C,EAAK7e,SAAS,CAAEgf,eAAgBH,KAtBhC,EAAK/jB,MAAQ,CACTmB,aAAa,EACbmN,YAAa,QACb1N,SAAU,GACVujB,cAAe,GACfD,eAAgB,EAChBF,aAAa,CAAC,CAAC,MAAQ,wFAAkB,YAAc,wFAAkB,YAAc,IAAI,MAAQ,UARvF,E,wEA4BTnd,EAAYqI,GAOnB,OAJI,4BAAQvJ,QAAS,WAAOuJ,EAAQrI,KAAhC,uD,qCAOOA,EAAYgF,EAAOqD,GAY9B,OAVI,yBAAK8L,UAAU,iBACX,yBAAKA,UAAU,QAAQrV,QAAS,WAAOuJ,EAAQrI,EAAY,OAA3D,KAGCgF,EACD,yBAAKmP,UAAU,QAAQrV,QAAS,WAAOuJ,EAAQrI,KAA/C,Q,6CAQWA,EAAYqI,GAE/B,GAAKpK,KAAK1F,MAAM+P,aAAa,CACzB,IAAIiV,GAAQ,EACRC,EAAY,GAQhB,OAPAvf,KAAK1F,MAAM+P,aAAa1P,KAAI,SAACyE,EAAKtE,GAC3BsE,EAAKiI,aAAetF,EAAYsF,WAAajI,EAAKkI,eAAiBvF,EAAYuF,eAC9EgY,GAAQ,EACRC,EAAYzkB,OAIP,IAAVwkB,EAEStf,KAAKwf,eAAezd,EAAY/B,KAAK1F,MAAM+P,aAAakV,GAAxB,MAA4CnV,GAG7EpK,KAAKyf,WAAW1d,EAAYqI,GAIvC,OAAOpK,KAAKyf,WAAW1d,EAAYqI,K,0CAOvCpK,KAAKI,SAAS,CAACqF,SAAS,IACxBzF,KAAKI,SAAS,CAACtE,SAASkE,KAAK1F,MAAMgQ,cAAcjO,aAAa,M,6CAM9D,MAAyC,eAAtC2D,KAAK1F,MAAM+N,YAAYnG,YACf,6CAEA,uB,+BA4IX,IAAM8G,EAASC,cAEf,OACI,kBAAC,IAAD,CAAMO,YAAaxJ,KAAK9E,MAAMsO,aAC1B,kBAAC,IAAD,CAAOvJ,GAAG,SACN,kBAAC,IAAD,CACIyJ,MAAM,SADV,0DAKA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKwM,UAAU,aACX,yBAAKlT,IAAI,0DAC8B,eAAtChD,KAAK1F,MAAM+N,YAAYnG,YAEpB,kBAAC,IAAD,CAAKgU,UAAU,YACX,iDAGJ,kBAAC,IAAD,CAAKA,UAAU,YACX,uBAAGwG,KAAK,oBAAR,4DAIZ,yBAAKzc,GAAG,gBACHD,KAAK1F,MAAMiQ,iBAGhB,kBAAC,IAAD,CAEI2L,UAAWlW,KAAK0f,wBACpB,mBAtEhB,SAAwBC,EAAIC,GAIxB,OAA2B,IAAxBb,EAAatd,OACL,IAEa,IAAjBke,EAAIC,SAIiBre,OAAOC,KAAKme,EAAIZ,cAAcpkB,KAAI,SAACkkB,EAAa/jB,GAAd,OAElD,kBAAC,IAAD,CACIoI,MAAO,CAAC,WAAa,mGAAmGyc,EAAIZ,aAAaF,GAAagB,YAAY,IAAI,eAAiB,QACvL3J,UAAU,mBACVpb,IAAKA,EAAI,IAAI+jB,EACbhe,QACI,WACI8e,EAAIP,eAAeP,GACnBc,EAAIG,cAAc,eAIzBH,EAAIZ,aAAaF,GAAakB,UAMhC,gBAwCH,CAAgBjlB,IAAI,cAAcikB,aAAc/e,KAAK9E,MAAMY,SAAU8jB,SAAU5f,KAAK9E,MAAMmB,YAAayjB,cAAe9f,KAAKgf,UAAUpgB,KAAKoB,MAAOof,eAAgBpf,KAAKmf,kBAAkBvgB,KAAKoB,UAIrM,kBAAC,IAAD,CAAOC,GAAG,aACN,mBA9GZ,SAAsB0f,GAClB,OAAoB,IAAjBA,EAAIC,SAIK,yBAAK1c,MAAO,CAAC2R,WAAW,YAC5B,kBAAC,IAAD,CACInL,MAAM,QACNe,UAAU,EACVZ,KAAM,kBAAC,IAAD,CAAchJ,QAAS,kBAAM8e,EAAIG,cAAc,WAAW9W,IAAWc,IACvE,kBAAC,IAAD,MAAuB,kBAAC,IAAD,OAC3BC,MAAO,kBAAC,IAAD,CAAclJ,QAAS,kBAAM8e,EAAIG,cAAc,WAA/C,mCAENH,EAAIZ,aAAaY,EAAIK,cAAcD,OAExC,kBAAC,EAAD,CACIjB,eAAgBa,EAAIzB,aAAatf,KAAKoB,MACtCmd,cAAewC,EAAIZ,aAAaY,EAAIK,cAActV,YAAa5P,IAAK6kB,EAAIZ,aAAaY,EAAIK,cAAcC,YACvGpB,YAAac,EAAIK,aACjB9C,aAAa,OACb9S,QAASuV,EAAIvV,QAAQxL,KAAKoB,MAC1Byd,uBAAwBkC,EAAIlC,uBAAuB7e,KAAKoB,MACxDwd,gBAAiBmC,EAAInC,gBAAgB5e,KAAKoB,SAO9C,kBAAC,IAAD,+CAiFA,CACI+e,aAAc/e,KAAK9E,MAAMY,SACzB8jB,SAAU5f,KAAK9E,MAAMmB,YACrByjB,cAAe9f,KAAKgf,UAAUpgB,KAAKoB,MACnCke,aAAcle,KAAKgf,UAAUpgB,KAAKoB,KAAK,kBACvCwd,gBAAiBxd,KAAKwd,gBAAgB5e,KAAKoB,MAC3CggB,aAAchgB,KAAK9E,MAAMkkB,eACzBhV,QAASpK,KAAK1F,MAAM8P,QAAQxL,KAAKoB,MACjCyd,uBAAwBzd,KAAKyd,uBAAuB7e,KAAKoB,SAGjE,kBAAC,IAAD,CAAOC,GAAG,kBAEN,mBArLZ,SAA0B0f,GACtB,OAAoB,IAAjBA,EAAIC,UACHngB,QAAQC,IAAIigB,GAER,yBAAKzJ,UAAU,eAAehT,MAAO,CAAC,OAAS,IAAI,UAAY,OAAO,WAAa,YAC/E,kBAAC,IAAD,CACIwG,MAAM,QACNe,UAAU,EACVZ,KAAM,kBAAC,IAAD,CAAchJ,QAAS,kBAAM8e,EAAIO,UAAU,eAAelX,IAAWc,IACvE,kBAAC,IAAD,MAAuB,kBAAC,IAAD,OAC3BC,MAAO,kBAAC,IAAD,CAAclJ,QAAS,kBAAM8e,EAAIO,UAAU,eAA3C,mCAENtQ,EAAiB+P,EAAIQ,YAAY,GAAGvX,QAEzC,kBAAC,IAAD,CAAK3I,GAAI,gBAAgB0f,EAAIQ,YAAY,GAAGC,WACxC,yBAAKlK,UAAU,oBAAmB,yBAAKlT,IAAK2c,EAAIQ,YAAY,GAAGld,IAAKub,IAAKmB,EAAIQ,YAAY,GAAGvX,SAC5F,yBAAKsN,UAAU,gBAAgBtG,EAAiB+P,EAAIQ,YAAY,GAAGvX,OAAnE,IAA2E,0BAAMsN,UAAU,YAAYyJ,EAAIQ,YAAY,GAAGC,YAC1H,yBAAKlK,UAAU,gBAAgBtG,EAAiB+P,EAAIQ,YAAY,GAAGpS,cACnE,yBAAKmI,UAAU,mBAwB1B,mBADiBnU,EAvB6C4d,EAAIQ,YAAY,MAwBX,IAA/Bpe,EAAYC,eAO7C,0BAAMkU,UAAU,gBAChB,uBAAGA,UAAU,kBAAkBhT,MAAO,CAACmd,WAAW,MAAMlS,SAAS,QAAQyG,YAAY,QAAS7S,EAAYC,eAAese,UAAzH,WACKve,EAAYC,eAAeC,UAFhC,WANI,0BAAMiU,UAAU,gBACvBnU,EAAYH,MADL,WAxBS+d,EAAIlC,uBAAuBkC,EAAIQ,YAAY,GAAGR,EAAIvV,aAQ/D,6BACA,kBAAC,IAAD,CACIV,MAAM,QACNe,UAAU,EACVZ,KAAM,kBAAC,IAAD,CAAchJ,QAAS,kBAAM8e,EAAIO,UAAU,eAAelX,IAAWc,IACvE,kBAAC,IAAD,MAAuB,kBAAC,IAAD,OAC3BC,MAAO,kBAAC,IAAD,CAAclJ,QAAS,kBAAM8e,EAAIO,UAAU,eAA3C,mCALX,wCAOI,yBAAKhd,MAAO,CAAC,UAAY,SAAS,QAAU,SAA5C,gIAMhB,IAA0BnB,IA4Id,CACI6d,SAAU5f,KAAK9E,MAAMmB,YACrB6jB,UAAWlgB,KAAKgf,UAAUpgB,KAAKoB,MAC/BmgB,YAAangB,KAAK9E,MAAMgkB,aACxB9U,QAASpK,KAAK1F,MAAM8P,QAAQxL,KAAKoB,MACjCyd,uBAAwBzd,KAAKyd,uBAAuB7e,KAAKoB,c,GA/RtDiM,IAAMC,WCmBlBqU,IA5BQ,SAACZ,GAsBpB,OAjBA5C,qBAAU,WAQN,EAAArY,EAAAC,OAAA,gFAOD,IAGK,kBAAC,EAAD,CAAcyF,QAASuV,EAAIvV,QAAQxL,U,GAAYyL,aAAcsV,EAAItV,aAAcC,cAAeqV,EAAIrV,cAAeC,aAAcoV,EAAIpV,aAAa3L,U,GAAYyJ,YAAasX,EAAItX,gB,+RCgT1KmY,E,YAjUX,WAAalmB,GACZ,IAAD,8BACI,4CAAMA,KACDY,MAAQ,CACTkC,WAAW,EAAK9C,MAAM8C,WACtBqjB,OAAO,EACP5E,eAAe,MAGnB,EAAKvhB,MAAMomB,2BARf,E,mFAWsBtjB,GAClBA,GAAwB,EACxB4C,KAAKI,SAAS,CAAChD,eACf4C,KAAK1F,MAAM4Q,UAAU,CAAC9N,WAAWA,M,gCAKjC,IADA,IAAIujB,EAAU,GACL3b,EAAI,EAAGA,GAA8C,EAAzChF,KAAK1F,MAAMiC,eAAeE,SAAS8f,MAASvX,GAAK,EAClE2b,EAAQ3Z,KAAK,4BAAQjM,MAAK,UAAKiK,GAAKlK,IAAG,UAAKkK,IAAMA,IAEtD,OAAO2b,I,2CAGU,IAAD,OACZC,EAAkD,EAAzC5gB,KAAK1F,MAAMiC,eAAeE,SAAS8f,MAChD,OAAGqE,EAAQ,EAEH,6BACQ,kBAAC,IAAD,mKAAmC,2BAAIA,IAC3C,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,KAAM,EACNC,IAAK,EACLC,IAAKH,EACL7lB,MAAOimB,OAAOhhB,KAAK9E,MAAMkC,YACzB8X,SAAU,SAAC9X,GAAD,OAAe,EAAK6jB,sBAAsB7jB,IACpD4X,IAAI,2FAER,kBAAC,IAAD,CAAQE,SAAU,SAAApU,GAAC,OAAI,EAAKmgB,sBAAsBngB,EAAEyT,OAAOxZ,QAAQA,MAAOmmB,OAAOlhB,KAAK9E,MAAMkC,aACvF4C,KAAK2gB,WAGd,yBAAKzd,MAAO,CAACwR,QAAS,OAAOC,eAAe,WACxC,kBAAC,IAAD,CAAQhU,KAAK,IAAIH,WAAS,EAAC0C,MAAO,CAAC0R,YAAa,KAAhD,0FACA,kBAAC,IAAD,CAAQjU,KAAK,IAAIH,WAAS,EAAC0C,MAAO,CAACkL,WAAY,KAA/C,oEAKL,kBAAC,IAAD,CAAM8H,UAAU,kBAAkB7J,OAAQ,kBAAC,IAAD,OAA1C,4FAA8E,gCAA9E,2C,wCAKX,IAAI8U,EAAMnhB,KAAK1F,MAAM+C,QAAQ2C,KAAK1F,MAAM8C,WAKxC,OAJG4C,KAAK1F,MAAMkb,iBAAiBzX,oBAC3BojB,GAAyD,EAA5CnhB,KAAK1F,MAAMkb,iBAAiB7X,eAE1CwjB,EAAI,IAAGA,EAAM,GACRA,I,0CAKR,OAAGnhB,KAAK1F,MAAMkb,iBAAiB1X,gBAEvB,kBAAC,IAAD,CACI2C,KAAM,kBAAC,IAAD,MACNC,QAAQ,GAGR,4KAA+BV,KAAK1F,MAAMkb,iBAAiB5X,YAA3D,yCACA,8aAKJoC,KAAKohB,0B,wCAMb,OAAGphB,KAAK1F,MAAMkb,iBAAiBzX,kBAEvB,kBAAC,IAAD,CAAMsO,OAAQ,kBAAC,IAAD,OAAd,6GAAmD,2BAAIrM,KAAK1F,MAAMkb,iBAAiB7X,cAAhC,YAGhD,K,yCAIImD,GACf,GAAGS,OAAOC,KAAKxB,KAAK1F,MAAMkb,iBAAiB/X,mBAAmBgE,OAAO,EACjE,IAAIgW,EAAelW,OAAOC,KAAKxB,KAAK1F,MAAMkb,iBAAiB/X,mBAKvDia,EAAiB1X,KAAK1F,MAAMkb,iBAAiB/X,kBAAkBga,EAAa3W,SAE5E4W,EAAiB,CAACzX,GAAG,SAG7B,OAAOyX,I,0CAIS5W,GAChB,GAAGS,OAAOC,KAAKxB,KAAK1F,MAAMkb,iBAAiB9X,qBAAqB+D,OAAO,EACnE,IAAIgW,EAAelW,OAAOC,KAAKxB,KAAK1F,MAAMkb,iBAAiB9X,qBAKvDga,EAAiB1X,KAAK1F,MAAMkb,iBAAiB9X,oBAAoB+Z,EAAa3W,SAE9E4W,EAAiB,CAACzX,GAAG,SAG7B,OAAOyX,I,qCAKP,IAAiD,IAA9C1X,KAAK1F,MAAMkb,iBAAiBhX,cAC3B,IAAI6iB,GAAsB,OAEtBA,GAAsB,EAE9B,IAAIC,EAAY,GAEZC,EAAsBvhB,KAAKwhB,mBAAmBxhB,KAAK1F,MAAMkb,iBAAiB1Y,gBAC1E2kB,EAAuBzhB,KAAKua,oBAAoBva,KAAK1F,MAAMkb,iBAAiBzY,kBAehF,OAbAukB,EAAUjN,SAAWrU,KAAK1F,MAAMuQ,SAAS5K,GACzCqhB,EAAU5L,aAAe1V,KAAK1F,MAAMkb,iBAAiBxY,oBACrDskB,EAAUI,gBAAkB,CAAC,KAAOH,EAAoB,UAAYA,EAAoBthB,IACxFqhB,EAAUK,kBAAoB,CAAC,KAAOF,EAAqB,YAAcA,EAAqBxhB,IAC9FqhB,EAAUM,WAAa5hB,KAAK1F,MAAM8C,WAClCkkB,EAAUO,YAAc7hB,KAAK1F,MAAMkb,iBAAiBzX,kBAAoBiC,KAAK1F,MAAMkb,iBAAiB7X,cAAgB,EACpH2jB,EAAUQ,SAAW9hB,KAAK1F,MAAMkb,iBAAiB9J,SACjD4V,EAAUS,QAAU/hB,KAAK1F,MAAMkb,iBAAiBvY,WAChDqkB,EAAUpkB,QAAU8C,KAAK1F,MAAMkb,iBAAiBtY,QAChDokB,EAAUnkB,YAAc6C,KAAK1F,MAAMkb,iBAAiBrY,YACpDmkB,EAAU5kB,KAAOsD,KAAK1F,MAAMkb,iBAAiB9Y,KAC7C4kB,EAAUtlB,kBAAoBgE,KAAK1F,MAAMkb,iBAAiBxZ,kBAC1DslB,EAAU5G,SAAW,CAAC,OAAS2G,EAAoB,aAAerhB,KAAK1F,MAAMkb,iBAAiB/W,mBAAmB,IAAIuB,KAAK1F,MAAMkb,iBAAiB9W,oBAC1I4iB,I,oCAGG5c,GAAY,IAAV2Y,EAAS,uDAAL,KAChB,GAAGA,GAEC,IADA3Y,GAAM,GACD,GAAI,MAAO,IAAIA,OAEpB,OAAQA,GACJ,KAAK,EACD,MAAO,uCAEX,KAAK,EACD,MAAO,6CAEX,KAAK,EACD,MAAO,iCAEX,KAAK,EACD,MAAO,uCAEX,KAAK,EACD,MAAO,qBAEX,KAAK,EACD,MAAO,2BAEX,KAAK,EACD,MAAO,2BAEX,KAAK,EACD,MAAO,6CAEX,KAAK,EACD,MAAO,mDAEX,KAAK,EACD,MAAO,6CAEX,KAAK,GACD,MAAO,uCAEX,KAAK,GACD,MAAO,6CAEX,QACI,OAAOA,K,gDAKGA,GAAG,IAAD,OACxB,OAAOA,GACH,KAAK,EACD,IAAIsd,EAAU,IAAIC,KAAKjiB,KAAK1F,MAAMkb,iBAAiB/W,oBAInD,OAAO,6BACC,kBAAC,IAAD,CAAOmK,MAAM,0IACR5I,KAAKkiB,sBAGV,kBAAC,IAAD,CAAOtZ,MAAM,2IACT,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIyD,OAAQ,kBAAC,IAAD,MACR0B,YAAa,8BACX,2BAAI/N,KAAK1F,MAAMkb,iBAAiBvX,uBAElC0C,KAAK,KAC+B,IAAnCX,KAAK1F,MAAM0C,oBAA4B,qGAAuB,2FAEnE,kBAAC,IAAD,CACAqP,OAAQ,kBAAC,IAAD,MACR0B,YAAa/N,KAAK1F,MAAMkb,iBAAiBhX,cAAgB,4HACrD,+BAAKwjB,EAAQG,UAAU,IAAIniB,KAAKoiB,cAAcJ,EAAQK,YAAW,GAAO,IAAIL,EAAQM,iBAAiB,kBAAQtiB,KAAK1F,MAAMkb,iBAAiB9W,qBAH7I,8HAQA,kBAAC,IAAD,CAAM2N,OAAQ,kBAAC,IAAD,OAAd,qFAAgD,2BAAIrM,KAAK1F,MAAM8C,aAC9D4C,KAAKuiB,kBACN,kBAAC,IAAD,CAAMlW,OAAQ,kBAAC,IAAD,OAAd,iDAAgD,uBAAG6J,UAAU,eAAelW,KAAKwiB,kBAAjC,cAGxD,kBAAC,IAAD,CAAO5Z,MAAM,6EACT,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO8Q,KAAK,eAAe3e,MAAM,IAC1BgT,YAAY,wKACZ6L,eAAwD,IAAxC5Z,KAAK1F,MAAMkb,iBAAiBtY,QAC5C2D,QAAS,WAAO,EAAKvG,MAAM4Q,UAAU,CAAChO,QAAQ,MAHrD,oDAIA,kBAAC,IAAD,CAAOwc,KAAK,eAAe3e,MAAM,IAAIgT,YAAY,8MAC1C6L,eAAwD,IAAxC5Z,KAAK1F,MAAMkb,iBAAiBtY,QAC5C2D,QAAS,WAAO,EAAKvG,MAAM4Q,UAAU,CAAChO,QAAQ,MAFrD,qDAKJ,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC0e,EAAA,EAAD,CAAgB1Q,UAAWlL,KAAKI,SAASxB,KAAKoB,MAC9B6K,SAAU7K,KAAK1F,MAAMuQ,SACrBiR,cAAe9b,KAAKyiB,eACpB1G,kBAAmB/b,KAAK1F,MAAM4Q,UAAUtM,KAAKoB,MAC7C2L,kBAAmB3L,KAAK1F,MAAMqR,kBAAkB/M,KAAKoB,aASjG,QACI,OACI,kBAAC,IAAD,CACIS,KAAM,kBAAC,IAAD,MACNC,OAAQ,kBAAC,IAAD,CAAQC,KAAK,IAAIC,MAAM,WAAWC,QAAS,WAAK,EAAKvG,MAAMoG,OAAO,CAAC8I,YAAa,eAAhF,iJAGR,6MACA,sb,0CAOhB,OAAiD,IAA9CxJ,KAAK1F,MAAMkb,iBAAiBhX,cAC2B,OAAnDwB,KAAK1F,MAAMkb,iBAAiB/W,mBACpBuB,KAAK0iB,2BAA0B,GAEgB,OAAnD1iB,KAAK1F,MAAMkb,iBAAiB9W,mBACpBsB,KAAK0iB,2BAA0B,GAE/B1iB,KAAK0iB,2BAA0B,GAKvC1iB,KAAK0iB,2BAA0B,K,8CAKtB,IAAD,OACnB,OAAsC,IAAnC1iB,KAAK1F,MAAM0C,qBAA2D,OAA9BgD,KAAK1F,MAAMwC,eAE9C,kBAAC,IAAD,CACI2D,KAAM,kBAAC,IAAD,MACNC,OAAQ,kBAAC,IAAD,CAAQC,KAAK,IAAIC,MAAM,WAAWC,QAAS,WAAK,EAAKvG,MAAMoG,OAAO,CAAC8I,YAAa,eAAhF,8EAGZ,oLACI,0uBAKAxJ,KAAK2iB,sB,+BAKjB,OACI3iB,KAAK4iB,wB,GA7TU3W,IAAMC,WCA3B2W,EAAS5Z,cAGT6Z,E,YAEF,WAAaxoB,GACZ,IAAD,8BACI,4CAAMA,KACDY,MAAQ,CACTsO,YAAY,OACZ+I,OAAO,KACPtW,eAAe,EAAK3B,MAAM2B,gBALlC,E,0EAUa6E,GACTd,KAAKI,SAAS,CAACoJ,YAAa1I,M,0CAI5B,IAA4BiiB,EAAW5M,EAAX4M,EAQf/iB,KAAK9E,MAAMe,eAReka,EAQAnW,KAAKmW,UAAUvX,KAAKoB,MAR3D,EAAA0E,EAAAC,OAAA,iDACsB,IAAfoe,EACC5M,IAEAA,EAAU,MAJlB,uC,sFAiBA,GAAG5U,OAAOC,KAAKxB,KAAK1F,MAAMsQ,sBAAsBtL,MAAMmC,OAAQ,EAAE,CAC5D,IAAMuhB,EAAchjB,KAAK1F,MAAMsQ,sBAAsBtL,KAAK3E,KAAI,SAACoI,EAAMkgB,GACjE,OACI,yBAAKnoB,IAAKmoB,EAAO,gBAAiBlgB,EAAM6F,MAAxC,OAAmD7F,EAAMpB,MAAzD,IAAiEoB,EAAMmgB,cAG/E,OACI,kBAAC,IAAD,CACAta,MAAM,6GACF1F,MAAO,CAAC8P,UAAU,SAASmQ,SAAU,WACrC,yBAAKngB,IAAKhD,KAAK1F,MAAMsQ,sBAAsB3H,IACtCC,MAAO,CACHmW,MAAO,OACP/V,MAAO,MACP8K,WAAW,KACXwG,YAAY,QAGrB,kBAAC,IAAD,CAAK1R,MAAO,CAAC8P,UAAU,OAAO,WAAa,QAAQoQ,aAAa,MAAOJ,IAK/E,MAAO,K,6CAIQ,IAAD,OAElB,GAAGzhB,OAAOC,KAAKxB,KAAK1F,MAAMyB,gBAAgB0F,OAAS,EAAG,CAClD,IAAM4hB,EAAiB9hB,OAAOC,KAAKxB,KAAK1F,MAAMyB,gBAAgBpB,KAC1D,SAACoI,EAAMkgB,GACH,OACI,yBAAK/M,UAAU,yBAAyBpb,IAAKiI,GACzC,yBAAKmT,UAAU,sBACX,yBAAKlT,IAAK,oBAAoB,EAAK1I,MAAMyB,eAAegH,GAAOE,OAEnE,yBAAKiT,UAAU,wBACV,EAAK5b,MAAMyB,eAAegH,GAAO6F,OAEtC,yBAAKsN,UAAU,uCACV,EAAK5b,MAAMyB,eAAegH,GAAOnB,MADtC,WAGA,yBAAKsU,UAAU,yBACV,EAAKoN,oBACF,EAAKhpB,MAAMyB,eAAegH,GAAO9C,GACjC,EAAK3F,MAAMqQ,cAAc/L,KAAK,GAC9B,EAAK2kB,uBACD,EAAKjpB,MAAMyB,eAAegH,GAAO9C,GACjC,EAAK3F,MAAM0B,mBAEf,EAAK1B,MAAMyB,eAAegH,GAAOnB,YAQzD,OACI,kBAAC,IAAD,CAAOgH,MAAM,gGACT,kBAAC,IAAD,KACI,yBAAK9N,IAAI,qBACJoI,MAAO,CAACwR,QAAQ,OAAOgH,cAAc,SACxC2H,EACE,yBAAKngB,MAAO,CAACwR,QAAQ,QAAQpR,MAAM,OAAOC,OAAO,MAAMigB,SAAS,UAEpE,yBAAKtN,UAAU,UAM3B,MAAQ,K,6CAIOuN,EAAKC,GAExB,OAAGD,KAAQC,EACAA,EAAKD,GAAM9hB,MAEX,I,0CAIKgiB,EAAUvZ,GAA0B,IAAD,OAAjBrD,EAAiB,uDAAR,EAAEnF,EAAM,uCAC7CgiB,EACF,yBAAK1N,UAAU,gBAAgBhT,MAAO,CAACmW,MAAM,OAAO4C,OAAO,OAAOvH,QAAQ,QAAQpR,MAAM,UACpF,yBAAK4S,UAAU,QAAQrV,QAAS,WAChC,EAAKT,SAAS,CAAC,gBAAiB,IAC5BgK,EAAQuZ,EAAU,IAAI/hB,KAF1B,KAMCmF,EACD,yBAAKmP,UAAU,QAAQrV,QAAS,WAC5B,EAAKT,SAAS,CAAC,gBAAiB,IAChCgK,EAAQuZ,EAAU,IAAI/hB,KAF1B,MAQR,OAAOgiB,I,gCAGD9iB,GACG,KAANA,EAECd,KAAKI,SAAS,CAACmS,OAAQ,mCAGvBvS,KAAKI,SAAS,CAACmS,OAAQzR,M,+BAKtB,IAAD,OAsBL,SAAU+iB,EAAc5jB,EAAI6jB,EAAS1Z,GAAS,IAAD,OAExC,GAAG0Z,EAASriB,QAAQ,EAChB,OAAO,yBAAKyB,MAAO,CAAC,UAAY,SAAS,QAAU,WAAW,UAAY,SAAS,yGAAsB,ycAGzG,IAAIoL,EAAUwV,EAASnpB,KAAI,SAACopB,EAAYC,GAAb,OACvB,yBAAK9N,UAAU,qBAAqBpb,IAAK,iBAAiBkpB,GACtD,yBAEA9N,UAAU,eACVhT,MAAO,CACH,MAAS,QACT,OAAU,OACV,QAAW,KACX,MAAQ,OACR+gB,aAAa,KAGb,yBAAK/N,UAAU,oBACX,yBAAKlT,IAAK+gB,EAAY9gB,OAE1B,yBAAKiT,UAAU,gBAEV6N,EAAYnb,MAFjB,IAEwB,0BAAMsN,UAAU,YAAY6N,EAAY3D,YAEhE,yBAAKlK,UAAU,iBACV6N,EAAYhW,aAEjB,yBAAK7K,MAAO,CAACghB,MAAM,SAEf,0BAAMhO,UAAU,gBAAhB,mCAmBxB,SAA0B6N,GAEtB,MAAK,mBAAoBA,IAA+C,IAA/BA,EAAY/hB,eAO7C,0BAAMkU,UAAU,kBAChB,uBAAGA,UAAU,kBAAkBhT,MAAO,CAACmd,WAAW,MAAMlS,SAAS,QAAQyG,YAAY,MAAMtI,MAAM,YAAayX,EAAYpiB,MAAQoiB,EAAY/hB,eAAese,UAA7J,WACKyD,EAAYpiB,MAAQoiB,EAAY/hB,eAAeC,UAFpD,WANI,0BAAMiU,UAAU,kBACvB6N,EAAYpiB,MAAQoiB,EAAYniB,MADzB,WAtB+CuiB,CAAiBJ,IACxD,yBAAK7N,UAAU,kBAAiBhT,MAAO,CAACI,MAAM,OAAO8gB,QAAQ,IAAI,kBAAC,IAAD,CAAY/Z,aAAcyZ,EAAUO,aAAcN,EACtEO,SAAUla,EAAQxL,KAAK,QAG5E,kBAAC,IAAD,CAAWsE,MAAO,CAAE+Y,OAAQ,gBAIpC,OAAO,yBAAK/F,UAAU,qBAAqB5H,GA6BnD,SAASiW,EAAoBC,EAAS9jB,GAEnC,OAAO8jB,GACH,IAAI,IAAK,IAAIC,EAAc,yBAAKvO,UAAU,yBAAwB,4BAAQA,UAAU,eAAerV,QAAS,WAAMH,EAAO,CAAC8I,YAAa,WAArE,qDAAvC,IAA2I,4BAAQ3I,QAAS,WAAMH,EAAO,CAAC8I,YAAa,cAAgBkb,UAAQ,YAApE,gEAA3I,IAA8O,4BAAQ7jB,QAAS,WAAMH,EAAO,CAAC8I,YAAa,YAA5C,yCAA+E,MACxV,IAAI,IAASib,EAAc,yBAAKvO,UAAU,yBAAwB,4BAAQrV,QAAS,WAAMH,EAAO,CAAC8I,YAAa,WAA5C,qDAAvC,IAAkH,4BAAQ0M,UAAU,eAAerV,QAAS,WAAMH,EAAO,CAAC8I,YAAa,cAAgBkb,UAAQ,YAA7F,gEAAlH,IAA8O,4BAAQ7jB,QAAS,WAAMH,EAAO,CAAC8I,YAAa,YAA5C,yCAA+E,MACxV,IAAI,IAASib,EAAc,yBAAKvO,UAAU,yBAAwB,4BAAQrV,QAAS,WAAMH,EAAO,CAAC8I,YAAa,WAA5C,qDAAvC,IAAkH,4BAAQ3I,QAAS,WAAMH,EAAO,CAAC8I,YAAa,cAAgBkb,UAAQ,YAApE,gEAAlH,IAAqN,4BAAQxO,UAAU,eAAerV,QAAS,WAAMH,EAAO,CAAC8I,YAAa,YAArE,yCAGpP,OACI,kBAAC,IAAD,KACKib,GA4CZ,OACI,kBAAC,IAAD,CACIjb,YAAaxJ,KAAK9E,MAAMsO,YACxB0M,UACI2M,IAAW/Y,IACP,cAEA,kBAERyI,OAAQvS,KAAK9E,MAAMqX,OACnB7J,SAAQ1I,KAAK1F,MAAMoQ,YAAYjJ,QAAQ,IASlCzB,KAAK1F,MAAMoQ,YAAYjJ,QAAQ,EAxDrC,kBAAC,IAAD,CAAOxB,GAAG,QAEN,kBAAC,IAAD,CACIQ,KAAM,kBAAC,IAAD,MACNC,QAAQ,GAGR,yGACA,wSAOf,SAAwBgK,EAAYN,EAAQ/M,EAAQ+C,EAASukB,EAAiB5oB,GAC3E,OACI,kBAAC,IAAD,CAAOkE,GAAG,QACV,kBAAC,IAAD,CAAayJ,MAAM,SAAnB,IAA6B6a,EAAoB,IAAKnkB,EAASxB,KAAKoB,QACpE,kBAAC,IAAD,CAAO4I,MAAM,wCACZ,kBAAC,IAAD,CAAKsN,UAAU,4BACd2N,EAAc,EAASnZ,EAAaN,EAAQxL,QACjD,yBAAKsE,MAAO,CAACghB,MAAM,YAGXS,EACA5oB,EACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKma,UAAU,sBAAf,kEAAiD,0BAAMA,UAAU,eAAe7Y,EAA/B,aAErD,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAAQsD,KAAK,KAAKE,QAAS,WAAMT,EAAS,CAACoJ,YAAa,cAAgBkb,UAAQ,YAAhF,yEA4BWE,CAAe5kB,KAAK1F,MAAMoQ,YAAa1K,KAAK1F,MAAM8P,QAAQxL,OAAOoB,KAAK1F,MAAM+C,QAAS2C,KAAKI,SAASxB,KAAKoB,MAAMA,KAAK2kB,mBAAmB3kB,KAAK6kB,wBAGnJ,kBAAC,IAAD,CAAO5kB,GAAG,YACN,kBAAC,IAAD,CAAayJ,MAAM,SAAS6a,EAAoB,IAAKvkB,KAAKI,SAASxB,KAAKoB,QACxE,kBAACmT,EAAA,EAAD,CACI5W,eAAgByD,KAAK1F,MAAMiC,eAC3BsO,SAAU7K,KAAK1F,MAAMuQ,SACrBxK,kBAAmBL,KAAK1F,MAAM+F,kBAAkBzB,OAEhD9B,eAAgBkD,KAAK1F,MAAMwC,eAC3BgO,kBAAmB9K,KAAK1F,MAAMwQ,kBAAkBlM,KAAKoB,MAErDjD,iBAAkBiD,KAAK1F,MAAMyC,iBAC7BgO,oBAAqB/K,KAAK1F,MAAMyQ,oBAAoBnM,KAAKoB,MAEzDhD,oBAAqBgD,KAAK1F,MAAM0C,oBAChCgO,gBAAiBhL,KAAK1F,MAAM0Q,gBAAgBpM,KAAKoB,MAEjD/C,WAAY+C,KAAK1F,MAAM2C,WACvBgO,WAAYjL,KAAK1F,MAAM2Q,WAAWrM,KAAKoB,MAEvC7C,YAAa6C,KAAK1F,MAAM6C,YAExB+N,UAAWlL,KAAK1F,MAAM4Q,UAAUtM,KAAKoB,MACrCmL,qBAAsBnL,KAAK1F,MAAM6Q,qBAAqBvM,KAAKoB,MAC3DqL,kCAAmCrL,KAAK1F,MAAM+Q,kCAAkCzM,KAAKoB,MAGrF3C,QAAS2C,KAAK1F,MAAM+C,QAEpB8Y,UAAWnW,KAAKI,SAASxB,KAAKoB,MAC9B0K,YAAa1K,KAAK1F,MAAMoQ,YAExBY,UAAWtL,KAAK1F,MAAMgR,UAAU1M,KAAKoB,MACrCuL,WAAYvL,KAAK1F,MAAMiR,WAAW3M,KAAKoB,MAEvCwV,iBAAkBxV,KAAK1F,MAAMkR,sBAGjC,kBAAC,IAAD,CAAKtI,MAAO,CAACwR,QAAS,SAClB,kBAAC,IAAD,CAAQ/T,KAAK,IAAIH,WAAS,EAACI,MAAM,YAAasC,MAAO,CAAE0R,YAAa,GAAKsB,UAAU,eAAerV,QAAS,WAAM,EAAKT,SAAS,CAACoJ,YAAa,WAA7I,qDACA,kBAAC,IAAD,CAAQ7I,KAAK,IAAIH,WAAS,EAAC0V,UAAU,eAAerV,QAAS,WAAM,EAAKT,SAAS,CAACoJ,YAAa,YAA/F,iDAGR,kBAAC,IAAD,CAAOvJ,GAAG,SACN,kBAAC,IAAD,CAAayJ,MAAM,SAAS6a,EAAoB,IAAKvkB,KAAKI,SAASxB,KAAKoB,QACxE,kBAAC,EAAD,CACIzD,eAAgByD,KAAK1F,MAAMiC,eAC3BsO,SAAU7K,KAAK1F,MAAMuQ,SACrBzN,WAAY4C,KAAK1F,MAAM8C,WACvB8N,UAAWlL,KAAK1F,MAAM4Q,UAAUtM,KAAKoB,MACrC3C,QAAS2C,KAAK1F,MAAM+C,QACpBL,oBAAqBgD,KAAK1F,MAAM0C,oBAChCF,eAAgBkD,KAAK1F,MAAMwC,eAE3B0Y,iBAAkBxV,KAAK1F,MAAMkR,oBAE7BkV,yBAA0B1gB,KAAK1F,MAAM0C,oBAAsBgD,KAAK1F,MAAM+Q,kCAAkCzM,KAAKoB,MAAQA,KAAK1F,MAAM6Q,qBAAqBvM,KAAKoB,MAG1JU,OAAQV,KAAKI,SAASxB,KAAKoB,MAE3B2L,kBAAmB3L,KAAK1F,MAAMqR,kBAAkB/M,KAAKoB,QAEzD,kBAAC,IAAD,CAAKkD,MAAO,CAACwR,QAAS,SAClB,kBAAC,IAAD,CAAQ/T,KAAK,IAAIC,MAAM,YAAYJ,WAAS,EAAC0C,MAAO,CAAE0R,YAAa,GAAKsB,UAAU,eAAerV,QAAS,WAAM,EAAKT,SAAS,CAACoJ,YAAa,cAAgBkb,UAAQ,YAApK,8E,GAjYEzY,IAAMC,WA4YjB4W,O,qaCjZflf,IAAQuE,KAAK,gBAQb2c,IAASC,OAAO,kBAAC,IAAD,MAASljB,SAASmjB,eAAe,U,iEClBjD,YAEAhmB,EAAOC,OAAS,mCAEhBD,EAAOT,aAAe,K,qCCJtB0mB,EAAOC,QAAU,IAA0B,oC,uKCMrCC,E,YACF,WAAY7qB,GAAQ,IAAD,8BACf,4CAAMA,KACDY,MAAQ,CACLyc,KAAM,GACNC,OAAQ,GACRC,KAAM,GACNuN,SAAU,GACVxkB,MAAO,GACPykB,KAAM,GACNrM,QAAQ,IAGhB,EAAKsM,aAAe,CAEhB,CAAE/b,MAAO,kFAAkBmQ,KAAM,SAAU6L,YAAY,MAAOC,SAAS,EAAGC,OAAO,IACjF,CAAElc,MAAO,kCAAUmQ,KAAM,OAAQ6L,YAAY,MAAOC,SAAS,EAAGC,OAAO,IACvE,CAAElc,MAAO,yFAAoBmQ,KAAM,OAAQ6L,YAAY,GAAIC,SAAS,EAAGC,OAAO,IAC9E,CAAElc,MAAO,0DAAcmQ,KAAM,WAAY6L,YAAY,GAAIC,SAAS,EAAGC,OAAO,IAC5E,CAAElc,MAAO,2BAAQmQ,KAAM,QAAS6L,YAAY,GAAIC,SAAS,EAAGC,OAAO,IACnE,CAAElc,MAAO,+DAAcmQ,KAAM,UAAW6L,YAAY,GAAIC,SAAS,EAAGC,OAAO,gIAG/E,EAAKvQ,SAAW,EAAKA,SAAStW,KAAd,gBAChB,EAAK6a,YAAc,EAAKA,YAAY7a,KAAjB,gBAEnB,EAAKma,YAAc,EAAKA,YAAYna,KAAjB,gBAEhB,EAAKtE,MAAM4c,cACV,EAAKhc,MAAQ,CACL+E,GAAG,EAAK3F,MAAM4c,YAAYjX,GAC1B0X,KAAM,EAAKrd,MAAM4c,YAAYS,KAC7BC,OAAQ,EAAKtd,MAAM4c,YAAYU,OAC/BC,KAAM,EAAKvd,MAAM4c,YAAYW,KAC7BuN,SAAU,EAAK9qB,MAAM4c,YAAYoC,OACjC1Y,MAAO,EAAKtG,MAAM4c,YAAYqC,KAC9B8L,KAAM,EAAK/qB,MAAM4c,YAAYsC,SAC7BR,QAAS,EAAK1e,MAAM4c,YAAY8B,UApC7B,E,sEAyCVlY,GAAI,IAAD,EACgBA,EAAEC,cAAlB2Y,EADA,EACAA,KAAM3e,EADN,EACMA,MAIdiF,KAAKI,SAAL,eAAgBsZ,EAAO3e,M,oCAMvBiF,KAAK1F,MAAM6b,UAAU,CAAE5D,OACf,kBAAC,IAAD,CACIxJ,QAAS,CAAC,CACNH,MAAO,yDACPuQ,WAAW,EACXjW,MAAO,WAEXsF,QAASxI,KAAK+Y,aAEd,oLACA,iX,uCAOC,IAAD,OACW,KAApB/Y,KAAK9E,MAAMyc,MAAqC,KAAtB3X,KAAK9E,MAAM0c,QAAqC,KAApB5X,KAAK9E,MAAM2c,KAChE7X,KAAKyZ,eAGLzZ,KAAK1F,MAAM6b,UAAU,CAAE5D,OAAO,kBAAC,IAAD,QAG9B1T,IAAM,qDAAqDG,EAAOC,OAC9D,CACIH,OAAQ,OACRqD,QAAS,CAAE,eAAgB,qCAC3B/C,KAAM,CACF6Z,YAAYjZ,KAAK9E,MACjBmZ,SAASrU,KAAK1F,MAAMuQ,SAAS5K,IAEjCf,aAAa,SAEhBC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACF,UAAWA,EACVK,QAAQC,IAAIN,EAAK5C,MAAM,IAAI4C,EAAKmD,YAEF,IAA3BnD,EAAKS,OAAOqZ,YACXzZ,QAAQC,IAAI,8FAAmBN,GAC3B,EAAK9E,MAAM2c,uBACf,EAAK3c,MAAM6b,UAAU,CAAE5D,OAAO,OAC9B,EAAKjY,MAAMwQ,kBAAkB,IAE7BrL,QAAQC,IAAI,wCAAUN,MAIjCG,OAAM,SAACC,GACJC,QAAQC,IAAI,oHAAoCF,S,wCAK9C,IAAD,OACU,KAApBQ,KAAK9E,MAAMyc,MAAqC,KAAtB3X,KAAK9E,MAAM0c,QAAqC,KAApB5X,KAAK9E,MAAM2c,KAChE7X,KAAKyZ,eAGLzZ,KAAK1F,MAAM6b,UAAU,CAAE5D,OAAO,kBAAC,IAAD,QAG9B1T,IAAM,sDAAsDG,EAAOC,OAC/D,CACIH,OAAQ,OACRqD,QAAS,CAAE,eAAgB,qCAC3B/C,KAAM,CACF6Z,YAAYjZ,KAAK9E,MACjBmZ,SAASrU,KAAK1F,MAAMuQ,SAAS5K,IAEjCf,aAAa,SAEhBC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACF,UAAWA,EACVK,QAAQC,IAAIN,EAAK5C,MAAM,IAAI4C,EAAKmD,YAEF,IAA3BnD,EAAKS,OAAOqZ,YACXzZ,QAAQC,IAAI,8FAAmBN,GAC3B,EAAK9E,MAAM2c,uBACf,EAAK3c,MAAM6b,UAAU,CAAE5D,OAAO,QAG9B9S,QAAQC,IAAI,wCAAUN,MAIjCG,OAAM,SAACC,GACJC,QAAQC,IAAI,oHAAoCF,S,oCAO5DQ,KAAK1F,MAAM6b,UAAU,CAAE5D,OAAQ,S,oCAGrBmT,GAAkB,wDAC5B,GAAGA,KAAU1mB,EAAOT,aAAc,CAC9B,IAAMonB,EAAiB3mB,EAAOT,aAAamnB,GAAQE,SAC7CC,EAAYtkB,OAAOC,KAAKxC,EAAOT,aAAamnB,GAAQE,UACpDE,EAAaD,EAAUlrB,KAAI,SAACyE,EAAMtE,GACpC,OAAQ,4BACJA,IAAKA,EACLC,MAAO4qB,EAAevmB,GAAMwJ,OAGxB+c,EAAevmB,GAAMwJ,UAIjC,OACIkd,EAGJ,MAAQ,K,sCAIA,IAAD,OACX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ7Q,YAAY,+HAA2BC,SAAUlV,KAAKkV,SAAUwE,KAAK,OAAO5e,IAAK,aAAcka,IAAI,kCACtGhV,KAAK+lB,cAAc,IAEvB/lB,KAAKslB,aAAa3qB,KAAI,gBAAG4O,EAAH,EAAGA,MAAOmQ,EAAV,EAAUA,KAAM6L,EAAhB,EAAgBA,YAAaC,EAA7B,EAA6BA,SAAUC,EAAvC,EAAuCA,OAAvC,OACnB,kBAAC,IAAD,CACI3lB,KAAK,OACL4Z,KAAMA,EACN5e,IAAK,SAAS4e,EACd1E,IAAKzL,EACL2L,SAAU,EAAKA,SACfxS,OACI6iB,EACI,EAAKrqB,MAAMwe,IACP,EAAKxe,MAAMwe,GAAMjY,QAAS+jB,EAAY,QACpC,QACJ,GAEVpB,OACImB,EACI,EAAKrqB,MAAMwe,GACP,EAAKxe,MAAMwe,GAAMjY,QAAS+jB,EAAY,GAAK,+KAAmC,EAAKtqB,MAAMwe,GAAMjY,OAC7F,yIACJ,GAEVwT,YAAawQ,OAGrB,kBAAC,IAAD,CAAQ9kB,KAAK,IAAIuC,MAAO,CAAC2R,WAAW,WAAYhU,QAAS,WAAK,EAAKmlB,iBAAqB,EAAK1rB,MAAMiR,YAAY,EAAKjR,MAAMiR,eAA1H,wG,oCAME,IAAD,OACT,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ0J,YAAY,+HAA2BC,SAAUlV,KAAKkV,SAAUwE,KAAK,OAAO5e,IAAK,aAAcka,IAAI,iCAAQK,aAAcrV,KAAK9E,MAAMyc,MACvI3X,KAAK+lB,cAAc,IAEvB/lB,KAAKslB,aAAa3qB,KAAI,gBAAG4O,EAAH,EAAGA,MAAOmQ,EAAV,EAAUA,KAAM6L,EAAhB,EAAgBA,YAAaC,EAA7B,EAA6BA,SAAUC,EAAvC,EAAuCA,OAAvC,OACnB,kBAAC,IAAD,CACI3lB,KAAK,OACL4Z,KAAMA,EACN5e,IAAK,SAAS4e,EACd1E,IAAKzL,EACL2L,SAAU,EAAKA,SACfxS,OACI6iB,EACI,EAAKrqB,MAAMwe,IACP,EAAKxe,MAAMwe,GAAMjY,OAAQ+jB,EAAY,QACnC,QACJ,GAEVzqB,MAAO,EAAKG,MAAMwe,GAClB0K,OACImB,EACI,EAAKrqB,MAAMwe,GACP,EAAKxe,MAAMwe,GAAMjY,OAAQ+jB,EAAY,GAAK,8KACxC,yIACJ,GAEVvQ,YAAawQ,OAGrB,kBAAC,IAAD,CAAQ9kB,KAAK,IAAIuC,MAAO,CAAC2R,WAAW,WAAYhU,QAAS,WAAK,EAAKolB,kBAAsB,EAAK3rB,MAAMiR,YAAY,EAAKjR,MAAMiR,eAA3H,kJ,+BAMR,OACI,kBAAC,IAAD,KACKvL,KAAK1F,MAAM4c,YAAclX,KAAKkmB,cAAgBlmB,KAAKmmB,qB,GAxPvCla,IAAMC,WA8PpBiZ,Q,kDCpQf,2DAIe,SAASiB,EAAT,GAA4D,IAArC/b,EAAoC,EAApCA,aAElC,SAASoV,EAAW1d,EAAYqI,GAO5B,OAJI,4BAAQvJ,QAAS,WAAOuJ,EAAQrI,KAAhC,qDAkDR,OA5BA,SAAgCA,EAAYqI,GAExC,GAAKC,EAAa,CACd,IAAIiV,GAAQ,EACRC,EAAY,GAShB,OARAlV,EAAa1P,KAAI,SAACyE,EAAKtE,GAEhBsE,EAAKiI,aAAetF,EAAYsF,WAAajI,EAAKkI,eAAiBvF,EAAYuF,eAC9EgY,GAAQ,EACRC,EAAYzkB,OAIP,IAAVwkB,EA5BX,SAAwBvd,EAAYgF,EAAOqD,GAYvC,OAVI,yBAAK8L,UAAU,iBACX,yBAAKA,UAAU,QAAQrV,QAAS,WAAOuJ,EAAQrI,EAAY,OAA3D,KAGCgF,EACD,yBAAKmP,UAAU,QAAQrV,QAAS,WAAOuJ,EAAQrI,KAA/C,MAuBQyd,CAAezd,EAAYsI,EAAakV,GAAb,MAAiCnV,GAG7DqV,EAAW1d,EAAYqI,GAIlC,OAAOqV,EAAW1d,EAAYqI,GAM/BqT,CAvD+D,EAAvB4G,aAAuB,EAAVC,Y,gCCJhE,6DAGA,SAAS1U,EAAiBtG,GACtB,OAAOA,EACF6F,QAAQ,SAAU,KAClBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,UAAW,KACnBA,QAAQ,UAAW,KAGb,SAAS6O,EAAT,GAA2G,IAAtFC,EAAqF,EAArFA,QAAqF,EAA7EW,WAwBxC,SAASyH,EAAcpD,EAAQqD,EAAUC,EAAWC,GAChDvD,GAAUA,EAAS,IAAI9T,QAAQ,gBAAiB,IAChD,IAAIzN,EAAK+kB,UAAUxD,IAAeA,EAAL,EACzByD,EAAQD,UAAUH,GAAgBK,KAAKC,IAAIN,GAAb,EAC9BO,EAA4B,qBAAdL,EAA6B,IAAMA,EACjDM,EAA4B,qBAAdP,EAA6B,IAAMA,EACjDQ,EAAI,GAkBR,OAXAA,GAAKL,EANY,SAAShlB,EAAGglB,GACrB,IAAIM,EAAIL,KAAKM,IAAI,GAAIP,GACrB,MAAO,IAAMC,KAAKO,MAAMxlB,EAAIslB,GAAKA,GAC5BG,QAAQT,GAGTU,CAAW1lB,EAAGglB,GAAQ,GAAKC,KAAKO,MAAMxlB,IAC7ChH,MAAM,MACL,GAAG+G,OAAS,IACdslB,EAAE,GAAKA,EAAE,GAAG5X,QAAQ,0BAA2B0X,KAE9CE,EAAE,IAAM,IACRtlB,OAASilB,IACVK,EAAE,GAAKA,EAAE,IAAM,GACfA,EAAE,IAAM,IAAIM,MAAMX,EAAOK,EAAE,GAAGtlB,OAAS,GAClC6lB,KAAK,MAEPP,EAAEO,KAAKR,GAsGlB,OAzEA,SAAuB/U,EAAY6M,EAAWV,EAAa9T,EAAQoT,EAAiBC,GAGhF,IAAI8J,EAAaxV,EAiDjB,OA3CsBwV,EAAW5sB,KAAI,SAACoH,EAAYylB,GAAb,OACjC,kBAAC,IAAD,CAAK1sB,IAAK,iBAAiBiH,EAAYsF,WAAW,IAAImgB,EAAetR,UAAU,eAAejW,GAAI,cAAc8B,EAAYsF,WAAW,SAAStF,EAAYuF,cAxBpK,SAA4BmgB,GACxB,IAAIC,EAAUnmB,OAAOC,KAAKimB,GAC1B,GAAGC,EAAQjmB,QAAS,EAChB,MAAO,GAEP,IAAIkmB,EAAaD,EAAQ/sB,KAAI,SAACoI,EAAMvB,GAChC,OAAQ,yBAAK1G,IAAK0G,EAAM0U,UAAU,qBAAoB,yBAAKlT,IAAKykB,EAAS1kB,GAAO6kB,cAEpF,OACI,yBAAK1R,UAAU,mBAAmByR,GAgBjCE,CAAmB9lB,EAAY+lB,YAChC,kBAAC,IAAD,CAAK5R,UAAU,oBACX,yBACIsI,IAAKzc,EAAY6G,MACjB5F,IAAKjB,EAAYkB,IACjBpC,QAAS,WACLqd,EAAa,kBACbV,EAAgB,CAACzb,IACjBtC,QAAQC,IAAI,mFAAkB6nB,EAAWC,OAIrD,kBAAC,IAAD,CAAKtR,UAAU,gBAEVtG,EAAiB7N,EAAY6G,OAC9B,0BAAMsN,UAAU,aApDN6R,EAqDYhmB,EAAYimB,OApDrB,WADYC,EAqDgBlmB,EAAYmmB,aAlDzD7B,EAAc0B,EAAe,IAAI,IAAK,KAAK,IAAIE,EAI/CF,EAAe,IAAIE,KAiDnB,kBAAC,IAAD,CAAK/R,UAAU,gBACVtG,EAAiB7N,EAAYgM,aAC9B,8BAE0B,IAAzBhM,EAAYqe,UACT,yBAAKlK,UAAU,eACVnU,EAAYqe,WAGjB,IAGR,kBAAC,IAAD,CAAKlK,UAAU,mBAa3B,SAA0BnU,GACtB,MAAK,mBAAoBA,IAA+C,IAA/BA,EAAYC,eAO7C,0BAAMkU,UAAU,gBACZ,uBAAGA,UAAU,kBAAkBhT,MAAO,CAACmd,WAAW,MAAMlS,SAAS,QAAQyG,YAAY,QAASyR,EAActkB,EAAYC,eAAese,UAAU,IAAI,IAAI,KAAzJ,WACC+F,EAActkB,EAAYC,eAAeC,UAAU,IAAI,IAAI,KAFhE,WANI,0BAAMiU,UAAU,gBACnBmQ,EAActkB,EAAYH,MAAM,IAAI,IAAI,KADrC,WAbKuiB,CAAiBpiB,GAErB0b,EAAuB1b,EAAYqI,KAxEpD,IAA0B2d,EAAeE,KAoGrCE,CAAclK,EAAQW,EAvJ2F,EAAjEV,aAAiE,EAAnD9T,QAAmD,EAA1CoT,gBAA0C,EAAzBC,2B","file":"static/js/main.cef2c2c4.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport {platform, IOS, ModalRoot, ModalPage, ModalPageHeader, HeaderButton, Placeholder, Button, Gallery, Switch} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Icon56CheckCircleOutline from '@vkontakte/icons/dist/56/check_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport UserOrderList from './panels/ProfileUser/UserOrderList';\r\nimport OrderTypeList from './panels/ProfileUser/OrderTypeList';\r\nimport OrderShowDeail from './panels/ProfileUser/OrderShowDeail';\r\n\r\n\r\nimport Notice from './panels/Notice/index';\r\n\r\nimport ButtonCart from  \"./panels/catalog/ButtonInCart\";\r\n\r\n\r\nimport {Div, Epic, Tabbar, TabbarItem, Panel, PanelHeader} from '@vkontakte/vkui';\r\n//import Icon28Messages from '@vkontakte/icons/dist/28/messages';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\r\nimport Icon28User from '@vkontakte/icons/dist/28/user';\r\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport AppHome from \"./panels/Profile\";\r\nimport CatalogProduct from \"./panels/catalog/CatalogProduct\";\r\nimport './panels/catalog/product.css';\r\n\r\nimport GetCartHome from \"./panels/Cart/CartHome\";\r\n\r\nrequire('./panels/global/index.js');\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AudioInfo:{\r\n                ReloadBasket: new Audio('//sushi-time31.ru/audio/ReloadBasketInfo2.mp3')\r\n            },\r\n\r\n            Notice:[],\r\n            CountNotice:0,\r\n            CountNoticeNoView:null,\r\n\r\n            typeOrderGetText:'Текущие заказы',\r\n            typeOrderGet:'now',\r\n            numberOrderShow:0,\r\n            listOrderUser:[],\r\n\r\n            ParamStart:false,\r\n            products:[],\r\n            DopProductList:[],\r\n            DopProductUserSet:{},\r\n            LoadDopProduct:false,\r\n            loadingCatalog:false,\r\n            activeStory: 'catalog',\r\n            activePanelOrders:\"ListTypeOrder\",\r\n            loadingPage: true,\r\n            user:[],\r\n            userSystemInfo:{error:true,dataUser:\"\"},\r\n            cart:[],\r\n            countCartProduct:'',\r\n\r\n            dopPresets: [],\r\n            imgListPresets: false,\r\n\r\n            addressDefault:null,\r\n            AffiliateDefault:0,\r\n            checkedTypeDilivery:0,\r\n            commentary:\"\",\r\n            typePay:1,\r\n            countPerson:1,\r\n            SalePoints:0,\r\n            sumCart:0,\r\n            activeModal:null,\r\n            formNewAddressData:'',\r\n            formEditAddressData:'',\r\n\r\n            listAddressGlobal:[],\r\n            listAffiliateGlobal:[],\r\n\r\n            priceDelivery:0,\r\n            minSumOrder:300,\r\n            minSumFreeDelivery:0,\r\n\r\n            //Если сумма корзины меньше необходимой для заказа\r\n            errorOrderFinal:false,\r\n            //Если сумма корзины меньше бесплатной доставки\r\n            DeliveryPriceItog:false,\r\n\r\n            //Доставка на адрес возможна, сли false, то не возможна\r\n            DeliveryAddressOKCity:true,\r\n\r\n            //Адрес, для отображения в последнем блоке корзины\r\n            addressOrderInfoUser:'',\r\n            newOrderStats:false,\r\n\r\n            StatusLoadSlide:false,\r\n            slideHeaderArray:[],\r\n            slideIndex: 0,\r\n\r\n            StatusNotification:false,\r\n\r\n            CityListBind:[],\r\n\r\n            typeOrderDate:true,\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    getCityUser(){\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getCity&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n\r\n                }else{\r\n                    this.state.ListCitySelect = data.list;\r\n                    global.CityListBind = data.list;\r\n                   // console.log('Установили города',global.CityListBind);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения городов',err);\r\n            });\r\n    }\r\n\r\n    getNotice(idUsers){\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getNotice&idUserVK='+idUsers+'&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    //console.log('Получили уведомления',data);\r\n                    this.state.CountNotice = null;\r\n                    this.state.CountNoticeNoView = null;\r\n                    this.state.Notice = [];\r\n                }else{\r\n                    if((this.state.CountNoticeNoView !== data.CountNoticeNoCheck) || (this.state.CountNotice !== data.CountNotice)) {\r\n                        this.state.Notice = data.result;\r\n                        this.state.CountNotice = data.CountNotice;\r\n                        this.state.CountNoticeNoView = data.CountNoticeNoCheck;\r\n                        console.log('Получили уведомления', this.state.Notice);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения уведомлений', err);\r\n            });\r\n    }\r\n\r\n\r\n    setNoticeServer(type,idNotice){\r\n        var idUsers = this.state.user.id;\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/setNoticeStatus&idUserVK='+idUsers+'&idNotice='+idNotice+'&typeSet='+type+'&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    console.log('Получили уведомления',data);\r\n                }else{\r\n                    this.getNotice(idUsers);\r\n                    console.log('Получили уведомления',data);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения уведомлений', err);\r\n            });\r\n    }\r\n\r\n    parseQueryString = (string) => {\r\n        return string.slice(1).split('&')\r\n            .map((queryParam) => {\r\n                let kvp = queryParam.split('=');\r\n                return {key: kvp[0], value: kvp[1]}\r\n            })\r\n            .reduce((query, kvp) => {\r\n                query[kvp.key] = kvp.value;\r\n                return query\r\n            }, {})\r\n    };\r\n\r\n\r\n    setOkNewOrderView(){\r\n        console.log('Показать окно');\r\n        if(this.state.newOrderStats) {\r\n            this.getCartDB(this.state.user.id);\r\n            this.setState({activeStory: 'newOrderInfo',\r\n                typeOrderDate:true,\r\n                SelectDatePreorder:null,\r\n                SelectTimePreorder:null,\r\n                DopProductUserSet:{}\r\n            });\r\n            this.getUserSystemInfo(this.state.user.id);\r\n        }else{\r\n            console.log('Ну не совсем');\r\n        }\r\n    }\r\n\r\n    setShowUserOrderList(){\r\n        this.setState({activeStory: 'UserOrderList'});\r\n    }\r\n\r\n    setTypeOrderList(as,bs){\r\n        this.setState({\r\n            typeOrderGetText:as,\r\n            typeOrderGet:bs,\r\n            activePanelOrders: 'OrdersListUserType'\r\n        });\r\n    }\r\n\r\n\r\n    getSuccesOrderPage(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56CheckCircleOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.setState({\r\n                             typeOrderGetText:\"Текущие заказы\",\r\n                             typeOrderGet:\"now\",\r\n                             activePanelOrders: 'OrdersListUserType',\r\n                             activeStory: 'UserOrderList'\r\n                         });}}>Узнать статус заказа</Button>}\r\n\r\n            >\r\n                <h2>Ваш заказ принят</h2>\r\n                <p>Мы приняли Ваш заказ и отправили его в производство. Узнать детали заказа Вы можете по ссылке</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    getDeliveryDataPriceItog(){\r\n        if(this.state.minSumOrder < this.state.sumCart){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.minSumFreeDelivery <= this.state.sumCart){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет ',this.state.minSumFreeDelivery+' < '+this.state.sumCart);\r\n    }\r\n\r\n\r\n    getDeliveryDataPriceItogAffiliate(){\r\n        this.setState({\r\n            priceDelivery: 0,\r\n            minSumOrder: 300,\r\n            minSumFreeDelivery: 0\r\n        });\r\n\r\n        if(this.state.sumCart > 300){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.sumCart > 0){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет на самовывоз');\r\n    }\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n\r\n    setcountCartProduct(e,aa = false){\r\n        if(e == 0){e = '';}\r\n        if(aa === false) {\r\n            this.setState({\r\n                countCartProduct: e\r\n            });\r\n        }\r\n\r\n        var sumCartItog = 0;\r\n        this.state.cart.map((CPr)=>{\r\n                sumCartItog += this.getSumCartOnDiscount(CPr);\r\n            }\r\n        );\r\n\r\n        var SumDopsProduct = 0;\r\n        if(Object.keys(this.state.DopProductUserSet).length > 0){\r\n\r\n            Object.keys(this.state.DopProductUserSet).map((id,n)=>{\r\n                    SumDopsProduct += this.state.DopProductUserSet[id].count*(this.state.DopProductUserSet[id].price*1)\r\n            });\r\n        }\r\n\r\n        //console.log(SumDopsProduct);\r\n        this.setState({sumCart:sumCartItog+SumDopsProduct});\r\n\r\n        document.cookie = \"cart = \"+this.state.cart;\r\n    }\r\n\r\n    getSumCartOnDiscount(typeProduct){\r\n        if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n            return (typeProduct.price*typeProduct.count);\r\n        }else{\r\n            return(typeProduct.price_discount.new_price*typeProduct.count);\r\n        }\r\n    }\r\n\r\n    setComment(e){\r\n        this.setState({\r\n            commentary:e\r\n        });\r\n    }\r\n\r\n    setUser(e){\r\n        this.setState({user:e});\r\n    }\r\n\r\n    setUserSystem(e){\r\n        this.setState({userSystemInfo:{error:false,dataUser:e}});\r\n    }\r\n\r\n    getTypeSlideGet(){\r\n        switch(this.state.ParamStart.vk_platform){\r\n            case\"desktop_web\": return \"desktop\";break;\r\n            default: return \"mobile\";\r\n        }\r\n    }\r\n\r\n\r\n    getSlideHeaderArray(){\r\n        if(this.state.ParamStart === false){\r\n\r\n        }else {\r\n            //console.log(this.state.ParamStart);\r\n            axios('https://sushi-time31.ru/api/getSlideHeader&apiKey='+global.ApiKey,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n                    data: {\r\n                        typeSlide: this.getTypeSlideGet(),\r\n                    },\r\n                    responseType: 'text'\r\n                })\r\n                .then(({data}) => {\r\n                    if (\"error\" in data) {\r\n                        this.setSlideArray([], false);\r\n                        console.log(data.error, '|', data.errorInfo);\r\n                    } else {\r\n                        //console.log(data.listSlide);\r\n                        this.setSlideArray(data.listSlide, true);\r\n                    }\r\n                })\r\n                .catch(({err}) => {\r\n                    console.log(\"ERROR: ---Получение слайдов---  \", err);\r\n                });\r\n        }\r\n    }\r\n\r\n    setSlideArray(ArraySlide,status){\r\n        if(status === true) {\r\n            this.setState({slideHeaderArray: ArraySlide});\r\n            if (this.state.StatusLoadSlide === false) {\r\n                this.setState({StatusLoadSlide: true});\r\n            }\r\n        }else{\r\n            if (this.state.StatusLoadSlide === true) {\r\n                this.setState({StatusLoadSlide: false});\r\n            }\r\n        }\r\n    }\r\n\r\n    getSliderGalery(){\r\n        var ArraySlides = Object.keys(this.state.slideHeaderArray);\r\n        var Bullets = \"dark\";\r\n        var AutoPlays = \"7000\";\r\n        var countNumber = ArraySlides.length;\r\n        if(ArraySlides.length <= 1){Bullets = false;AutoPlays = false;}\r\n        if(this.state.StatusLoadSlide === true & ArraySlides.length > 0) {\r\n            var SliderVisual = ArraySlides.map((datas,keys) => {\r\n                //console.log(datas);\r\n                return (<img key={keys} src={this.state.slideHeaderArray[datas].img} style={{maxWidth:\"100%\"}}/>);\r\n            });\r\n\r\n            return (\r\n                <Gallery\r\n                    autoplay={AutoPlays}\r\n                    //slideIndex={this.state.slideIndex}\r\n                    //onEnd={()=>{this.setState({\"slideIndex\":0})}}\r\n                    slideWidth=\"100%\"\r\n                    style={{width:\"100%\",height: \"auto\"}}\r\n                    bullets={Bullets}\r\n                >\r\n                    {SliderVisual}\r\n                </Gallery>\r\n            );\r\n        }else{\r\n            return(\r\n                \"\"\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    reloadSlideHeaderSetTime(){\r\n        this.getSlideHeaderArray();\r\n        setTimeout(this.reloadSlideHeaderSetTime.bind(this),5000);\r\n    }\r\n\r\n\r\n\r\n\r\n    ///////Уведомления PUSH\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n            });\r\n    }\r\n\r\n    setStatusNotification(e){\r\n        this.setState({StatusNotification:e});\r\n    }\r\n\r\n    DeleteNotifi(idNotice){\r\n        // this.Notice[idNotice]\r\n        delete this.state.Notice[idNotice];\r\n        // Object.keys(this.state.Notice).splice(idNotice, 1);\r\n    }\r\n\r\n\r\n    getNotificationPage(){\r\n        return(\r\n            <Notice\r\n                StatusNotification={this.state.StatusNotification}\r\n                PushClick={this.PushClick.bind(this)}\r\n                setState={this.setState.bind(this)}\r\n\r\n                AllNotice={this.state.Notice}\r\n\r\n                setNotice={this.setNoticeServer.bind(this)}\r\n                DeleteNotifi={this.DeleteNotifi.bind(this)}\r\n            />\r\n        );\r\n    }\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n            })\r\n            .catch((err)=> {\r\n                    this.setState({StatusNotification: false});\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    ///////\r\n\r\n    componentDidMount() {\r\n        this.getCityUser();\r\n        this.getStatusNotificate();\r\n        async function fetchData(setUser,getCartDB,getUserSystemInfo,getNotice) {\r\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            setUser(user);\r\n            //setPopout(null);\r\n            //setModal(MODAL_CARD_MONEY_SEND);\r\n            //console.log('...','Получили данные пользователя',user.id);\r\n            getCartDB(user.id);\r\n            getNotice(user.id);\r\n            getUserSystemInfo(user.id);\r\n        }\r\n\r\n        axios({\r\n            method:'get',\r\n            // url:'https://sushi-time31.ru/test.json',\r\n            // url:'https://sushi-time31.ru/test2.json',\r\n            url:'https://sushi-time31.ru/api/Catalog&apiKey='+global.ApiKey+'&idCategoryKeyArray=true&idProductKeyArray=true',\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data.list);\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                products: data.list,\r\n                loadingCatalog:true\r\n            });\r\n        })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n\r\n        fetchData(this.setUser.bind(this),this.getCartDB.bind(this),this.getUserSystemInfo.bind(this),this.getNotice.bind(this));\r\n        this.reloadSlideHeaderSetTime();\r\n            setInterval(function() {this.getIntervalCart(1)}.bind(this), 3000);\r\n            setInterval(function() {this.getNotice(this.state.user.id)}.bind(this), 3000);\r\n            this.setHashDataReload(this);\r\n    }\r\n\r\n    getIntervalCart(i){\r\n       // console.log('Запустили получение корзины '+i);\r\n        i++;\r\n        this.getCartDB(this.state.user.id);\r\n       // setTimeout(function() {this.getIntervalCart(i)}.bind(this), 3000);\r\n    }\r\n\r\n    StatusReloadBasketData(dataOld,dataNew){\r\n        if(dataOld === dataNew){return false;}else{return true;}\r\n    }\r\n\r\n\r\n    ReloadBasketDataFN(ListProduct){\r\n       // console.log('Обновили корзину');\r\n        this.setState({\r\n            // products: data.list[0].ProductList\r\n            cart: ListProduct,\r\n            loadingPage: false\r\n        });\r\n        this.setCountCartVisal();\r\n    }\r\n\r\n\r\n    ReloadBasketDataDopPresets(ListDopPresets){\r\n        if(ListDopPresets !== false){\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: ListDopPresets.listPresetProduct,\r\n                imgListPresets: ListDopPresets.imgPresetProduct\r\n            });\r\n        }else{\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: [],\r\n                imgListPresets: false\r\n            });\r\n        }\r\n    }\r\n\r\n    getCartDB(id_user){\r\n        if(this.state.loading === false) {\r\n            this.setState({loading: true});\r\n        }\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getBasketVK&apiKey='+global.ApiKey+'&updateBasket=1minute&id_user_vk='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n                data.listProduct = [];\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }\r\n\r\n            if(data.listProduct === null){\r\n                data.listProduct = [];\r\n            }\r\n\r\n            var ListOld = JSON.stringify(this.state.cart);\r\n            var ListNew = JSON.stringify(data.listProduct);\r\n            var ListPresetsOld = JSON.stringify(this.state.dopPresets);\r\n            var ListPresetsNew = JSON.stringify(data.DopPresetsData);\r\n\r\n            var statusBasket = this.StatusReloadBasketData(ListOld,ListNew);\r\n            var statusPresets = this.StatusReloadBasketData(ListPresetsOld,ListPresetsNew);\r\n\r\n            if(statusBasket === true) {\r\n                this.ReloadBasketDataFN(data.listProduct);\r\n                this.PlayInfoAudio('ReloadBasket');\r\n                if(\"DopProductList\" in data) {\r\n                    this.setState({\"DopProductList\":data.DopProductList});\r\n                    console.log(data.DopProductList);\r\n                }\r\n            }\r\n\r\n            if(statusPresets === true) {\r\n                this.ReloadBasketDataDopPresets(data.DopPresetsData);\r\n            }\r\n\r\n\r\n\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n    }\r\n\r\n    PlayInfoAudio(a){\r\n            if (this.audio) {\r\n                // this.audio.pause();\r\n                this.audio.stop();\r\n            }\r\n            switch (a) {\r\n                case\"ReloadBasket\":\r\n                   // this.audio = this.state.AudioInfo.ReloadBasket;\r\n                    this.state.AudioInfo.ReloadBasket.play();\r\n                    //alert('Запуск звука');\r\n                    break;\r\n            }\r\n    }\r\n\r\n\r\n    getUserSystemInfo(id_user){\r\n        this.setState({loading: true});\r\n\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/Users&apiKey='+global.ApiKey+'&updateUserSystemInfo=one&idUserVK='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }else{\r\n                this.setUserSystem(data.list[0]);\r\n            }\r\n\r\n            this.setState({\r\n                loadingPage: false\r\n            });\r\n            //console.log(\"userSystemInfo\",this.state.userSystemInfo);\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n        //setUserSystem(e);\r\n    }\r\n\r\n\r\n    setCartServer(id_user,JsonBasket){\r\n        //console.log(JsonBasket,'___А_А_АА_А_А_А_');\r\n        axios('https://sushi-time31.ru/api/setBasketVK&apiKey='+global.ApiKey+'&id_user_vk='+id_user,\r\n            {\r\n            method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            data: {\r\n                basketJson: JsonBasket,\r\n            },\r\n            responseType:'text'\r\n        })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Отправка корзины---  \",err);\r\n            });\r\n    }\r\n\r\n    setCart(e,tE = '+'){\r\n        //console.log('Товар в корзине, вот этот ',e);\r\n        //this.setState({cart:e});\r\n        const counts = this.state.cart.length;\r\n        if(tE == '+'){\r\n            //Добавляем товар\r\n            if(counts<=0) {\r\n               // console.log('Добавляем Новый товар в корзину');\r\n                this.state.cart.push(e);\r\n                const countPlus = counts;\r\n                this.state.cart[countPlus].count = 1;\r\n                this.setcountCartProduct(1);\r\n            }else{\r\n               // console.log('В принципи верно, но цикл не тот', counts);\r\n                var noAdd = true;\r\n\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Добавляем еще такой же товар');\r\n                        this.state.cart[key].count = this.state.cart[key].count + 1;\r\n                        setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                        noAdd =false;\r\n                    }\r\n                    }\r\n                );\r\n\r\n                if(noAdd === true){\r\n                   // console.log('Добавляем новый товар, так как тагого же нет');\r\n                    this.state.cart.push(e);\r\n                    const countPlus = counts;\r\n                    this.state.cart[countPlus].count = 1;\r\n                    setcountCartProductVar++;\r\n                }\r\n\r\n            }\r\n        }else{\r\n            //Удаляем товар\r\n            if(counts<=0) {\r\n\r\n            }else{\r\n                var noAdd = true;\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Удаляем товар 1 товар с этим id и типом');\r\n                        if( this.state.cart[key].count<=1){\r\n                            // delete this.state.cart[key];\r\n                            this.state.cart.splice(key, 1);\r\n                        }else{\r\n                            this.state.cart[key].count = this.state.cart[key].count - 1;\r\n                            setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                            noAdd =false;\r\n                        }\r\n                    }\r\n                    }\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n        {setcountCartProductVar = setcountCartProductVar+CPr.count}\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n        var setDataServer = btoa(encodeURI(JSON.stringify(this.state.cart)));\r\n       // console.log('Вот это отправляем на сервер',setDataServer);\r\n        this.setCartServer(this.state.user.id,setDataServer);\r\n    }\r\n\r\n    setDopProduct(id,type = '+',price){\r\n        const counts = this.state.DopProductUserSet.length;\r\n        switch(type){\r\n            case \"+\":\r\n                if(counts<=0){\r\n                    this.state.DopProductUserSet[id] = {\"count\":1,\"price\":price};\r\n                }else{\r\n                    if(id in this.state.DopProductUserSet) {\r\n                        this.state.DopProductUserSet[id].count++;\r\n                    }else{\r\n                        this.state.DopProductUserSet[id] = {\"count\":1,\"price\":price};\r\n                    }\r\n                }\r\n                break;\r\n            case \"-\":\r\n                if(counts<=0){\r\n\r\n                }else{\r\n                    if(id in this.state.DopProductUserSet) {\r\n                        if(this.state.DopProductUserSet[id].count == 1){\r\n                            //this.state.DopProductUserSet.splice(id, 1);\r\n                            delete this.state.DopProductUserSet[id];\r\n                        }else{\r\n                            this.state.DopProductUserSet[id].count--;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        console.log(this.state.DopProductUserSet);\r\n\r\n        this.setcountCartProduct(0,true);\r\n\r\n        if(!(id in this.state.DopProductUserSet) || this.state.DopProductUserSet[id].count <=0){\r\n            this.setState({\"LoadDopProduct\":false});\r\n            return 0;\r\n        }else{\r\n            this.setState({\"LoadDopProduct\":false});\r\n            return this.state.DopProductUserSet[id].count;\r\n        }\r\n\r\n\r\n        //this.setState({\"DopProductUserSet\":a});\r\n    }\r\n\r\n\r\n    setCountCartVisal(){\r\n       // this.getCartDB(this.state.user.id);\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n            {setcountCartProductVar = setcountCartProductVar+CPr.count;\r\n            }\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n    }\r\n\r\n    setTypeDilivery(e){\r\n        this.setState({checkedTypeDilivery:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setTypeOrderDate(e){\r\n        this.setState({typeOrderDate:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setAddressDefault(e){\r\n        if(e === 'del'){\r\n            e = 0;\r\n        }\r\n        this.setState({addressDefault:e});\r\n        //console.log('По дефолту адрес теперь ',e);\r\n        //Обновляем условия доставки на 3  шаг корзины\r\n    }\r\n\r\n    setAffiliateDefault(e){\r\n        this.state.AffiliateDefault = e;\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setModal(e){\r\n        this.setState({activeModal:e});\r\n    }\r\n\r\n    setOrderShowNumber(a){\r\n        this.setState({numberOrderShow:a,\r\n            activePanelOrders:'OrderShowDetails'});\r\n    }\r\n\r\n    listOrderUserSet(a){\r\n       // console.log(a,'Ну блин');\r\n        this.setState({listOrderUser:a});\r\n    }\r\n\r\n    setHashDataReload(){\r\n\r\n      const HashParam =  this.parseQueryString(window.location.hash);\r\n\r\n        var height=window.screen.height;\r\n        var newHeight = height*0.7;\r\n        console.log('Какого хрена',newHeight);\r\n\r\n        connect.send(\"VKWebAppResizeWindow\", {\"height\": newHeight});\r\n\r\n        if('noticePageReload' in HashParam){\r\n            this.state.loadingCatalog = false;\r\n            this.setHashNew('notifications');\r\n        }\r\n    }\r\n\r\n\r\n    setHashNew(a){\r\n        setTimeout(function() {\r\n            console.log('Устанавливаем нулевой ХЕШ');\r\n            this.setState({activeStory:a});\r\n            connect.send(\"VKWebAppSetLocation\", {\"location\": \"notice\"});\r\n            this.setState({loadingCatalog:true});\r\n        }.bind(this), 1000);\r\n    }\r\n\r\n    render () {\r\n        const queryParams = this.parseQueryString(window.location.search);\r\n        const hashParams = this.parseQueryString(window.location.hash);\r\n\r\n        //this.setHashDataReload(hashParams);\r\n        //console.log(hashParams);\r\n        // console.log(noticePage);\r\n\r\n        if(this.state.ParamStart === false) {\r\n            //console.log(\"State = false, но \", queryParams);\r\n        }\r\n\r\n        if(this.state.ParamStart === false) {\r\n            this.state.ParamStart = queryParams;\r\n        }\r\n\r\n        // this.setState({\"ParamStart\":this.parseQueryString(window.location.search)});\r\n        // console.log('Параметры запуска ',this.state.ParamStart,' А URL такой ',window.location.search);\r\n\r\n        const modal = (\r\n            <ModalRoot activeModal={this.state.activeModal}>\r\n                <ModalPage\r\n                    id=\"MODAL_NEWADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Добавить адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Добавление адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formNewAddressData}\r\n                </ModalPage>\r\n\r\n                <ModalPage\r\n                    id=\"MODAL_EditADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Редактировать адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Редактирование адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formEditAddressData}\r\n                </ModalPage>\r\n            </ModalRoot>\r\n        );\r\n\r\n        const osname = platform();\r\n\r\n        if(this.state.CountNoticeNoView === 0 || this.state.CountNoticeNoView === null){\r\n            var countNoticeView = '';\r\n        }else{\r\n            var countNoticeView = this.state.CountNoticeNoView;\r\n        }\r\n\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'catalog'}\r\n                        data-story=\"catalog\"\r\n                        text=\"Каталог\"\r\n                    ><Icon24Note /></TabbarItem>\r\n                    <TabbarItem style={{\"display\":\"none\"}}\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'discover'}\r\n                        data-story=\"discover\"\r\n                        text=\"Поиск\"\r\n                    ><Icon28Search /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'cart'}\r\n                        data-story=\"cart\"\r\n                        label={this.state.countCartProduct}\r\n                        text=\"Корзина\"\r\n                    ><Icon28MarketOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'notifications'}\r\n                        data-story=\"notifications\"\r\n                        label={countNoticeView}\r\n                        text=\"Уведомления\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'user'}\r\n                        data-story=\"user\"\r\n                        text=\"Профиль\"\r\n                    ><Icon28User /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"newOrderInfo\" activePanel=\"newOrders\" header={false}>\r\n                    <Panel id=\"newOrders\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {this.getSuccesOrderPage()}\r\n                    </Panel>\r\n                </View>\r\n\r\n\r\n                <View id=\"UserOrderList\" activePanel={this.state.activePanelOrders} >\r\n                    <Panel id=\"ListTypeOrder\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                        >\r\n                            Мои заказы\r\n                        </PanelHeader>\r\n                        <UserOrderList\r\n                            userData={this.state.user}\r\n                            setTypeOrderList={this.setTypeOrderList.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                    <Panel id=\"OrdersListUserType\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<HeaderButton onClick={() => this.setState({activePanelOrders: 'ListTypeOrder'})}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => this.setState({activePanelOrders: 'ListTypeOrder'})}>Назад</HeaderButton>}\r\n                        >\r\n                            {this.state.typeOrderGetText}\r\n                        </PanelHeader>\r\n                        <OrderTypeList\r\n                            userData={this.state.user}\r\n                            typeOrderGet={this.state.typeOrderGet}\r\n                            setOrderShowNumber={this.setOrderShowNumber.bind(this)}\r\n                            listOrderUserSet={this.listOrderUserSet.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                    <Panel id=\"OrderShowDetails\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<HeaderButton onClick={() => this.setState({activePanelOrders: 'OrdersListUserType'})}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => this.setState({activePanelOrders: 'OrdersListUserType'})}>Назад</HeaderButton>}\r\n                        >\r\n                            {\"Заказ №\"+ this.state.numberOrderShow}\r\n                        </PanelHeader>\r\n                        <OrderShowDeail\r\n                            idOrderDetail={this.state.numberOrderShow}\r\n                            OrderDatas={this.state.listOrderUser[this.state.numberOrderShow]}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n\r\n\r\n\r\n                <View id=\"catalog\" activePanel=\"catalog\" header={false}>\r\n                    <Panel id=\"catalog\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {\r\n                            this.state.loadingCatalog\r\n                                ?\r\n                                <CatalogProduct setCart={this.setCart.bind(this)} CartProducts={this.state.cart} ProductsLists={this.state.products} sliderHeader={this.getSliderGalery.bind(this)} queryParams={queryParams}/>\r\n                                :\r\n                                <ScreenSpinner />\r\n                        }\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"discover\" activePanel=\"discover\">\r\n                    <Panel id=\"discover\">\r\n                        <PanelHeader>Поиск товаров</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"cart\" activePanel=\"cart\" modal={modal}>\r\n                    <Panel id=\"cart\" style={{\"paddingBottom\":\"40px\"}}>\r\n                        <PanelHeader theme=\"light\"\r\n                                     noShadow={false}\r\n                        >\r\n                            Корзина\r\n                        </PanelHeader>\r\n                        <div key=\"Cart_List\" style={{\"paddingBottom\":\"40px\"}}>\r\n                            {/*this.getCartVisual(this.state.cart,this.setCart.bind(this))*/}\r\n                            <GetCartHome\r\n                                ProductList={this.state.cart}\r\n                                DopProductList={this.state.DopProductList}\r\n                                DopProductUserSet={this.state.DopProductUserSet}\r\n                                setDopProduct={this.setDopProduct.bind(this)}\r\n                                LoadDopProduct={this.state.LoadDopProduct}\r\n                                PresetsDopProductList={\r\n                                    {\r\n                                    \"list\": this.state.dopPresets,\r\n                                    \"img\": this.state.imgListPresets\r\n                                    }\r\n                                }\r\n\r\n                                setCart={this.setCart.bind(this)}\r\n                                userSystemInfo={this.state.userSystemInfo}\r\n                                userInfo={this.state.user}\r\n                                getUserSystemInfo={this.getUserSystemInfo.bind(this)}\r\n\r\n                                addressDefault={this.state.addressDefault}\r\n                                setAddressDefault={this.setAddressDefault.bind(this)}\r\n\r\n                                AffiliateDefault={this.state.AffiliateDefault}\r\n                                setAffiliateDefault={this.setAffiliateDefault.bind(this)}\r\n\r\n                                checkedTypeDilivery={this.state.checkedTypeDilivery}\r\n                                setTypeDilivery={this.setTypeDilivery.bind(this)}\r\n\r\n                                commentary={this.state.commentary}\r\n                                setComment={this.setComment.bind(this)}\r\n\r\n                                countPerson={this.state.countPerson}\r\n\r\n                                SalePoints={this.state.SalePoints}\r\n\r\n                                setStates={this.setState.bind(this)}\r\n                                setDeliveryDataItogs={this.getDeliveryDataPriceItog.bind(this)}\r\n                                getDeliveryDataPriceItogAffiliate={this.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                                sumCart={this.state.sumCart}\r\n\r\n                                showModal={this.setModal.bind(this)}\r\n                                hideModals={this.setModal.bind(this,null)}\r\n\r\n                                DataDeliveryInfoPay={\r\n                                    {\r\n                                        typeOrderDate:this.state.typeOrderDate,\r\n                                        setTypeOrderDate:this.setTypeOrderDate.bind(this),\r\n\r\n                                        SelectDatePreorder:this.state.SelectDatePreorder,\r\n                                        SelectTimePreorder:this.state.SelectTimePreorder,\r\n\r\n                                        priceDelivery:this.state.priceDelivery,\r\n                                        minSumOrder:this.state.minSumOrder,\r\n                                        minSumFreeDelivery:this.state.minSumFreeDelivery,\r\n\r\n                                        //Если сумма корзины меньше необходимой для заказа\r\n                                        errorOrderFinal:this.state.errorOrderFinal,\r\n                                        //Если сумма корзины меньше бесплатной доставки\r\n                                        DeliveryPriceItog:this.state.DeliveryPriceItog,\r\n\r\n                                        //Доставка на адрес возможна, сли false, то не возможна\r\n                                        DeliveryAddressOKCity:this.state.DeliveryAddressOKCity,\r\n\r\n                                        addressOrderInfoUser:this.state.addressOrderInfoUser,\r\n\r\n                                        checkedTypeDilivery:this.state.checkedTypeDilivery,\r\n                                        AffiliateDefault:this.state.AffiliateDefault,\r\n                                        addressDefault:this.state.addressDefault,\r\n\r\n                                        listAddressGlobal:this.state.listAddressGlobal,\r\n                                        listAffiliateGlobal: this.state.listAffiliateGlobal,\r\n\r\n                                        comments:this.state.commentary,\r\n                                        typePay:this.state.typePay,\r\n                                        countPerson:this.state.countPerson,\r\n                                        cart:this.state.cart,\r\n                                        DopProductUserSet:this.state.DopProductUserSet\r\n\r\n                                    }\r\n                                }\r\n\r\n                                setOkNewOrderView={this.setOkNewOrderView.bind(this)}\r\n\r\n                            />\r\n\r\n                        <div style={{\"clear\":\"both\"}}></div>\r\n                        </div>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Уведомления</PanelHeader>\r\n                        {this.getNotificationPage()}\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"user\" activePanel=\"user\">\r\n                    <Panel id=\"user\">\r\n                        <PanelHeader>Профиль</PanelHeader>\r\n                        <AppHome\r\n                            id=\"home\"\r\n                            go=\"persik\"\r\n                            dataUsers={this.state.userSystemInfo}\r\n                            setStatusNotification={this.setStatusNotification.bind(this)}\r\n                            setShowUserOrderList={this.setShowUserOrderList.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell, CellButton} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24DoNotDisturb from '@vkontakte/icons/dist/24/do_not_disturb';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\n\r\n\r\nclass UserOrderList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadOrders:false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getAllGroups(){\r\n        return(\r\n            <Group>\r\n                <CellButton\r\n                before={<Icon24Recent /> }\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Текущие заказы\",\"now\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Текущие заказы</span>\r\n                </CellButton>\r\n                <CellButton\r\n                before={<Icon24DoneOutline />}\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Завершенные заказы\",\"old\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Завершенные заказы</span>\r\n                </CellButton>\r\n                <CellButton\r\n                before={<Icon24Cancel />}\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Отмененные заказы\",\"cancel\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Отмененные заказы</span>\r\n                </CellButton>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            this.state.loadOrders\r\n                ?\r\n                <ScreenSpinner />\r\n                :\r\n                this.getAllGroups()\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default UserOrderList;","import React from 'react';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\n\r\n\r\nclass OrderTypeList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listOrderUser:[],\r\n            loadOrders:true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getOrderUserSystem();\r\n    }\r\n\r\n    getOrderUserSystem(){\r\n        this.setState({loadOrders:true});\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getOrdersUserVK&apiKey='+global.ApiKey+'&idUserVK='+this.props.userData.id,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    this.setState({countOrder:0});\r\n                }else{\r\n                    //console.log('Данные по заказам пользователя',data);\r\n                    this.setState({listOrderUser:data.list});\r\n                    this.props.listOrderUserSet(data.list);\r\n                }\r\n                this.setState({loadOrders:false});\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения заказов',err);\r\n            });\r\n    }\r\n\r\n\r\n    ReverceList(Pr){\r\n        var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n            // console.log(last, index);\r\n            return (arr = arr.concat(last))\r\n        }, []);\r\n        return res;\r\n    }\r\n\r\n    getOrderType(type = 'now'){\r\n        var typeNumber = 0;\r\n        var iconsD ='';\r\n        switch(type){\r\n            case 'now': typeNumber = 0; iconsD = <Icon24Recent /> ;break;\r\n            case 'cancel': typeNumber = 3;  iconsD = <Icon24Dismiss /> ;break;\r\n            case 'old': typeNumber = 1;  iconsD = <Icon24DoneOutline /> ;break;\r\n            default:typeNumber =0;\r\n        }\r\n\r\n        //console.log(this.state.listOrderUser)\r\n\r\n        var countOrders = 0;\r\n\r\n        const ListOrder = this.ReverceList(this.state.listOrderUser).map((dataOrder,keyOrder)=>{\r\n            //console.log('Заказ '+dataOrder,'');\r\n            var CurrentOrder = this.state.listOrderUser[dataOrder];\r\n\r\n            var statusY = false;\r\n\r\n\r\n            if(typeNumber === 1){\r\n                if(CurrentOrder.status_order == typeNumber || CurrentOrder.status_order == 6){\r\n                    statusY = true;\r\n                }else{\r\n                    statusY = false;\r\n                }\r\n            }else{\r\n                if(CurrentOrder.status_order == typeNumber){\r\n                    statusY = true;\r\n                }else{\r\n                    statusY = false;\r\n                }\r\n            }\r\n\r\n\r\n            if(CurrentOrder.delete_order == '1'){\r\n                statusY = false;\r\n            }\r\n\r\n            if(statusY === true){\r\n                countOrders++;\r\n                //console.log('Заказ '+dataOrder,' Отмененн');\r\n                var summaOrders = <span>Сумма: <b>{CurrentOrder.sum_order}₽</b></span>;\r\n\r\n                return (\r\n                    <Cell key={\"Orders_\"+dataOrder}\r\n                          before={iconsD}\r\n                          description={<span>{CurrentOrder.date} <i>{CurrentOrder.time}</i> | {summaOrders}</span>}\r\n                          onClick={this.props.setOrderShowNumber.bind(this,CurrentOrder.id_order)}\r\n                    >\r\n                        <b>Заказ №{CurrentOrder.id_order}</b> <span style={{fontSize:\"0.8em\",marginLeft:\"2%\",color:\"#6a97fb\"}}> Подробнее...</span>\r\n                    </Cell>\r\n                );\r\n            }else{\r\n                //console.log('Заказ '+dataOrder,'');\r\n            }\r\n\r\n        });\r\n\r\n        if(countOrders <=0){\r\n            return (\r\n                <Cell key={\"Orders_None\"}\r\n                >\r\n                    Заказы отсутсвуют\r\n                </Cell>\r\n            );\r\n        }\r\n\r\n        return ListOrder;\r\n\r\n    }\r\n\r\n\r\n    getNowOrder(){\r\n        return(\r\n            <Group key=\"ListOrderNow\"\r\n                   title=\"Текущие заказы\"\r\n            >\r\n                {this.getOrderType('now')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    getOldOrder(){\r\n        return(\r\n            <Group key=\"ListOrderOld\"\r\n                   title=\"Завершенные заказы\"\r\n            >\r\n                {this.getOrderType('old')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCancelledOrder(){\r\n        return(\r\n            <Group key=\"ListOrderCancel\"\r\n                   title=\"Отмененные заказы\"\r\n            >\r\n                {this.getOrderType('cancel')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    getOneTypeOrders(){\r\n        var results = '';\r\n        switch(this.props.typeOrderGet){\r\n            case\"now\": results = this.getNowOrder();break;\r\n            case\"old\": results = this.getOldOrder();break;\r\n            case\"cancel\": results = this.getCancelledOrder();break;\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    getAllGroups(){\r\n        return(\r\n            this.getOneTypeOrders()\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(<div> {\r\n                this.state.loadOrders\r\n                    ?\r\n                    <ScreenSpinner/>\r\n                    :\r\n                    this.getAllGroups()\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderTypeList;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell, Div, Counter} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\n\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\r\nimport Icon24MoneyTransfer from '@vkontakte/icons/dist/24/money_transfer';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24User from '@vkontakte/icons/dist/24/user';\r\n\r\nclass OrderShowDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //console.log('Заказ показать этот: ',this.props.OrderDatas);\r\n    }\r\n\r\n    getStatusOrderText(a){\r\n        var ststusReturn = \"Выполнен\";\r\n\r\n        switch(a){\r\n            case\"0\": ststusReturn = \"Принят\"; break;\r\n            case\"1\": ststusReturn = \"Выполнен\"; break;\r\n            case\"3\": ststusReturn = \"Отменен\"; break;\r\n            case\"6\": ststusReturn = \"Принят\"; break;\r\n        }\r\n        return ststusReturn;\r\n    }\r\n\r\n    getStatusOrderReal(statusOld,statusReal){\r\n        if(statusReal === null){\r\n           // console.log('Нет данных');\r\n            return statusOld;\r\n        }else{\r\n            return statusReal.status;\r\n        }\r\n    }\r\n\r\n    getStatusIconText(a){\r\n        var iconsD = '';\r\n\r\n        var ststusReturns = <Icon24Error />;\r\n\r\n        switch(a){\r\n            case\"0\": iconsD = <Icon24Recent /> ;break;\r\n            case\"1\": iconsD = <Icon24DoneOutline /> ;break;\r\n            case\"3\": iconsD = <Icon24Dismiss /> ;break;\r\n            case\"6\": iconsD = <Icon24Recent /> ;break;\r\n        }\r\n        return ststusReturns;\r\n    }\r\n\r\n\r\n    getInfoPreorderBlock(Order){\r\n        if(Order.pre_order.status === 'none'){\r\n            return \"\";\r\n        }else{\r\n            return (\r\n                <Group title=\"Совершен по предзаказу на дату\">\r\n                    <Cell\r\n                        before={<Icon24Recent />}\r\n                    >\r\n                        {Order.pre_order.date_pre_order}\r\n                    </Cell>\r\n                </Group>\r\n            );\r\n        }\r\n    }\r\n\r\n    escapeHtml(text,type) {\r\n        switch(type){\r\n            case\"decode\":\r\n                var map = {\r\n                    '&amp;': '&',\r\n                    '&lt;': '<',\r\n                    '&gt;': '>',\r\n                    '&quot;': '\"',\r\n                    \"&#039;\": \"'\"\r\n                };\r\n                break;\r\n            case\"encode\":\r\n                var map = {\r\n                    '&': '&amp;',\r\n                    '<': '&lt;',\r\n                    '>': '&gt;',\r\n                    '\"': '&quot;',\r\n                    \"'\": '&#039;'\r\n                };\r\n                break;\r\n        }\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n    escapeHtmlDecode(text) {\r\n        return text\r\n            .replace(/&amp;/g, \"&\")\r\n            .replace(/&lt;/g, \"<\")\r\n            .replace(/&gt;/g, \">\")\r\n            .replace(/&quot;/g, \"\\\"\")\r\n            .replace(/&#039;/g, \"'\");\r\n    }\r\n\r\n\r\n    getOrderComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (<Group title=\"Состав заказа\">\r\n                <Div>Данные отсутствуют</Div></Group>);\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            if(data.sale_price != data.product_price){\r\n                var Price_sales = <span><s>{data.product_price} ₽</s> <b>{data.sale_price} ₽</b> </span>;\r\n            }else{\r\n                var Price_sales = <span><b>{data.sale_price} ₽</b> </span>;\r\n            }\r\n\r\n            if(data.discount_amount != '0'){\r\n                var Discount = <b>Скидка: {data.discount_amount} ₽</b>\r\n            }else{\r\n                var Discount = '';\r\n            }\r\n\r\n            return (\r\n                <Cell key={\"Product_cell_\"+key}\r\n                    description={<span key={\"prices_product_\"+key}>{Price_sales} - {data.count} шт. <i>{Discount}</i></span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"product_title_\"+key}>{this.escapeHtmlDecode(data.product_title)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n        return (<Group title=\"Состав заказа\">\r\n            {ListProduct}</Group>);\r\n    }\r\n\r\n\r\n    getOrderDopComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            var Price_sales = <span><b>{data.price_product} ₽</b> </span>;\r\n\r\n\r\n            return (\r\n                <Cell key={\"Dop_Product_cell_\"+key}\r\n                    description={<span key={\"prices_dop_product_\"+key}>{Price_sales} - {data.count} шт.</span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"dop_product_title_\"+key}>{this.escapeHtmlDecode(data.title_product)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n\r\n        if(ListProduct == '' || ListProduct=== null){\r\n            return (\"\");\r\n        }\r\n\r\n        return (<Group title=\"Приправы и соусы\">\r\n            {ListProduct}\r\n        </Group>);\r\n    }\r\n\r\n\r\n    getOrderGiftComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            var Price_sales = <span><b>{data.price_product} ₽</b> </span>;\r\n\r\n\r\n            return (\r\n                <Cell key={\"Gift_Product_cell_\"+key}\r\n                    description={<span key={\"prices_Gift_product_\"+key}>{Price_sales} - {data.count} шт.</span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"Gift_product_title_\"+key}>{this.escapeHtmlDecode(data.title_gift_product)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n\r\n        if(ListProduct == '' || ListProduct=== null){\r\n            return (\"\");\r\n        }\r\n\r\n        return (<Group title=\"Подарки\">\r\n            {ListProduct}\r\n        </Group>);\r\n    }\r\n\r\n\r\n    getOrderDeliveryInfo(Order){\r\n\r\n        if(Order.dilivery.dilivery_type == 'Доставка'){\r\n            var Address = Order.dilivery.dilivery_adres;\r\n            var PriceDeli = Order.dilivery.dilivery_price;\r\n            var TextDel = 'Доставка';\r\n        }else{\r\n            var Address = Order.affiliate.affiliate_info;\r\n            var PriceDeli = \" 0 \";\r\n            var TextDel = 'Самовывоз';\r\n        }\r\n\r\n            return (<Group title=\"Получение заказа\">\r\n                <Cell key={\"Deliv_cell\"}\r\n                    description={Address}\r\n                    indicator={<Counter>&nbsp; {PriceDeli} ₽ &nbsp;</Counter>}\r\n                >\r\n                    {TextDel}\r\n                </Cell>\r\n                </Group>\r\n            )\r\n    }\r\n\r\n    getInfoPromokod(Order){\r\n        if(Order.promo_status == 'active'){\r\n            var PromoInfo = <Group title=\"Промокод\">\r\n                <Div><b>{Order.promo_code}</b> {Order.promo_info.title}</Div>\r\n            </Group>\r\n        }else{\r\n            var PromoInfo = '';\r\n        }\r\n\r\n        return PromoInfo;\r\n    }\r\n\r\n    getInfoPointsOrder(Order){\r\n            var Points = <div>\r\n                <Cell before={<Icon24Coins/>} >Списано Таймов: {Order.point_out}</Cell>\r\n                <Cell  before={<Icon24Coins/>} >Начислено Таймов: {Order.point_in}</Cell>\r\n            </div>;\r\n\r\n        return Points;\r\n    }\r\n\r\n    getComment(Order) {\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n            Order = 'Отсутствует';\r\n        }\r\n\r\n        return (\r\n            <Group title=\"Комментарий\">\r\n                <Div>{Order}</Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getPerson(Order) {\r\n\r\n        if(Order == '' || Order === null){\r\n            Order = '1';\r\n        }\r\n\r\n        // return (\r\n        //     <Group title=\"Кол-во приборов\">\r\n        //         <Div>{Order}</Div>\r\n        //     </Group>\r\n        // );\r\n\r\n        return (\r\n            <Cell\r\n                before={<Icon24User />}\r\n            >\r\n                Приборы: {Order}\r\n            </Cell>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        const Order = this.props.OrderDatas;\r\n        const StatusIcon = this.getStatusIconText(Order.status_order);\r\n        const detailText = <span>Детали заказа</span>;\r\n\r\n        return(\r\n            <div key=\"InfoOrderBlock\" >\r\n                <Group\r\n                    title={detailText}\r\n                >\r\n                    <Cell\r\n                        before={StatusIcon}\r\n                    >\r\n                        {this.getStatusOrderReal(this.getStatusOrderText(Order.status_order),Order.status_order_real)}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24Recent />}\r\n                    >\r\n                        {Order.date} {Order.time}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24MoneyTransfer />}\r\n                    >\r\n                        {Order.payment.type_pay}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24MoneyCircle />}\r\n                    >\r\n                        {Order.sum_order} ₽\r\n                    </Cell>\r\n                    {this.getPerson(Order.person)}\r\n                    {this.getInfoPointsOrder(Order)}\r\n                </Group>\r\n                    {this.getInfoPreorderBlock(Order)}\r\n                {this.getInfoPromokod(Order.promo)}\r\n                {this.getOrderComposition(Order.productList)}\r\n                {this.getOrderDopComposition(Order.dopProductList)}\r\n                {this.getOrderGiftComposition(Order.giftProductList)}\r\n                {this.getOrderDeliveryInfo(Order)}\r\n                {this.getComment(Order.Comment)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderShowDetail;","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder, Cell } from '@vkontakte/vkui';\r\n\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\n\r\nimport Icon56NotificationOutline from '@vkontakte/icons/dist/56/notification_outline';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass Notice extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n    NoteNotice(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56NotificationOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.setState({activeStory: 'catalog'});}}>В каталог</Button>}\r\n\r\n            >\r\n                <h2>Уведомлений нет</h2>\r\n                <p>Как только для Вас появятся уведомления, они отобразятся здесь!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    ReverceList(Pr){\r\n        var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n            // console.log(last, index);\r\n            return (arr = arr.concat(last))\r\n        }, []);\r\n        return res;\r\n    }\r\n\r\n\r\n    setNoticeData(type,idNotice,statusView){\r\n        if(type == 1) {\r\n            this.props.setNotice(type, idNotice);\r\n            this.props.DeleteNotifi(idNotice);\r\n        }else{\r\n            if(statusView === false){\r\n                this.props.setNotice(type, idNotice);\r\n            }\r\n        }\r\n    }\r\n\r\n    getImagesNotice(img){\r\n        if(img === null || img == ''){return (\"\");}else{\r\n            return(\r\n                <img src={img} style={{width:\"100%\"}}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    getNotice(){\r\n\r\n        const NoticeList = this.ReverceList(this.props.AllNotice).map((Data,id)=>{\r\n\r\n            if(this.props.AllNotice[Data]['notice_view'] == '0'){\r\n                var color = '#ff7300';\r\n                var statusView = false;\r\n            }else{\r\n                var color = '';\r\n                var statusView = true;\r\n            }\r\n\r\n            return(<Group\r\n                key={\"Notice_C_\"+Data}\r\n            >\r\n                <Cell\r\n                    before={<Icon24Notification\r\n                        style={{color:color}}\r\n                        onClick={() => {this.setNoticeData(0,this.props.AllNotice[Data]['id_notification'],statusView)}}\r\n                    />}\r\n                    asideContent={<Icon24Dismiss\r\n                        onClick={() => {this.setNoticeData(1,this.props.AllNotice[Data]['id_notification'],statusView)}}\r\n                    />}\r\n\r\n                >\r\n                    {this.props.AllNotice[Data]['title']}\r\n                </Cell>\r\n                {this.getImagesNotice(this.props.AllNotice[Data]['img'])}\r\n                    <Div key={\"Notice_\"+Data} dangerouslySetInnerHTML={{__html: this.props.AllNotice[Data]['text'].replace(/\\n/g, \"<br />\")}}>\r\n                    </Div>\r\n            </Group>);\r\n        });\r\n\r\n        return(\r\n            NoticeList\r\n        );\r\n    }\r\n\r\n    getNotificationPage(){\r\n        if(this.props.StatusNotification === true){\r\n            if(Object.keys(this.props.AllNotice).length<=0){\r\n                return(this.NoteNotice());\r\n            }else{\r\n                return(this.getNotice());\r\n            }\r\n        }else{\r\n            return(\r\n                <Placeholder stretched\r\n                             icon={<Icon56NotificationOutline />}\r\n                             action={<Button size=\"l\" level=\"tertiary\"\r\n                                             onClick={()=>{this.props.PushClick()}}\r\n                             >Включить уведомления</Button>}\r\n                             style={{textAlign:\"center\"}}\r\n                >\r\n                    Для просмотра уведомлений, их нужно включить\r\n                </Placeholder>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            this.getNotificationPage()\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default Notice;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Placeholder, Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar,Textarea, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon16Clear from '@vkontakte/icons/dist/16/clear';\r\nimport DiliveryAddress from \"./DiliveryAddress\";\r\nimport AffiliateList from \"./AffiliateList\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Preorder from \"../preorder\";\r\nimport NoPreorder from \"../noPreorder\";\r\n\r\n\r\nconst orangeBackground = {\r\n    backgroundImage: 'linear-gradient(135deg, #ffb73d, #ffa000)'\r\n};\r\n\r\nconst blueBackground = {\r\n    backgroundColor: '#ffffff'\r\n};\r\n\r\nclass Dilivery extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            UserCard:{phone:\"\",email:\"\"},\r\n            CheckSMSCode:false,\r\n            phoneValue:\"\",\r\n            codeValue:\"\",\r\n            resultVerificationCode:true,\r\n            tooltip: true,\r\n            snackbar: null,\r\n            showBTNNewAddress:false,\r\n            showFormNewAddress:false\r\n        };\r\n\r\n        this.openBase = this.openBase.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.openBase();\r\n\r\n        async function getPhoneUserVK(setState){\r\n            connect.sendPromise(\"VKWebAppGetPhoneNumber\",{\"sign\":\"T3in3QPDby8GsRNAfsEnEoYmVt7Se2dy0XUOhnCSlSw\"})\r\n                .then((data ) => {\r\n                    //console.log(data,\"Данные пользователя\");\r\n                    setState({ UserCard:{phone: data.phone_number} });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ------  \",err);\r\n                });\r\n        }\r\n\r\n        //console.log(\"Получаем телефон\");\r\n        {this.props.userSystemInfo.error === true && getPhoneUserVK(this.setState.bind(this));}\r\n    }\r\n\r\n\r\n    openBase (e = null) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Clear fill=\"#ff0000\" width={16} height={16} /></Avatar>}\r\n                >\r\n                    {e===null && <span>Проверочный код введен не верно, повторите попытку!</span>}\r\n                    {e!==null && e}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n\r\n    setVerificationPhone(){\r\n        //console.log('Отправили запрос на верификацию');\r\n        axios('https://sushi-time31.ru/api/VerificationPhone&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_SMS\"){\r\n                        //console.log('СМС отправлено, выводим поле для ввода кода');\r\n                        this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase('Номер телефона введен не верно!');\r\n                    }\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    checkVerificationCode(){\r\n        //console.log('Отправили запрос на проверку кода',this.props.userInfo.id);\r\n        axios('https://sushi-time31.ru/api/VerificationCode&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                    VerificationCode: this.state.codeValue,\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_CODE_V\"){\r\n                        //console.log('Данные сохранены, можно обновить приложение, пользователь авторизован');\r\n                        this.props.getUserSystemInfo(this.props.userInfo.id);\r\n                        //this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    getValueInputPhone(event){\r\n        this.setState({UserCard:{phone: event.target.value}});\r\n        //console.log(this.state.UserCard.phone);\r\n    }\r\n\r\n    getValueInputCode(event){\r\n        this.setState({codeValue: event.target.value});\r\n    }\r\n\r\n    getCommentsData(e){\r\n        this.props.setComment(e.target.value);\r\n    }\r\n\r\n    getDataCountPerson(types){\r\n        var values_count = this.props.countPerson;\r\n        switch(types){\r\n            case '-': values_count -= 1; break;\r\n            case '+': values_count += 1; break;\r\n            default: console.log('Нет параметра');\r\n        }\r\n\r\n        if(values_count<=0){ values_count = 1;}\r\n        if(values_count === ''){ values_count = 1;}\r\n        if(values_count >9){ values_count = 9;}\r\n\r\n        this.props.setStates({countPerson: values_count});\r\n    }\r\n\r\n    getCountPersonInput(){\r\n        return (\r\n            <Group title=\"Кол-во приборов\">\r\n                <Div style={{display: 'flex',justifyContent:'center'}}>\r\n                    <Button size=\"l\" stretched style={{marginRight: 10,maxWidth:50,background:\"#ff7300\"}} onClick={this.getDataCountPerson.bind(this,'-')}>-</Button>\r\n                    <Input type=\"number\" style={{maxWidth:80,textAlign:\"center\"}} value={this.props.countPerson} readOnly=\"readOnly\"/>\r\n                    <Button size=\"l\" stretched style={{marginLeft: 10,maxWidth:50,background:\"#ff7300\"}} onClick={this.getDataCountPerson.bind(this,'+')}>+</Button>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth(){\r\n        return(<Group>\r\n            <FormLayout>\r\n                {this.state.CheckSMSCode === true && <FormLayoutGroup top=\"Введите одноразовый код из СМС\">\r\n\r\n                    <Input type=\"number\" placeholder=\"1234\" onChange={this.getValueInputCode.bind(this)} />\r\n\r\n\r\n                    <Button level=\"commerce\" style={{\"background\":\"#ff7300\"}}\r\n                            onClick={()=> {\r\n                                //console.log(this.state.codeValue);\r\n                                this.checkVerificationCode()\r\n                                }\r\n                            }\r\n                    >Подтвердить\r\n                    </Button>\r\n                    <Button level=\"secondary\" style={{\"float\":\"right\"}} onClick={() => {this.setState({CheckSMSCode:false})}}>Выслать повторно</Button>\r\n                </FormLayoutGroup>}\r\n\r\n                {this.state.CheckSMSCode === false && <FormLayoutGroup top=\"Подтвердите номер телефона\">\r\n                    <Input type=\"number\" placeholder=\"79876543210\" defaultValue={this.state.UserCard.phone} onChange={this.getValueInputPhone.bind(this)}/>\r\n                    <Button level=\"commerce\" style={{\"background\":\"#ff7300\"}}\r\n                            onClick={\r\n                                () => {\r\n                                    this.setVerificationPhone();\r\n                                    //console.log(this.state.UserCard.phone)\r\n                                }\r\n                            }\r\n                    >\r\n                        Получить код\r\n                    </Button>\r\n                    <Button onClick={() => {this.setState({CheckSMSCode:true})}} level=\"secondary\" style={{\"float\":\"right\"}}>Уже есть код</Button>\r\n                </FormLayoutGroup>}\r\n            </FormLayout>\r\n            {this.state.snackbar}\r\n        </Group>);\r\n    }\r\n\r\n    getButtonTypeDilivery(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"0\"}}>\r\n            <Button size=\"l\" stretched style={{marginRight: 8}} level={this.props.checkedTypeDilivery === 1 ? \"secondary\" : \"commerce\"} onClick={()=>{this.props.setTypeDilivery(0)}}>Доставка</Button>\r\n            <Button size = \"l\" stretched level={this.props.checkedTypeDilivery === 0 ? \"secondary\" : \"commerce\"}  onClick={()=>{this.props.setTypeDilivery(1)}}>Самовывоз</Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getButtonTypeOrder(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"20\",\"paddingTop\":\"0\"}}>\r\n                <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"commerce\" : \"secondary\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(true);}}\r\n                >\r\n                    Ближайшее\r\n                </Button>\r\n                <Button size = \"l\" stretched\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"secondary\" : \"commerce\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(false);}}\r\n                >\r\n                    Ко времени\r\n                </Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n\r\n    getPreorderBlock(){\r\n        return(\r\n            <Group\r\n                title=\"Время получение заказа\"\r\n            >\r\n                {this.getButtonTypeOrder()}\r\n                {\r\n                    this.props.DataDeliveryInfo.typeOrderDate\r\n                        ?\r\n                        <NoPreorder\r\n                            typeDelivery={this.props.DataDeliveryInfo.checkedTypeDilivery}\r\n                        />\r\n                        :\r\n                        <Preorder\r\n                            DataInfos={this.props.DataDeliveryInfo}\r\n                            setStates={this.props.setStates.bind(this)}\r\n                            key=\"Preorders\"\r\n                        />\r\n                }\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserAuth(){\r\n        //console.log('По дефолту адрес ',this.props.addressDefault)\r\n        return(\r\n            <div>\r\n                {this.getButtonTypeDilivery()}\r\n                {this.props.checkedTypeDilivery === 0 ?\r\n                    this.getListAddress()\r\n                    :\r\n                    this.getListAffiliate()\r\n                }\r\n                {this.getPreorderBlock()}\r\n                {this.getCountPersonInput()}\r\n                {this.getCommentsTextarea()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getNoneCartProduct(){\r\n        return(\r\n            <Placeholder\r\n                icon={<Icon56ErrorOutline />}\r\n                action={false}\r\n\r\n            >\r\n                <h2>В корзине отсутствуют товары</h2>\r\n                <p>Для совершения заказа, нужно положить хотябы 1 товар в корзину!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n\r\n    getListAddress(){\r\n        //console.log(this.state.showBTNNewAddress);\r\n        return(\r\n            <Group\r\n                className=\"GroupBlockListAddress\"\r\n                title=\"Адреса доставки\"\r\n                   description={this.state.showBTNNewAddress ?\r\n                       <Button\r\n                           size=\"l\"\r\n                           level=\"secondary\"\r\n                           style={{ background: '#FF7300',color:\"#FFFFFF\" }}\r\n                           // onClick={()=>{this.setState({showFormNewAddress:true})}}\r\n                           onClick={()=>{\r\n                               this.props.showModal('MODAL_NEWADDRESS');\r\n                           }}\r\n                       >Добавить адрес</Button>\r\n                       :\r\n                       \"\"}\r\n            >\r\n                <DiliveryAddress\r\n                    userInfo={this.props.userInfo}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    setShowBTNNewAddress={this.setState.bind(this)}\r\n                    showFormNewAddress={this.state.showFormNewAddress}\r\n                    setStates={this.props.setStates.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n                    showModals={this.props.showModal.bind(this)}\r\n                    hideModals={this.props.hideModals.bind(this)}\r\n                />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getListAffiliate(){\r\n        return (\r\n            <Group title=\"Адреса самовывоза\">\r\n            <AffiliateList\r\n                userInfo={this.props.userInfo}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n                setStates={this.props.setStates.bind(this)}\r\n            />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCommentsTextarea () {\r\n        return (\r\n            <Group title=\"Комментарий к заказу\">\r\n                <Div>\r\n                <Textarea value={this.props.commentary} onChange={this.getCommentsData.bind(this)} placeholder=\"Ваш комментарий\"/>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getOkListAddress(Param){\r\n        return(\r\n            Param <=0 ? this.getNoneCartProduct() : this.getInfoUserAuth()\r\n        )\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                {this.props.userSystemInfo.error === true &&\r\n                    this.getInfoUserNoneAuth()\r\n                }\r\n\r\n                {this.props.userSystemInfo.error === false &&\r\n                    this.getOkListAddress(this.props.ProductList.length)\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Dilivery;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAddress from \"./GetOneAddress\";\r\nimport GetOneAddressOff from \"./GetOneAddressOff\";\r\nimport OneProduct from \"../catalog/OneProduct\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport FormNewAddress from './FormNewAddress';\r\n\r\nclass DiliveryAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAddress:[],\r\n            listAddressOff:[],\r\n            addressOk:false,\r\n            dataAddress:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAddressUserSystem();\r\n        this.props.setStates({formNewAddressData: <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n    }\r\n\r\n    setAddressEdit(e){\r\n        //console.log(this.state.listAddress);\r\n        this.props.setStates({formEditAddressData: <FormNewAddress AddressEdit={this.state.listAddress[e]} setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n        this.props.showModals('MODAL_EditADDRESS');\r\n    }\r\n\r\n\r\n    getAddressUserSystem(delUpdate = false){\r\n        axios('https://sushi-time31.ru/api/getAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_UserVK: this.props.userInfo.id,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                    if(data.error === 'Address not found'){\r\n                        console.log('Нужно вывести форму для создания первого адреса пользователя');\r\n                        this.getFormNewAddress();\r\n                    }else{\r\n\r\n                    }\r\n                }else{\r\n                   // console.log(data);\r\n                    this.setState({listAddress:data.listAddress});\r\n                    this.props.setStates({listAddressGlobal:data.listAddress});\r\n\r\n                    this.setState({listAddressOff:data.ListAddressNoDelivery});\r\n                    this.props.setStates({listAddressGlobalOff:data.ListAddressNoDelivery});\r\n\r\n                    if(delUpdate === true){\r\n                        this.getAddressUsers(this.state.listAddress,true);\r\n                    }else{\r\n                        this.getAddressUsers(this.state.listAddress);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n\r\n    setAddressInfoUsers(e,type=0){\r\n            if (type === 0) {\r\n                var listAddressU = Object.keys(this.state.listAddress);\r\n                if(listAddressU.length > 0) {\r\n                    // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n                    // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n                    var DataSetAddress = this.state.listAddress[listAddressU[e]];\r\n                    this.props.setStates({\r\n                        addressOrderInfoUser: 'г. ' + DataSetAddress.city + ', ул. ' + DataSetAddress.street + ', д. ' + DataSetAddress.home\r\n                    });\r\n                }\r\n            }\r\n    }\r\n\r\n    getFormNewAddress(){\r\n        this.props.setAddressDefault(null);\r\n        this.state.dataAddress = <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)}/>;\r\n        this.setState({addressOk:true});\r\n        this.props.setShowBTNNewAddress({showBTNNewAddress:false});\r\n\r\n    }\r\n\r\n    setDataDiliveryPrice(n,ee = 'Дефолт 0'){\r\n        var listAddressU = Object.keys(this.state.listAddress);\r\n        // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n        // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n        if(listAddressU.length <= 0){\r\n            console.log('Адресов нет, должны вернуть только не доступные адреса');\r\n            this.props.setAddressDefault(null);\r\n            //return this.getAddressUsers(this.state.listAddress, true);\r\n        }else {\r\n            if (listAddressU[n] in this.state.listAddress) {\r\n                //console.log('Все ок, продолжаем по адресам');\r\n            } else {\r\n               // console.log('Адреса такого нет, ставим в дефаулт');\r\n                this.props.setAddressDefault(0);\r\n               // console.log('Должны переустановить дефаултный адрес на 0, адреса есть');\r\n                return this.getAddressUsers(this.state.listAddress, true);\r\n            }\r\n        }\r\n\r\n        if(listAddressU.length <= 0){\r\n           // console.log('Адресов нет, но продолжаем');\r\n           //  console.log('Установили значения стоимости доставки ', ee);\r\n        }else {\r\n            var DataSetAddress = this.state.listAddress[listAddressU[n]].diliveryData;\r\n            this.props.setStates({\r\n                priceDelivery: DataSetAddress.priceDilivery,\r\n                minSumOrder: DataSetAddress.min_sum_order,\r\n                minSumFreeDelivery: DataSetAddress.min_sum_free_dilivery\r\n            });\r\n           // console.log('Установили значения стоимости доставки ', ee);\r\n        }\r\n\r\n    }\r\n\r\n    getAddressUsers(listAddress,delUpdate = false) {\r\n        if(this.props.addressDefault === null & Object.keys(listAddress).length > 0){\r\n          //  console.log('Устанавливаем дефаултное значение адреса на 0','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(0);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n        if(this.props.addressDefault !== null & Object.keys(listAddress).length <= 0){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0 с условием что адресов нет','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(null);\r\n            this.setDataDiliveryPrice(0);\r\n        }\r\n\r\n        if(delUpdate === true){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0');\r\n            this.props.setAddressDefault(0);\r\n            this.getAddressUsers(listAddress,false);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }else{\r\n            this.state.dataAddress = Object.keys(listAddress).map((dataAddress, keyId) =>\r\n                <GetOneAddress\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId}\r\n                    AddresInfo={listAddress[dataAddress]}\r\n                    NumberAddress={keyId}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n\r\n            this.state.dataAddressOff = Object.keys(this.state.listAddressOff).map((dataAddress2, keyId2) =>\r\n                <GetOneAddressOff\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId2}\r\n                    AddresInfo={this.state.listAddressOff[dataAddress2]}\r\n                    NumberAddress={keyId2}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n            this.setState({addressOk:true});\r\n            this.props.setShowBTNNewAddress({showBTNNewAddress:true});\r\n            this.setDataDiliveryPrice(this.props.addressDefault, 'На '+this.props.addressDefault);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n    }\r\n\r\n    getListAddressVisual(){\r\n        return(\r\n            <div>\r\n                {this.state.dataAddress}\r\n                {this.state.dataAddressOff}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (this.state.addressOk === false ? <div>Загрузка адресов доставки <ScreenSpinner/></div> : this.getListAddressVisual()\r\n            );\r\n    };\r\n}\r\n\r\nexport default DiliveryAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n            axios('https://sushi-time31.ru/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:{id:a},\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            this.props.setAddressDefault('del');\r\n                           // console.log('Обновляем адреса',data);\r\n                            this.props.getAddressUserSystem(true);\r\n                            this.props.setPopout({ popout:null});\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    openDefault (a) {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Отмена',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }, {\r\n                        title: 'Удалить',\r\n                        autoclose: true,\r\n                        action: () => this.deletedAddress(a),\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Удаление адреса</h2>\r\n                    <p>Вы уверены что хотите удалить адрес?</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n    getAddressFull(n){\r\n        return(<div>\r\n                <span style={{width:\"75%\",float:\"left\"}}>\r\n                 г. {this.props.AddresInfo.city}, ул. {this.props.AddresInfo.street}, д. {this.props.AddresInfo.home}, подъезд {this.props.AddresInfo.podezd}, этаж {this.props.AddresInfo.etaj}, кв. {this.props.AddresInfo.kvartira}\r\n                </span>\r\n                <span style={{width:\"24%\",float:\"right\"}}><Icon28EditOutline\r\n                    onClick={\r\n                        ()=>{\r\n                            // console.log('Редактируем адрес ',n);\r\n                            this.props.setAddressEdit(this.props.AddresInfo.id);\r\n                        }\r\n                    }\r\n                    style={{float:\"left\",marginRight:\"10px\"}}/> <Icon28CancelCircleOutline style={{float:\"left\"}}\r\n                                                                                           onClick={\r\n                                                                                               ()=>{\r\n                                                                                                   // console.log('Удаляем адрес ');\r\n                                                                                                   this.openDefault(this.props.AddresInfo.id);\r\n                                                                                               }\r\n                                                                                           }\r\n                /></span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} defaultChecked onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n,'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n, 'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddressOff extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n        this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n        axios('https://sushi-time31.ru/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    addressInfo:{id:a},\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.result.result_add === true){\r\n                        this.props.setAddressDefault('del');\r\n                        //console.log('Обновляем адреса',data);\r\n                        this.props.getAddressUserSystem(true);\r\n                        this.props.setPopout({ popout:null});\r\n                    }else{\r\n                        console.log('Ошибка ',data);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n            });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'У Вас в корзине лежат товары, которые на этот адрес не доставляются!'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'У Вас в корзине лежат товары, которые на этот адрес не доставляются!'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddressOff;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAffiliateAddress from \"./GetOneAffiliateAddress\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass AffiliateList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAffiliate:[],\r\n            addressAffiliateOk:false,\r\n            dataAffiliate:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios('https://sushi-time31.ru/api/getAffiliate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_City: 1,\r\n                    id_UserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo,'Самовывоз');\r\n                }else{\r\n                    //console.log(data,'Самовывоз');\r\n                    if(Object.keys(data.listOffAffiliate).length>0){\r\n                       // console.log('Есть запрещенные точки, проводим цикл');\r\n                        Object.keys(data.listOffAffiliate).map((datas,keys)=>\r\n                            {\r\n                                if(this.props.AffiliateDefault === keys){\r\n                                    //console.log('Точка самовывоза по умолчанию совпадает с запрещенной, ставим нуль ', keys);\r\n                                    this.props.setAffiliateDefault(0);\r\n                                }else{\r\n                                   // console.log('Точка по умолчанию не совпадает с запрещенной, ничего не делаем ',keys);\r\n                                }\r\n                            }\r\n                        );\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }else{\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    setAddressInfoUsers(e,type=1){\r\n        if(type===1){\r\n            var listAddressU = Object.keys(this.state.listAffiliate);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.state.listAffiliate[listAddressU[e]];\r\n            this.props.setStates({\r\n                addressOrderInfoUser: DataSetAddress.title\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    getAddressAffiliate(listAddress) {\r\n        this.props.getDeliveryDataPriceItogAffiliate();\r\n        this.setAddressInfoUsers(this.props.AffiliateDefault);\r\n        this.state.dataAffiliate = Object.keys(listAddress).map((dataAffiliate, keyId) =>\r\n            <GetOneAffiliateAddress\r\n                key={'Affiliate_'+keyId}\r\n                AddresInfo={listAddress[dataAffiliate]}\r\n                NumberAddress={keyId}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n            />\r\n        );\r\n       this.setState({addressAffiliateOk:true});\r\n        //this.state.addressOk:true;\r\n        //return ArrayPr;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            this.state.addressAffiliateOk === false ? <div><h3>Ареса самовывоза</h3> <ScreenSpinner/> <p></p></div> : this.state.dataAffiliate\r\n        );\r\n    };\r\n}\r\n\r\nexport default AffiliateList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\n\r\nclass GetOneAffiliateAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n    }\r\n\r\n    getAddressTitle(){\r\n        return(\r\n            <span>\r\n               {this.props.AddresInfo.title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    getAddressFull(){\r\n        return(\r\n            <span style={{\"color\":\"#ffae6b\"}} dangerouslySetInnerHTML={{__html: this.props.AddresInfo.operating_mode}}>\r\n\r\n            </span>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    defaultChecked onClick={() => {\r\n                        this.props.setAffiliateDefault(n);\r\n                    ;this.props.setAddressInfoUsers(n);\r\n                    }\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    onClick={() => {\r\n                        this.props.setAffiliateDefault(n)}\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.AffiliateDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAffiliateAddress;","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch, Select, FormLayout} from '@vkontakte/vkui/';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Preorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockPreorder:false,\r\n            listDatePreorder:[],\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null\r\n        }\r\n\r\n        this.onChangeS = this.onChangeS.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockPreorder:true});\r\n        this.getDateList();\r\n        this.setState({\r\n            SelectDatePreorder:this.props.DataInfos.SelectDatePreorder,\r\n            SelectTimePreorder:this.props.DataInfos.SelectTimePreorder\r\n        });\r\n        console.log(this.props.DataInfos.SelectDatePreorder);\r\n    }\r\n\r\n    getDateList(){\r\n        axios('https://sushi-time31.ru/api/getPreorderDate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    this.setState({listDatePreorder:data.list});\r\n                    console.log(data.list);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    onChangeS(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n        this.props.setStates({[name]: value});\r\n        //console.log(this.state);\r\n    }\r\n\r\n    getSelectDate(){\r\n        const ListDate = Object.keys(this.state.listDatePreorder).map((data,n)=>{\r\n            return(\r\n                <option key={data+\"preorderDates\"} value={data}>{this.state.listDatePreorder[data].title}</option>\r\n            );\r\n        });\r\n        return (\r\n            <div>\r\n            <Cell>\r\n                <Select\r\n                    top=\"Дата получения заказа\"\r\n                    key=\"datePreorder\"\r\n                    placeholder=\"Дата получения\"\r\n                    name=\"SelectDatePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectDatePreorder}\r\n            >{ListDate}</Select>\r\n            </Cell>\r\n            <Cell>\r\n                {this.getSelectTime()}\r\n            </Cell>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSelectTime(){\r\n        if(this.state.SelectDatePreorder in this.state.listDatePreorder) {\r\n            var ListTimes = this.state.listDatePreorder[this.state.SelectDatePreorder].timeList;\r\n            const ListTime = Object.keys(ListTimes).map((times, n) => {\r\n                if(ListTimes[times].false === true){\r\n                    return ('');\r\n                }else {\r\n                    return (\r\n                        <option key={times + \"preorderTimes\"}\r\n                                value={times}\r\n                        >\r\n                            {ListTimes[times].title}\r\n                        </option>\r\n                    );\r\n                }\r\n            });\r\n            return (\r\n                <Cell>\r\n                    <Select\r\n                    top=\"Время получения заказа\"\r\n                    key=\"datePreorderTime\"\r\n                    placeholder=\"Время получения\"\r\n                    name=\"SelectTimePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectTimePreorder}\r\n                >{ListTime}</Select>\r\n                </Cell>\r\n            );\r\n        }else{\r\n            return ('');\r\n        }\r\n    }\r\n\r\n    getBlockPreorder(){\r\n        return(\r\n                <Div key=\"DivPreorder\">\r\n                    {\r\n                        this.state.loadBlockPreorder ?\r\n                            this.getSelectDate()\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlockPreorder()\r\n        );\r\n    }\r\n}\r\nexport default Preorder;\r\n","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\n\r\n\r\nclass NoPreorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockOrder:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockOrder:true});\r\n    }\r\n\r\n    getBlocknoPreorder(){\r\n        return(\r\n                <Cell\r\n                    before={<Icon24Recent />}\r\n                    style={{paddingBottom:\"10px\"}}\r\n                >\r\n                    {\r\n                        this.state.loadBlockOrder ?\r\n                            <div>{this.props.typeDelivery ? \"Забрать в ближайшее время\" : \"Доставить в ближайшее время\"}</div>\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Cell>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlocknoPreorder()\r\n        );\r\n    }\r\n}\r\nexport default NoPreorder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\n\r\nclass NewOrderServer extends React.Component{\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    setDataServer(){\r\n        this.props.setStates({statusNewOrder:'Запрос прошел'});\r\n        axios('https://sushi-time31.ru/api/setNewOrder&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    idUserVK: this.props.userInfo.id,\r\n                    dataOrder:this.props.DataOrderInfo\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                   // console.log('Ответ сервера ',data);\r\n                    if(data.status == \"OK\"){\r\n                        this.props.getPageOkOrderSet({newOrderStats:true});\r\n                        this.props.setOkNewOrderView();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button size=\"xl\" onClick={()=>{this.setDataServer()}} className=\"WeightFontBold\">Завершить заказ</Button>\r\n        );\r\n    };\r\n}\r\n\r\nexport default NewOrderServer;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\n\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport {List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\n\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\n\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            StatusNotification:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getStatusNotificate();\r\n    }\r\n\r\n    getPanelProfil(){\r\n        return(\r\n            <div id={this.props.id} style={{maxWidth:'1200px',margin:'0 auto'}} them='white'>\r\n                {this.props.fetchedUser &&\r\n                    <Group title=\"Ваши данные\r\n    \">\r\n                        <Cell\r\n                            before={this.props.fetchedUser.photo_200 ? <Avatar src={this.props.fetchedUser.photo_200}/> : null}\r\n                            description={this.props.fetchedUser.city && this.props.fetchedUser.city.title ? this.props.fetchedUser.city.title : ''}\r\n                        >\r\n                            {`${this.props.fetchedUser.first_name} ${this.props.fetchedUser.last_name}`}\r\n                        </Cell>\r\n                    </Group>\r\n                }\r\n\r\n                <Group>\r\n                    <Cell\r\n                        before={<Icon24Note />}\r\n                        description=\"Список совершенных Вами онлайн заказов\"\r\n                        onClick={this.props.setShowUserOrderList.bind()}\r\n                    >\r\n                        Мои заказы\r\n                    </Cell>\r\n                </Group>\r\n\r\n\r\n                {this.props.dataUsers.dataUsers.error ?\r\n                    this.getInfoUserNoneAuth()\r\n                    :\r\n\r\n                    <Group title=\"Активность\">\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Coins />}\r\n                            >\r\n                                Бонус Таймы: {this.props.dataUsers.dataUsers.dataUser.point}\r\n                            </Cell>\r\n                        </List>\r\n                    </Group>\r\n                }\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24Notification />}\r\n                            asideContent={<Switch\r\n                                checked={this.state.StatusNotification}\r\n                                onChange={()=>{this.PushClick()}} />}\r\n                            description=\"Изменение статуса заказа, акциии...\"\r\n                        >\r\n                            PUSH - уведомления\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24CommentOutline />}\r\n                        >\r\n                            <a style={{color:\"#252622\",textDecoration:\"none\"}}\r\n                               href=\"//vk.com/im?sel=-87074888\" target=\"_blank\">\r\n                                Связаться с нами\r\n                            </a>\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth() {\r\n        return (\r\n            <Div>\r\n                Авторизуйтесь по номеру телефона, чтобы просматривать данные!\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n                this.props.setStatusNotification(datas.response.is_allowed);\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            });\r\n    }\r\n\r\n    //defaultChecked\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            })\r\n            .catch((err)=> {\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getPanelProfil()\r\n        );\r\n    }\r\n}\r\nexport default UserInfo;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport { View, Group, List, Cell } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Persik = props => (\r\n    <Panel id={props.id}>\r\n        <PanelHeader\r\n            left={<HeaderButton onClick={props.go} data-to=\"home\">\r\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n            </HeaderButton>}\r\n        >\r\n            Persik\r\n        </PanelHeader>\r\n        <Div>\r\n            <h2 size=\"x3\" level=\"1\">Это не совсем персик</h2>\r\n            <View activePanel=\"main\">\r\n                <Panel id=\"main\">\r\n                    <PanelHeader>VKUI</PanelHeader>\r\n                    <Group title=\"Items\">\r\n                        <List>\r\n                            <Cell>Hello</Cell>\r\n                            <Cell>World</Cell>\r\n                        </List>\r\n                    </Group>\r\n                </Panel>\r\n            </View>\r\n        </Div>\r\n        <img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\r\n    </Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport UserInfo from './ProfileUser/UserInfo';\r\nimport Persik from './Persik';\r\nimport NoPersik from './Nopersik';\r\n\r\nconst ProfileUserPage = (dataUsers) => {\r\n\tconst [activePanel, setActivePanel] = useState('homeUsers');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\t//const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// connect.subscribe(({ detail: { type, data }}) => {\r\n\t\t// \tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t// \t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t// \t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t// \t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t// \t}\r\n\t\t// });\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\t//setPopout(null);\r\n\t\t\t//console.log(connect);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<View activePanel={activePanel}>\r\n\t\t\t<UserInfo\r\n\t\t\t\tid='homeUsers'\r\n\t\t\t\tfetchedUser={fetchedUser}\r\n\t\t\t\tgo={go}\r\n\t\t\t\tdataUsers={dataUsers}\r\n\t\t\t\tsetActivePanels={setActivePanel.bind(this)}\r\n\t\t\t\tsetStatusNotification={dataUsers.setStatusNotification.bind(this)}\r\n\t\t\t\tsetShowUserOrderList={dataUsers.setShowUserOrderList.bind(this)}\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default ProfileUserPage;\r\n\r\n","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\n// import Icon24Back from '@vkontakte/icons/dist/24/back';\r\n// import ModalProduct from '../ModalProduct.js';\r\nimport OneProduct from \"./OneProduct\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass ProductList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activePanel: 'panel1',\r\n            nameCategory: 'none',\r\n            productsLists: null,\r\n            products:[{\"1\":{\"title\":\"ЕКАРНЫЙ БАБАЙ\"}}]\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        function ReverceCatalog(Pr){\r\n            var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n                // console.log(last, index);\r\n                return (arr = arr.concat(last))\r\n            }, []);\r\n            return res;\r\n        }\r\n\r\n\r\n        function compare(a, b) {\r\n            if (a.price < b.price) {\r\n                return -1;\r\n            }\r\n            if (a.price > b.price) {\r\n                return 1;\r\n            }\r\n            // a должно быть равным b\r\n            return 0;\r\n        }\r\n\r\n        function comparePrice(Pr){\r\n            //console.log(Pr);\r\n            return Object.keys(Pr).sort(compare)\r\n        }\r\n\r\n\r\n        function ArrayProducts(Pr,ClickProductF,setProductModal,setCart, getButtonInCartProduct,ReverceStatus = 0) {\r\n            var CatalogLists = [];\r\n            if(ReverceStatus === 0){\r\n                CatalogLists = ReverceCatalog(Pr);\r\n            }\r\n            if(ReverceStatus === 1){\r\n                CatalogLists = comparePrice(Pr);\r\n            }\r\n\r\n            if(ReverceStatus === 2){\r\n                CatalogLists = Object.keys(Pr);\r\n            }\r\n\r\n            const ArrayPr = CatalogLists.map((oneProduct, keyId) =>\r\n                <OneProduct key={'Products_'+keyId} product={Pr[oneProduct]} ClickProduct={ClickProductF.bind(this)} setCart={setCart.bind(this)} setProductModal={setProductModal.bind(this)} getButtonInCartProduct={getButtonInCartProduct.bind(this)}/>\r\n            );\r\n            return ArrayPr;\r\n        }\r\n\r\n\r\n        function ShowProductCategory(nameCategorys){\r\n            //console.log('ShowProductCategory ',nameCategorys);\r\n            if(nameCategorys.nameCategorys === 'sets'){\r\n                // console.log('d-d-d-d-',nameCategorys.productsLists[nameCategorys.idCategory]);\r\n                return (<GetSets\r\n                    key={nameCategorys.key}\r\n                    names={nameCategorys.nameCategorys}\r\n                    ProductArray={nameCategorys.productsLists}\r\n                    ClickProduct={nameCategorys.ClickProduct.bind(this)}\r\n                    setCart={nameCategorys.setCart.bind(this)}\r\n                    setProductModal={nameCategorys.setProductModal.bind(this)}\r\n                    getButtonInCartProduct={nameCategorys.getButtonInCartProduct.bind(this)}\r\n                />);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'sushi'){\r\n                return (<GetSushi names={nameCategorys.nameCategorys}/>);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'roli'){\r\n                return (<GetRoli names={nameCategorys.nameCategorys}/>);\r\n            }else{\r\n                return (<GetNoneCat names={nameCategorys.nameCategorys}/>);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        function GetSets(ArrayPr) {\r\n           //console.log('ArrayPr ',ArrayPr);\r\n            return (\r\n                <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                    {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this))}\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetSushi(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с креветкой</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши краб</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши копченый лосот</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetRoli(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с тунцом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл Филадельфия</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Филадельфия с крабом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetNoneCat(names){\r\n            return (\r\n                <Div id={names} className=\"blockCategoryFlex\">\r\n                <h1>К сожаление категория пуста!</h1>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        // function GetModalProduct(product){\r\n        //     return(\r\n        //\r\n        //     )\r\n        // }\r\n\r\n        return (\r\n            <ShowProductCategory\r\n                productsLists={this.props.productsLists}\r\n                nameCategorys={this.props.nameCategory}\r\n                idCategory={this.props.idCategorys}\r\n                ClickProduct={this.props.onClickProduct.bind(this,'Panels_Product')}\r\n                setCart={this.props.setCart.bind(this)}\r\n                setProductModal={this.props.setProductModal.bind(this)}\r\n                getButtonInCartProduct={this.props.getButtonInCartProduct.bind(this)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductList;","import React from 'react';\r\nimport {Div, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport ProductList from \"./ProductList\";\r\n\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nclass CategoryList extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            loadingPage: true,\r\n            activePanel: 'brand',\r\n            products: [],\r\n            panelCategory: '',\r\n            ActiveCategory: 0,\r\n            productModal:[{\"title\":\"Название товара\",\"description\":\"Описание товара\",\"typeproduct\":\"0\",\"price\":\"1000\"}]\r\n        };\r\n    }\r\n\r\n    hndlClick = (aP) => {\r\n        console.log('--- ', 'Нажали на кнопку '+aP);\r\n        this.setState({ activePanel: aP })\r\n    };\r\n\r\n    setProductModal = (aP) => {\r\n        console.log('--- ', 'Установили товар в модалку '+aP+' - - - -XTTT');\r\n        this.setState({ productModal: aP })\r\n    };\r\n\r\n    setActiveCategory = (aP) => {\r\n        console.log('--- ', 'Установили категорию '+aP);\r\n        this.setState({ ActiveCategory: aP })\r\n    };\r\n\r\n\r\n    getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getButtonInCartProduct(typeProduct,setCart){\r\n        //console.log(this.props.CartProducts,'---0---');\r\n        if(!!this.props.CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            this.props.CartProducts.map((data,key)=>{\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  this.getCountButton(typeProduct,this.props.CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return this.getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return this.getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true});\r\n        this.setState({products:this.props.ProductsLists,loadingPage: false});\r\n        //console.log('Передали: ',this.props.ProductsLists);\r\n            }\r\n\r\n    classNameDivCategory(){\r\n        //console.log(this.props.queryParams.vk_platform);\r\n        if(this.props.queryParams.vk_platform == \"desktop_web\"){\r\n            return \"GroupBlockCategory DivBlockDesctopCategoys\";\r\n        }else{\r\n            return \"GroupBlockCategory\";\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n\r\n        function ModalProductInfo(OPT){\r\n            if(OPT.Loadings === false){\r\n                console.log(OPT);\r\n                return(\r\n                    <div className=\"blockProduct\" style={{\"margin\":\"0\",\"textAlign\":\"left\",\"background\":\"#ffffff\"}}>\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            noShadow={false}\r\n                            left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                        >\r\n                            {escapeHtmlDecode(OPT.ProductInfo[0].title)}\r\n                        </PanelHeader>\r\n                        <Div id={'product_type_'+OPT.ProductInfo[0].type_info}>\r\n                            <div className=\"imgPrewieProduct\"><img src={OPT.ProductInfo[0].img} alt={OPT.ProductInfo[0].title}/></div>\r\n                            <div className=\"titleProduct\">{escapeHtmlDecode(OPT.ProductInfo[0].title)} <span className=\"redTextP\">{OPT.ProductInfo[0].type_info}</span></div>\r\n                            <div className=\"DescrProduct\">{escapeHtmlDecode(OPT.ProductInfo[0].description)}</div>\r\n                            <div className=\"priceProductBig\">{getPriceProducts(OPT.ProductInfo[0])}\r\n                                {OPT.getButtonInCartProduct(OPT.ProductInfo[0],OPT.setCart)}\r\n                            </div>\r\n                        </Div>\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <div>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                    >Ошибка</PanelHeader>\r\n                        <div style={{\"textAlign\":\"center\",\"padding\":\"5% 0\"}}>Ошибка, вернитесь назад</div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        function getPriceProducts(typeProduct){\r\n            if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n                return (<span className=\"priceProduct\">\r\n                {typeProduct.price} ₽\r\n                </span>\r\n                );\r\n            }else{\r\n                return(\r\n                    <span className=\"priceProduct\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\"}}>{typeProduct.price_discount.old_price} ₽</s>\r\n                        {typeProduct.price_discount.new_price} ₽\r\n                </span>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        function GetCategorys(OPT){\r\n            if(OPT.Loadings === false) {\r\n               // console.log(OPT,'-0-0-0-');\r\n               // console.log('Загрузилось', OPT.CategoryList);\r\n                //console.log('Товары ', OPT.CategoryList[OPT.ShowCategory].ProductList);\r\n                return (<div style={{background:\"#FFFFFF\"}}>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>Назад</HeaderButton>}\r\n                    >\r\n                        {OPT.CategoryList[OPT.ShowCategory].Title}\r\n                    </PanelHeader>\r\n                    <ProductList\r\n                        onClickProduct={OPT.ClickProduct.bind(this)}\r\n                        productsLists={OPT.CategoryList[OPT.ShowCategory].ProductList} key={OPT.CategoryList[OPT.ShowCategory].id_Category}\r\n                        idCategorys={OPT.ShowCategory}\r\n                        nameCategory=\"sets\"\r\n                        setCart={OPT.setCart.bind(this)}\r\n                        getButtonInCartProduct={OPT.getButtonInCartProduct.bind(this)}\r\n                        setProductModal={OPT.setProductModal.bind(this)}\r\n                    />\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <PanelHeader>Ошибка</PanelHeader>\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        function GetBrandPanels(OPT,Loadings){\r\n           // console.log(OPT,' - - - категории грузим',OPT.Loadings);\r\n\r\n\r\n            if(CategoryList.length === 0){\r\n                return '';\r\n            }else {\r\n                if(OPT.Loadings === false) {\r\n                    //ProductObject = Object.keys(OPT.CategoryList);\r\n                    //console.log('Преобразовали',ProductObject);\r\n                    // const ArrayBrands = Object.keys(OPT.CategoryList).map((CategoryProdcuts, key) =>\r\n                    const ArrayBrands = Object.keys(OPT.CategoryList).map((idCategorys, key) =>\r\n\r\n                        <Div\r\n                            style={{\"background\":\"linear-gradient( rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4) ), url(//sushi-time31.ru/images/API_IMG/\"+OPT.CategoryList[idCategorys].imgCategory+\")\",\"backgroundSize\":\"100%\"}}\r\n                            className=\"DivCategoryBlock\"\r\n                            key={key+'_'+idCategorys}\r\n                            onClick={\r\n                                () => {\r\n                                    OPT.ActiveCategory(idCategorys);\r\n                                    OPT.ClickCategory('Panels_38')\r\n                                }\r\n                            }\r\n                        >\r\n                            {OPT.CategoryList[idCategorys].Title}\r\n                        </Div>\r\n                    );\r\n                    return ArrayBrands;\r\n                }\r\n                else {\r\n                    return 'Loading ...';\r\n                }\r\n                // return '';\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        const osname = platform();\r\n\r\n        return (\r\n            <View activePanel={this.state.activePanel}>\r\n                <Panel id=\"brand\">\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                    >\r\n                        Категории\r\n                    </PanelHeader>\r\n                    <Group>\r\n                        <Div className=\"logoBlock\">\r\n                            <img src=\"//sushi-time31.ru/images/API_IMG/logo_susshi_time.png\"/>\r\n                            {this.props.queryParams.vk_platform == \"desktop_web\"\r\n                                ?\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a>+7 (4722) 777-498</a>\r\n                                </Div>\r\n                                :\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a href=\"tel:+74722777498\">Позвонить</a>\r\n                                </Div>\r\n                            }\r\n                        </Div>\r\n                        <div id=\"SliderHeader\">\r\n                            {this.props.sliderHeader()}\r\n                        </div>\r\n                    </Group>\r\n                        <Group\r\n                            //title=\"Выбери категорию\"\r\n                            className={this.classNameDivCategory()} >\r\n                        <GetBrandPanels key=\"BrandPanels\" CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)} ActiveCategory={this.setActiveCategory.bind(this)}/>\r\n                    </Group>\r\n                </Panel>\r\n                {/*{this.state.loadingPage ? <Panel id=\"Panels_38\" />  : <Panel id=\"Panels_38\" ><PanelHeader >Суши</PanelHeader></Panel> && <GetCategory CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)}/>}*/}\r\n                <Panel id=\"Panels_38\">\r\n                    <GetCategorys\r\n                        CategoryList={this.state.products}\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickCategory={this.hndlClick.bind(this)}\r\n                        ClickProduct={this.hndlClick.bind(this,'Panels_Product')}\r\n                        setProductModal={this.setProductModal.bind(this)}\r\n                        ShowCategory={this.state.ActiveCategory}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                    />\r\n                </Panel>\r\n                <Panel id=\"Panels_Product\">\r\n\r\n                    <ModalProductInfo\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickBack={this.hndlClick.bind(this)}\r\n                        ProductInfo={this.state.productModal}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                    />\r\n                </Panel>\r\n                {/*<Panel id=\"Panels_38\" />*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}*/}\r\n                {/*    >*/}\r\n                {/*        Cуши*/}\r\n                {/*    </PanelHeader>*/}\r\n\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sushi\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"light2\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Роллы*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"roli\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Сеты*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sets\" idCategorys=\"0\"/>*/}\r\n                {/*</Panel>*/}\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CategoryList;","import React, {useEffect} from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n//import ModalProduct from './panels/ModalProduct';\r\nimport CategoryList from './CategoryList';\r\n//import App from \"./Profile\";\r\n\r\nconst CatalogProduct = (OPT) => {\r\n    // const [activePanel, setActivePanel] = useState('home');\r\n    // const [fetchedUser, setUser] = useState(null);\r\n    // const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\r\n\r\n    useEffect(() => {\r\n        // connect.subscribe(({ detail: { type, data }}) => {\r\n        //     if (type === 'VKWebAppUpdateConfig') {\r\n        //         const schemeAttribute = document.createAttribute('scheme');\r\n        //         schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n        //         document.body.attributes.setNamedItem(schemeAttribute);\r\n        //     }\r\n        // });\r\n        async function fetchData() {\r\n            // const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            // setUser(user);\r\n            // setPopout(null);\r\n           // console.log(OPT.ProductsLists,'--- ВОТ');\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n            <CategoryList setCart={OPT.setCart.bind(this)} CartProducts={OPT.CartProducts} ProductsLists={OPT.ProductsLists} sliderHeader={OPT.sliderHeader.bind(this)} queryParams={OPT.queryParams}/>\r\n    );\r\n\r\n};\r\n\r\nexport default CatalogProduct;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport NewOrderServer from './NewOrderServer';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Info from '@vkontakte/icons/dist/24/info';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Flash from '@vkontakte/icons/dist/24/flash';\r\n\r\nclass PaymentsPage extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            SalePoints:this.props.SalePoints,\r\n            value2:0,\r\n            statusNewOrder:'11'\r\n        }\r\n\r\n        this.props.getReloadInfODeliveryPay();\r\n    }\r\n\r\n    setPointsDefaultsSale(SalePoints){\r\n        SalePoints = SalePoints*1;\r\n        this.setState({SalePoints});\r\n        this.props.setStates({SalePoints:SalePoints});\r\n    }\r\n\r\n    options () {\r\n        let options = [];\r\n        for (let i = 0; i <= this.props.userSystemInfo.dataUser.point*1; i += 1) {\r\n            options.push(<option value={`${i}`} key={`${i}`}>{i}</option>)\r\n        }\r\n        return options;\r\n    }\r\n\r\n    getCountsTimeBonus(){\r\n        var points = this.props.userSystemInfo.dataUser.point*1;\r\n        if(points >0){\r\n            return(\r\n                <div>\r\n                        <Div>Доступно таймов для списания: <b>{points}</b></Div>\r\n                    <FormLayout>\r\n                        <Slider\r\n                            step={1}\r\n                            min={0}\r\n                            max={points}\r\n                            value={Number(this.state.SalePoints)}\r\n                            onChange={(SalePoints)=> this.setPointsDefaultsSale(SalePoints)}\r\n                            top=\"Списать в оплату\"\r\n                        />\r\n                        <Select onChange={e => this.setPointsDefaultsSale(e.target.value)} value={String(this.state.SalePoints)}>\r\n                            {this.options()}\r\n                        </Select>\r\n\r\n                    <div style={{display: 'none',justifyContent:'center'}}>\r\n                        <Button size=\"l\" stretched style={{marginRight: 10}}>Выбранное кол-во</Button>\r\n                        <Button size=\"l\" stretched style={{marginLeft: 10}}>Списать все</Button>\r\n                    </div>\r\n                    </FormLayout>\r\n                </div>);\r\n        }else{\r\n            return(<Cell className=\"IconColorOrange\" before={<Icon24Coins />}> К сожалению у Вас <b>0</b> таймов</Cell>);\r\n        }\r\n    }\r\n\r\n    getSumCartItogo(){\r\n        var sum = this.props.sumCart-this.props.SalePoints;\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog) {\r\n            sum = sum + (this.props.DataDeliveryInfo.priceDelivery * 1);\r\n        }\r\n        if(sum<0){sum = 0;}\r\n        return (sum);\r\n    }\r\n\r\n\r\n    checkMinSummaCart(){\r\n        if(this.props.DataDeliveryInfo.errorOrderFinal){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={false}\r\n\r\n                >\r\n                    <h2>Сумма минимального заказа {this.props.DataDeliveryInfo.minSumOrder} рублей</h2>\r\n                    <p>Мы не можем принять Ваш заказ, так как сумма Вашей покупки, меньше необходимой</p>\r\n                </Placeholder>\r\n            );\r\n        }else{\r\n            return(\r\n                this.checkTypeDiliveryInfo()\r\n            );\r\n        }\r\n    }\r\n\r\n    PriceInfoVisual(){\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog){\r\n            return(\r\n                <Cell before={<Icon24Info />}> Стоимость доставки: <b>{this.props.DataDeliveryInfo.priceDelivery} ₽</b></Cell>\r\n            );\r\n        }else{\r\n            return('');\r\n        }\r\n    }\r\n\r\n    getAddressDelivery(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAddressGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAddressGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAddressGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getAddressAffiliate(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAffiliateGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getDataOrder(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === true) {\r\n            var checkPreorderActive = false;\r\n        }else{\r\n            var checkPreorderActive = true;\r\n        }\r\n        var DataOrder = {};\r\n\r\n        var DataAddressDelivery = this.getAddressDelivery(this.props.DataDeliveryInfo.addressDefault);\r\n        var DataAddressAffiliate = this.getAddressAffiliate(this.props.DataDeliveryInfo.AffiliateDefault);\r\n\r\n        DataOrder.idUserVK = this.props.userInfo.id;\r\n        DataOrder.typeDelivery = this.props.DataDeliveryInfo.checkedTypeDilivery;\r\n        DataOrder.AddressDelivery = {\"Info\":DataAddressDelivery,\"idAddress\":DataAddressDelivery.id};\r\n        DataOrder.idAffiliatePickup = {\"Info\":DataAddressAffiliate,\"idAffiliate\":DataAddressAffiliate.id};\r\n        DataOrder.PointsSale = this.props.SalePoints;\r\n        DataOrder.DeliverySum = this.props.DataDeliveryInfo.DeliveryPriceItog ? this.props.DataDeliveryInfo.priceDelivery : 0;\r\n        DataOrder.Comments = this.props.DataDeliveryInfo.comments;\r\n        DataOrder.DopInfo = this.props.DataDeliveryInfo.commentary;\r\n        DataOrder.typePay = this.props.DataDeliveryInfo.typePay;\r\n        DataOrder.countPerson = this.props.DataDeliveryInfo.countPerson;\r\n        DataOrder.cart = this.props.DataDeliveryInfo.cart;\r\n        DataOrder.DopProductUserSet = this.props.DataDeliveryInfo.DopProductUserSet;\r\n        DataOrder.Preorder = {\"active\":checkPreorderActive,\"datePreorder\":this.props.DataDeliveryInfo.SelectDatePreorder+'T'+this.props.DataDeliveryInfo.SelectTimePreorder};\r\n        return DataOrder;\r\n    }\r\n\r\n    getMountsDate(a,b = null){\r\n        if(b){\r\n            a = a+1;\r\n            if(a<10){return '0'+a;}\r\n        }else {\r\n            switch (a) {\r\n                case 0:\r\n                    return 'Января';\r\n                    break;\r\n                case 1 :\r\n                    return 'Февраля';\r\n                    break;\r\n                case 2 :\r\n                    return 'Марта';\r\n                    break;\r\n                case 3 :\r\n                    return 'Апреля';\r\n                    break;\r\n                case 4 :\r\n                    return 'Мая';\r\n                    break;\r\n                case 5 :\r\n                    return 'Июня';\r\n                    break;\r\n                case 6 :\r\n                    return 'Июля';\r\n                    break;\r\n                case 7 :\r\n                    return 'Августа';\r\n                    break;\r\n                case 8 :\r\n                    return 'Сенятбря';\r\n                    break;\r\n                case 9 :\r\n                    return 'Октября';\r\n                    break;\r\n                case 10 :\r\n                    return 'Ноября';\r\n                    break;\r\n                case 11 :\r\n                    return 'Декабря';\r\n                    break;\r\n                default:\r\n                    return a;\r\n            }\r\n        }\r\n    }\r\n\r\n    returnPlaceholderPreorder(a){\r\n        switch(a){\r\n            case true:\r\n                var dateObj = new Date(this.props.DataDeliveryInfo.SelectDatePreorder);\r\n                //var formated_date = dateObj.format(\"dd.mm.YYYY\");\r\n\r\n\r\n                return(<div>\r\n                        <Group title=\"Оплата бонусными баллами\">\r\n                            {this.getCountsTimeBonus()}\r\n\r\n                        </Group>\r\n                        <Group title=\"Итоговые данные по заказу\">\r\n                            <List>\r\n                                <Cell\r\n                                    before={<Icon24Place />}\r\n                                    description={<span>\r\n                                      <i>{this.props.DataDeliveryInfo.addressOrderInfoUser}</i>\r\n                                  </span>}\r\n                                    size=\"l\">\r\n                                    {this.props.checkedTypeDilivery === 0 ? \" Доставка курьером\" : \" Заберу заказ сам\"}\r\n                                </Cell>\r\n                                <Cell\r\n                                before={<Icon24Flash />}\r\n                                description={this.props.DataDeliveryInfo.typeOrderDate ? <i> В ближайшее время</i> :\r\n                                    <i> {dateObj.getDate()+' '+this.getMountsDate(dateObj.getMonth(),false)+' '+dateObj.getUTCFullYear()+'г. к '+this.props.DataDeliveryInfo.SelectTimePreorder}</i>\r\n                                }\r\n                                >\r\n                                    Время получения заказа\r\n                                </Cell>\r\n                                <Cell before={<Icon24Coins />}> Списано таймов: <b>{this.props.SalePoints}</b></Cell>\r\n                                {this.PriceInfoVisual()}\r\n                                <Cell before={<Icon24MoneyCircle />}> К оплате: <b className=\"OrangeColor\">{this.getSumCartItogo()} ₽</b></Cell>\r\n                            </List>\r\n                        </Group>\r\n                        <Group title=\"Способ оплаты\">\r\n                            <List>\r\n                                <Cell>\r\n                                    <Radio name=\"typePayments\" value=\"1\"\r\n                                           description=\"Оплата наличными при получении\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 1 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:1})}}>Наличные</Radio>\r\n                                    <Radio name=\"typePayments\" value='2' description=\"Оплата банковской картой, по терминалу\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 2 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:2})}}>Терминал</Radio>\r\n\r\n                                </Cell>\r\n                                <Cell>\r\n                                    <Div>\r\n                                        <NewOrderServer setStates={this.setState.bind(this)}\r\n                                                        userInfo={this.props.userInfo}\r\n                                                        DataOrderInfo={this.getDataOrder()}\r\n                                                        getPageOkOrderSet={this.props.setStates.bind(this)}\r\n                                                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                                        />\r\n                                    </Div>\r\n                                </Cell>\r\n                            </List>\r\n                        </Group>\r\n                    </div>\r\n                );\r\n                break;\r\n            default:\r\n                return(\r\n                    <Placeholder\r\n                        icon={<Icon56ErrorOutline />}\r\n                        action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Указать вариант получения</Button>}\r\n\r\n                    >\r\n                        <h2>Не указана дата и время получения</h2>\r\n                        <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите дату получения заказа.</p>\r\n                    </Placeholder>\r\n                );\r\n        }\r\n    }\r\n\r\n    checkPreorderType(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === false) {\r\n            if(this.props.DataDeliveryInfo.SelectDatePreorder === null){\r\n                return this.returnPlaceholderPreorder(false);\r\n            }else{\r\n                if(this.props.DataDeliveryInfo.SelectTimePreorder === null){\r\n                    return this.returnPlaceholderPreorder(false);\r\n                }else{\r\n                    return this.returnPlaceholderPreorder(true);\r\n                }\r\n            }\r\n\r\n        }else{\r\n            return this.returnPlaceholderPreorder(true);\r\n        }\r\n    }\r\n\r\n\r\n    checkTypeDiliveryInfo(){\r\n        if(this.props.checkedTypeDilivery === 0 && this.props.addressDefault === null){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Выбрать адрес</Button>}\r\n\r\n                >\r\n                <h2>Вы не выбрали адрес доставки</h2>\r\n                    <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите адрес доставки, либо адрес точки самовывоза, откуда Вам будет удобно забрать заказ.</p>\r\n                </Placeholder>\r\n\r\n            );\r\n        }else{\r\n            return (this.checkPreorderType());\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.checkMinSummaCart()\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentsPage;","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\nimport Dilivery from \"./Dilivery\";\r\n\r\nimport './styleCart.css';\r\n\r\nimport ButtonCart from \"../catalog/ButtonInCart\";\r\nimport PaymentsPage from \"./PaymentsPage\";\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass GetCartHome extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null,\r\n            LoadDopProduct:this.props.LoadDopProduct\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n    componentDidMount() {\r\n        async function PopupLoadDop(LoadStatus,setPopout){\r\n            if(LoadStatus === true) {\r\n                setPopout();\r\n            }else {\r\n                setPopout(null);\r\n            }\r\n        }\r\n\r\n        PopupLoadDop(this.state.LoadDopProduct,this.setPopout.bind(this));\r\n    }\r\n\r\n\r\n    ReloadDeliveryPay(){\r\n\r\n    }\r\n\r\n    GetPresetsVisual(){\r\n        if(Object.keys(this.props.PresetsDopProductList.list).length >0){\r\n            const ListPresets = this.props.PresetsDopProductList.list.map((datas,number)=>{\r\n                return(\r\n                    <div key={number+'PresetsTitle'}>{datas.title} -  {datas.count} {datas.typeCount}</div>\r\n                );\r\n            });\r\n            return(\r\n                <Group\r\n                title=\"В заказ так же входит\"\r\n                    style={{textAlign:\"center\",overflow: \"hidden\"}}>\r\n                    <img src={this.props.PresetsDopProductList.img}\r\n                         style={{\r\n                             float: \"left\",\r\n                             width: \"35%\",\r\n                             marginLeft:\"3%\",\r\n                             marginRight:\"3%\"\r\n                         }}\r\n                    />\r\n                    <Div style={{textAlign:\"left\",\"lineHeight\":\"2.1em\",paddingRight:\"0\"}}>{ListPresets}</Div>\r\n                </Group>\r\n            );\r\n        }else{\r\n            //console.log('oo',Object.keys(this.props.PresetsDopProductList.list).length);\r\n            return('');\r\n        }\r\n    }\r\n\r\n    DopProductListVisual(){\r\n        //console.log('Запускаемся');\r\n        if(Object.keys(this.props.DopProductList).length > 0) {\r\n            const ListDopProduct = Object.keys(this.props.DopProductList).map(\r\n                (datas,number) => {\r\n                    return (\r\n                        <div className=\"BlockOneDopProductCart\" key={datas}>\r\n                            <div className=\"imgDopProductBlock\">\r\n                                <img src={\"//sushi-time31.ru\"+this.props.DopProductList[datas].img} />\r\n                            </div>\r\n                            <div className=\"titleDopProductBlock\">\r\n                                {this.props.DopProductList[datas].title}\r\n                            </div>\r\n                            <div className=\"priceDopProductBlock WeightFontBold\">\r\n                                {this.props.DopProductList[datas].price} ₽\r\n                            </div>\r\n                            <div className=\"buttonDopProductBlock\">\r\n                                {this.getButtonDopProduct(\r\n                                    this.props.DopProductList[datas].id,\r\n                                    this.props.setDopProduct.bind(this),\r\n                                    this.getCountDopProductIcon(\r\n                                        this.props.DopProductList[datas].id,\r\n                                        this.props.DopProductUserSet\r\n                                    ),\r\n                                    this.props.DopProductList[datas].price\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n            );\r\n\r\n            return (\r\n                <Group title=\"Добавить к заказу\">\r\n                    <HorizontalScroll>\r\n                        <div key=\"AllDopProductBlock\"\r\n                             style={{display:\"flex\",paddingBottom:\"20px\"}}\r\n                        >{ListDopProduct}\r\n                            <div style={{display:\"block\",width:\"20px\",height:\"2px\",minWidth:\"2px\"}}></div>\r\n                        </div>\r\n                        <div className=\"clr\"></div>\r\n                    </HorizontalScroll>\r\n\r\n                </Group>\r\n            );\r\n        }else{\r\n            return (\"\");\r\n        }\r\n    }\r\n\r\n    getCountDopProductIcon(Prod,alls){\r\n        //console.log(Prod,alls);\r\n        if(Prod in alls){\r\n            return alls[Prod].count;\r\n        }else{\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    getButtonDopProduct(idProduct,setCart,counts = 0,price){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\" style={{float:\"none\",margin:\"auto\",display:\"block\",width:\"132px\"}}>\r\n                <div className=\"minus\" onClick={() => {\r\n                this.setState({\"LoadDopProduct\":true});\r\n                    setCart(idProduct,'-',price);\r\n                }}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {\r\n                    this.setState({\"LoadDopProduct\":true});\r\n                    setCart(idProduct,'+',price);}\r\n                }>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    setPopout(e){\r\n        if(e === ''){\r\n            // useState(<ScreenSpinner size='large' />);\r\n            this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n        }else{\r\n            // useState(e);\r\n            this.setState({popout: e});\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        function setPopout(e){\r\n            if(e === ''){\r\n                // useState(<ScreenSpinner size='large' />);\r\n                this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n            }else{\r\n                // useState(e);\r\n                this.setState({popout: e});\r\n            }\r\n        }\r\n\r\n       function go(e){\r\n         setActivePanel(e);\r\n         // setActivePanel(e.currentTarget.dataset.to);\r\n       };\r\n\r\n       function setActivePanel(e){\r\n           // useState(e);\r\n          // this.setState({activePanel: e});\r\n           this.ActivePanels(e);\r\n       }\r\n\r\n       function  getCartVisual(id, Products,setCart){\r\n           //setPopout(null);\r\n            if(Products.length<=0){\r\n                return(<div style={{\"textAlign\":\"center\",\"padding\":\"5px 10px\",\"marginTop\":\"30px\"}}><h2>Корзина пуста</h2><p>К сожалению, для того чтобы что-то заказать, Вам нужно положить этот товар в корзину!</p></div>);\r\n            }else {\r\n\r\n                var results = Products.map((cartProduct,idProducts) =>\r\n                    <div className=\"ProductInCartBlock\" key={\"blockProducts_\"+idProducts}>\r\n                        <div\r\n\r\n                        className=\"blockProduct\"\r\n                        style={{\r\n                            \"width\": \" 100%\",\r\n                            \"margin\": \"5% 0\",\r\n                            \"padding\": \"0%\",\r\n                            \"float\":\"none\",\r\n                            marginBottom:10\r\n                        }}\r\n                        >\r\n                            <div className=\"imgPrewieProduct\">\r\n                                <img src={cartProduct.img}/>\r\n                            </div>\r\n                            <div className=\"titleProduct\">\r\n                                {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                                {cartProduct.title} <span className=\"redTextP\">{cartProduct.type_info}</span>\r\n                            </div>\r\n                            <div className=\"DescrProduct2\">\r\n                                {cartProduct.description}\r\n                            </div>\r\n                            <div style={{clear:\"both\"}}>\r\n                                {/*Товаров: {cartProduct.count} <br/>*/}\r\n                                <span className=\"priceProduct\">Сумма: {getPriceProducts(cartProduct)}</span>\r\n                                <div className=\"priceProductBig\"style={{width:\"100%\",bottom:-8}}><ButtonCart CartProducts={Products} typeProduct2={cartProduct}\r\n                                                                             setCarts={setCart.bind(this)}/></div>\r\n                            </div>\r\n                        </div>\r\n                        <Separator style={{ margin: '20px 0' }} />\r\n                    </div>\r\n                );\r\n\r\n                return(<div className=\"CartBlockProducts\">{results}</div>);\r\n\r\n            }\r\n        }\r\n\r\n        function getDiliveryData(){\r\n            return (<div><h2>Доставка</h2></div>);\r\n        }\r\n\r\n\r\n        function getPriceProducts(cartProduct){\r\n          // console.log(cartProduct);\r\n            if(!(\"price_discount\" in cartProduct) || cartProduct.price_discount === false){\r\n                return (<span className=\"WeightFontBold\">\r\n                {cartProduct.count * cartProduct.price} ₽\r\n                </span>\r\n                );\r\n            }else{\r\n                return(\r\n                    <span className=\"WeightFontBold\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\",color:\"#c2c2c2\"}}>{cartProduct.count * cartProduct.price_discount.old_price} ₽</s>\r\n                        {cartProduct.count * cartProduct.price_discount.new_price} ₽\r\n                </span>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n\r\n        function getButtonNavigation(typeNav, action){\r\n\r\n           switch(typeNav){\r\n               case\"1\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button className=\"activeButons\" onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"2\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"3\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>; break;\r\n           }\r\n\r\n           return(\r\n               <HorizontalScroll>\r\n                   {ButtonBlock}\r\n               </HorizontalScroll>\r\n           );\r\n        }\r\n\r\n        function getOneStepCartNone(){\r\n           return(\r\n               <Panel id=\"home\">\r\n\r\n                   <Placeholder\r\n                       icon={<Icon56MarketOutline />}\r\n                       action={false}\r\n\r\n                   >\r\n                       <h2>Корзина пуста</h2>\r\n                       <p>Для совершения заказа, положите в нее хотя-бы 1 товар</p>\r\n                   </Placeholder>\r\n\r\n               </Panel>\r\n           );\r\n        }\r\n\r\n        function getOneStepCart(ProductList,setCart,sumCart,setState,GetPresetsVisual,DopProductList){\r\n           return (\r\n               <Panel id=\"home\" >\r\n               <PanelHeader theme=\"light\"> {getButtonNavigation('1', setState.bind(this))}</PanelHeader>\r\n               <Group title=\"Товары\">\r\n                <Div className=\"CartBlockProductsOneStep\">\r\n                {getCartVisual(\"homes\", ProductList, setCart.bind())}\r\n            <div style={{clear:\"both\"}}></div>\r\n            </Div>\r\n        </Group>\r\n                   {GetPresetsVisual}\r\n                   {DopProductList}\r\n        <Group>\r\n            <Div className=\"SumItogOneSTepCart\">Сумма итого: <span className=\"OrangeColor\">{sumCart} ₽</span></Div>\r\n        </Group>\r\n        <Div><Button size=\"xl\" onClick={()=> {setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button></Div>\r\n               </Panel>\r\n        );\r\n        }\r\n\r\n\r\n\r\n        return(\r\n            <View\r\n                activePanel={this.state.activePanel}\r\n                className={\r\n                    osName === IOS ?\r\n                        \"IOSCLASSCSS\"\r\n                        :\r\n                        \"AndroidCLASSCSS\"\r\n                }\r\n                popout={this.state.popout}\r\n                header={this.props.ProductList.length<=0\r\n                    ?\r\n                    false\r\n                    :\r\n                    true\r\n                }\r\n            >\r\n\r\n\r\n                    {this.props.ProductList.length<=0 ? getOneStepCartNone() :\r\n\r\n                        getOneStepCart(this.props.ProductList, this.props.setCart.bind(),this.props.sumCart, this.setState.bind(this),this.GetPresetsVisual(),this.DopProductListVisual())\r\n                    }\r\n\r\n                <Panel id=\"dilivery\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('2', this.setState.bind(this))}</PanelHeader>\r\n                    <Dilivery\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        getUserSystemInfo={this.props.getUserSystemInfo.bind()}\r\n\r\n                        addressDefault={this.props.addressDefault}\r\n                        setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n\r\n                        AffiliateDefault={this.props.AffiliateDefault}\r\n                        setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        setTypeDilivery={this.props.setTypeDilivery.bind(this)}\r\n\r\n                        commentary={this.props.commentary}\r\n                        setComment={this.props.setComment.bind(this)}\r\n\r\n                        countPerson={this.props.countPerson}\r\n\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                        getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                        /*Для вычисления суммы бесплатной доставки*/\r\n                        sumCart={this.props.sumCart}\r\n\r\n                        setPopout={this.setState.bind(this)}\r\n                        ProductList={this.props.ProductList}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n                        hideModals={this.props.hideModals.bind(this)}\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" stretched level=\"secondary\"  style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"home\"});}}>В корзину</Button>\r\n                        <Button size=\"l\" stretched className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"order\"});}}>К оплате</Button>\r\n                    </Div>\r\n                </Panel>\r\n                <Panel id=\"order\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('3', this.setState.bind(this))}</PanelHeader>\r\n                    <PaymentsPage\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        SalePoints={this.props.SalePoints}\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        sumCart={this.props.sumCart}\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        addressDefault={this.props.addressDefault}\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                        getReloadInfODeliveryPay={this.props.checkedTypeDilivery ? this.props.getDeliveryDataPriceItogAffiliate.bind(this) : this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n\r\n                        action={this.setState.bind(this)}\r\n\r\n                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" level=\"secondary\" stretched style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button>\r\n\r\n                    </Div>\r\n                </Panel>\r\n            </View>\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default GetCartHome;","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './StartPageVKapp';\n// import App from './App2';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// globals/index.js\r\n\r\nglobal.ApiKey = '03478f08258a5b0e7f4a1e83dae33da9';\r\n\r\nglobal.CityListBind = [];","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert, Div,Input,FormLayout, Button, Select } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass FormNewAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                city: '',\r\n                street: '',\r\n                home: '',\r\n                entrance: '',\r\n                level: '',\r\n                flat: '',\r\n                comment:''\r\n        }\r\n\r\n        this.addressItems = [\r\n            // { label: 'Город', name: 'city', statusChech:'yes', minValue:5, valPls:'' },\r\n            { label: 'Название улицы', name: 'street', statusChech:'yes', minValue:4, valPls:'' },\r\n            { label: '№ дома', name: 'home', statusChech:'yes', minValue:0, valPls:'' },\r\n            { label: '№ квартиры/офиса', name: 'flat', statusChech:'', minValue:0, valPls:'' },\r\n            { label: '№ подъезда', name: 'entrance', statusChech:'', minValue:0, valPls:'' },\r\n            { label: 'Этаж', name: 'level', statusChech:'', minValue:0, valPls:''},\r\n            { label: 'Примечание', name: 'comment', statusChech:'', minValue:0, valPls:'Пример: Квартира сестры' }\r\n        ];\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.openDefault = this.openDefault.bind(this);\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n\r\n        if(this.props.AddressEdit){\r\n            this.state = {\r\n                    id:this.props.AddressEdit.id,\r\n                    city: this.props.AddressEdit.city,\r\n                    street: this.props.AddressEdit.street,\r\n                    home: this.props.AddressEdit.home,\r\n                    entrance: this.props.AddressEdit.podezd,\r\n                    level: this.props.AddressEdit.etaj,\r\n                    flat: this.props.AddressEdit.kvartira,\r\n                    comment: this.props.AddressEdit.comment\r\n                }\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n       // console.log(this.state);\r\n    }\r\n\r\n\r\n    openDefault () {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Исправить',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Не все поля адреса заполнены</h2>\r\n                    <p>Внимательно заполните все поля, для сохранения адреса доставки!</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n\r\n    saveNewAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://sushi-time31.ru/api/setAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n    saveEditAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://sushi-time31.ru/api/editAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            //this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n    getCitySelect(idCity,def = null){\r\n        if(idCity in global.CityListBind) {\r\n            const ListCityOrigin = global.CityListBind[idCity].listCity;\r\n            const ListCitys = Object.keys(global.CityListBind[idCity].listCity);\r\n            const ListOption = ListCitys.map((data, key) => {\r\n                return (<option\r\n                    key={key}\r\n                    value={ListCityOrigin[data].title}\r\n                >\r\n                    {\r\n                        ListCityOrigin[data].title\r\n                    }\r\n                </option>);\r\n            });\r\n            return (\r\n                ListOption\r\n            );\r\n        }else{\r\n            return (\"\");\r\n        }\r\n    }\r\n\r\n    getNulledForm(){\r\n        return(\r\n            <FormLayout>\r\n                <Select placeholder=\"Город / Населенный пункт\" onChange={this.onChange} name=\"city\" key={\"input_city\"} top=\"Город\">\r\n                    {this.getCitySelect(1)}\r\n                </Select>\r\n                {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                    <Input\r\n                        type=\"text\"\r\n                        name={name}\r\n                        key={\"input_\"+name}\r\n                        top={label}\r\n                        onChange={this.onChange}\r\n                        status={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >=minValue  ? 'valid' : 'error'\r\n                                    : 'error'\r\n                                : \"\"\r\n                        }\r\n                        bottom={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >=minValue  ? '' : 'Введенные значение не корректно '+this.state[name].length\r\n                                    : 'Обязательно к заполнению'\r\n                                : \"\"\r\n                        }\r\n                        placeholder={valPls}\r\n                    />\r\n                ))}\r\n                <Button size=\"l\" style={{background:\"#ff7300\"}} onClick={()=>{this.saveNewAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Подтвердить адрес</Button>\r\n            </FormLayout>\r\n        );\r\n    }\r\n\r\n\r\n    getEditForm(){\r\n        return(\r\n            <FormLayout>\r\n                <Select placeholder=\"Город / Населенный пункт\" onChange={this.onChange} name=\"city\" key={\"input_city\"} top=\"Город\" defaultValue={this.state.city}>\r\n                    {this.getCitySelect(1)}\r\n                </Select>\r\n                {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                    <Input\r\n                        type=\"text\"\r\n                        name={name}\r\n                        key={\"input_\"+name}\r\n                        top={label}\r\n                        onChange={this.onChange}\r\n                        status={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >minValue  ? 'valid' : 'error'\r\n                                    : 'error'\r\n                                : \"\"\r\n                        }\r\n                        value={this.state[name]}\r\n                        bottom={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >minValue  ? '' : 'Введенные значение не корректно'\r\n                                    : 'Обязательно к заполнению'\r\n                                : \"\"\r\n                        }\r\n                        placeholder={valPls}\r\n                    />\r\n                ))}\r\n                <Button size=\"l\" style={{background:\"#ff7300\"}} onClick={()=>{this.saveEditAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Завершить редактирование</Button>\r\n            </FormLayout>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Div>\r\n                {this.props.AddressEdit ? this.getEditForm() : this.getNulledForm()}\r\n            </Div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default FormNewAddress;","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\n\r\nexport default function ButtonInCart({CartProducts,typeProduct2,setCarts}){\r\n\r\n    function getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getButtonInCartProduct(typeProduct,setCart){\r\n       // console.log(CartProducts,'---0---',typeProduct,setCart);\r\n        if(!!CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            CartProducts.map((data,key)=>{\r\n                //console.log(data.id_Product,typeProduct.id_Product, data.type_product,typeProduct.type_product,'++++++++++++++++++');\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  getCountButton(typeProduct,CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return(getButtonInCartProduct(typeProduct2,setCarts));\r\n\r\n}\r\n","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nexport default function OneProduct({product,idCategory, ClickProduct, setCart, setProductModal, getButtonInCartProduct}) {\r\n// console.log('ут должна функция должна быть',ClickProduct);\r\n    // const ArrayProducts = product.map(oneProduct =>\r\n    //     //<OneProduct key={oneProduct.id} product={oneProduct} />\r\n    //     <Div className=\"blockProduct\" key={\"id_product_\"+oneProduct.id_Product}>\r\n    //         <Div className=\"imgPrewieProduct\"><img alt={oneProduct.title} src={oneProduct.img}/></Div><Div className=\"titleProduct\">{oneProduct.title}</Div><Div className=\"DescrProduct\">{oneProduct.description}</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">{oneProduct.price} руб.</span></Div>\r\n    //     </Div>\r\n    // );\r\n\r\n    // console.log(key);\r\n\r\n    function escapeHtml(text) {\r\n        var map = {\r\n            '&': '&amp;',\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '\"': '&quot;',\r\n            \"'\": '&#039;'\r\n        };\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n\r\n    function number_format(number, decimals, dec_point, separator ) {\r\n        number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\r\n        var n = !isFinite(+number) ? 0 : +number,\r\n            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n            sep = (typeof separator === 'undefined') ? ',' : separator ,\r\n            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n            s = '',\r\n            toFixedFix = function(n, prec) {\r\n                var k = Math.pow(10, prec);\r\n                return '' + (Math.round(n * k) / k)\r\n                    .toFixed(prec);\r\n            };\r\n        // Фиксим баг в IE parseFloat(0.55).toFixed(0) = 0;\r\n        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))\r\n            .split('.');\r\n        if (s[0].length > 3) {\r\n            s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n        }\r\n        if ((s[1] || '')\r\n            .length < prec) {\r\n            s[1] = s[1] || '';\r\n            s[1] += new Array(prec - s[1].length + 1)\r\n                .join('0');\r\n        }\r\n        return s.join(dec);\r\n    }\r\n\r\n    function getWeightProduct(Product_Weight,Product_WeightType){\r\n        if(Product_WeightType != 'л'){\r\n            return(\r\n                number_format(Product_Weight,'0','.', ' ')+' '+Product_WeightType\r\n            );\r\n        }else{\r\n            return(\r\n                Product_Weight+' '+Product_WeightType\r\n            );\r\n        }\r\n    }\r\n\r\n    function getModyficateBlock(ArrayMod){\r\n        var ListMod = Object.keys(ArrayMod);\r\n        if(ListMod.length <=0){\r\n            return \"\";\r\n        }else{\r\n            var VisualList = ListMod.map((datas,keys)=>{\r\n                return (<div key={keys} className=\"ModyficateProduct\"><img src={ArrayMod[datas].mod_img} /></div>);\r\n            });\r\n            return(\r\n                <div className=\"ModyficateBlock\">{VisualList}</div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function getProductDiv(productList,idCategory,ClickProduct,setCart,setProductModal ,getButtonInCartProduct){\r\n\r\n         //console.log(ClickProduct,'в корзину функция');\r\n        var ProductCat = productList;\r\n\r\n        const WeightProduct = '';\r\n\r\n\r\n\r\n        const ArrayProducts = ProductCat.map((typeProduct,idTypeProduct) =>\r\n            <Div key={\"blockProducts_\"+typeProduct.id_Product+\"_\"+idTypeProduct} className=\"blockProduct\" id={\"id_product_\"+typeProduct.id_Product+\"_type_\"+typeProduct.type_product}>\r\n                {getModyficateBlock(typeProduct.modyficate)}\r\n                <Div className=\"imgPrewieProduct\">\r\n                    <img\r\n                        alt={typeProduct.title}\r\n                        src={typeProduct.img}\r\n                        onClick={() =>{\r\n                            ClickProduct('Panels_Product');\r\n                            setProductModal([typeProduct]);\r\n                            console.log('Нажали на фотку',ProductCat,idTypeProduct)}\r\n                        }\r\n                    />\r\n                </Div>\r\n                <Div className=\"titleProduct\">\r\n                    {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                    {escapeHtmlDecode(typeProduct.title)}\r\n                    <span className=\"redTextP\">\r\n                        {getWeightProduct(typeProduct.weight,typeProduct.weight_type)}\r\n                    </span>\r\n                </Div>\r\n                <Div className=\"DescrProduct\">\r\n                    {escapeHtmlDecode(typeProduct.description)}\r\n                    <div>\r\n                    </div>\r\n                    {typeProduct.type_info != '' ?\r\n                        <div className=\"WeightBlock\">\r\n                            {typeProduct.type_info}\r\n                        </div>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                </Div>\r\n                <Div className=\"priceProductBig\">\r\n\r\n                        {getPriceProducts(typeProduct)}\r\n\r\n                    {getButtonInCartProduct(typeProduct,setCart)}\r\n                </Div>\r\n            </Div>\r\n        );\r\n\r\n\r\n        return ArrayProducts;\r\n    }\r\n\r\n    function getPriceProducts(typeProduct){\r\n        if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n            return (<span className=\"priceProduct\">\r\n                {number_format(typeProduct.price,'0','.',' ')} ₽\r\n                </span>\r\n            );\r\n        }else{\r\n            return(\r\n                <span className=\"priceProduct\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\"}}>{number_format(typeProduct.price_discount.old_price,'0','.',' ')} ₽</s>\r\n                    {number_format(typeProduct.price_discount.new_price,'0','.',' ')} ₽\r\n                </span>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        getProductDiv(product,idCategory,ClickProduct, setCart , setProductModal, getButtonInCartProduct)\r\n    );\r\n}"],"sourceRoot":""}