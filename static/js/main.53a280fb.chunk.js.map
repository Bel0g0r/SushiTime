{"version":3,"sources":["panels/catalog/ButtonInCart.js","panels/ProfileUser/UserInfo.js","panels/Profile.js","panels/Persik.js","panels/Nopersik.js","panels/catalog/OneProduct.js","panels/catalog/ProductList.js","panels/catalog/CategoryList.js","panels/catalog/CatalogProduct.js","panels/Cart/GetOneAddress.js","panels/Cart/GetOneAddressOff.js","panels/Cart/FormNewAddress.js","panels/Cart/DiliveryAddress.js","panels/Cart/GetOneAffiliateAddress.js","panels/Cart/AffiliateList.js","panels/Cart/Dilivery.js","panels/Cart/NewOrderServer.js","panels/Cart/PaymentsPage.js","panels/Cart/CartHome.js","StartPageVKapp.js","index.js","img/persik.png"],"names":["ButtonInCart","CartProducts","getInCarts","typeProduct","setCart","onClick","ButOk","id_CartPr","map","data","key","id_Product","type_product","counts","className","getCountButton","getButtonInCartProduct","typeProduct2","setCarts","UserInfo","props","state","StatusNotification","this","getStatusNotificate","id","style","maxWidth","margin","them","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","dataUsers","error","getInfoUserNoneAuth","dataUser","point","asideContent","checked","onChange","PushClick","connect","sendPromise","then","datas","setState","response","is_allowed","setStatusNotification","catch","err","OffPushNotyfication","OnPushNotyfication","getPanelProfil","React","Component","ProfileUserPage","platform","useState","activePanel","setActivePanel","setUser","useEffect","a","async","user","fetchData","go","e","currentTarget","dataset","to","setActivePanels","bind","escapeHtmlDecode","text","replace","OneProduct","product","idCategory","number_format","number","decimals","dec_point","separator","n","isFinite","prec","Math","abs","sep","dec","s","k","pow","round","toFixed","toFixedFix","split","length","Array","join","productList","ClickProduct","setProductModal","ProductCat","idTypeProduct","ArrayMod","ListMod","Object","keys","VisualList","mod_img","getModyficateBlock","modyficate","alt","img","console","log","Product_Weight","weight","Product_WeightType","weight_type","type_info","price","getProductDiv","ProductList","nameCategory","productsLists","products","compare","b","ArrayProducts","Pr","ClickProductF","ReverceStatus","CatalogLists","reduceRight","arr","last","index","coll","concat","ReverceCatalog","sort","comparePrice","oneProduct","keyId","GetSets","ArrayPr","names","ProductArray","GetSushi","GetRoli","GetNoneCat","nameCategorys","idCategorys","onClickProduct","CategoryList","hndlClick","aP","productModal","setActiveCategory","ActiveCategory","loadingPage","panelCategory","loading","ProductsLists","queryParams","vk_platform","osname","theme","href","sliderHeader","classNameDivCategory","OPT","Loadings","imgCategory","ClickCategory","Title","background","noShadow","left","IOS","addon","ShowCategory","id_Category","ClickBack","ProductInfo","CatalogProduct","GetOneAddress","AddressN","closePopout","AddresInfo","comment","street","home","setPopout","popout","axios","method","headers","addressInfo","idUserVK","userInfo","responseType","errorInfo","result","result_add","setAddressDefault","getAddressUserSystem","actions","autoclose","action","deletedAddress","onClose","width","float","podezd","etaj","kvartira","setAddressEdit","marginRight","openDefault","name","value","getAddressFull","defaultChecked","setDataDeliveryPrice","setDeliveryDataItogs","setAddressInfoUsers","getAddressTitle","defaultCheckedR","addressDefault","NumberAddress","GetOneAddressOff","disabled","FormNewAddress","entrance","level","flat","addressItems","label","statusChech","minValue","valPls","AddressEdit","type","top","status","bottom","placeholder","size","saveNewAddress","hideModals","saveEditAddress","getEditForm","getNulledForm","DiliveryAddress","listAddress","listAddressOff","addressOk","dataAddress","setStates","formNewAddressData","formEditAddressData","showModals","delUpdate","id_UserVK","getFormNewAddress","listAddressGlobal","ListAddressNoDelivery","listAddressGlobalOff","getAddressUsers","listAddressU","DataSetAddress","addressOrderInfoUser","setShowBTNNewAddress","showBTNNewAddress","ee","diliveryData","priceDelivery","priceDilivery","minSumOrder","min_sum_order","minSumFreeDelivery","min_sum_free_dilivery","setDataDiliveryPrice","dataAddressOff","dataAddress2","keyId2","getListAddressVisual","GetOneAffiliateAddress","dangerouslySetInnerHTML","__html","operating_mode","setAffiliateDefault","AffiliateDefault","AffiliateList","listAffiliate","addressAffiliateOk","dataAffiliate","id_City","listOffAffiliate","list","getAddressAffiliate","listAffiliateGlobal","getDeliveryDataPriceItogAffiliate","blueBackground","backgroundColor","Dilivery","UserCard","phone","email","CheckSMSCode","phoneValue","codeValue","resultVerificationCode","tooltip","snackbar","showFormNewAddress","openBase","userSystemInfo","phone_number","layout","fill","height","phoneVerification","VerificationCode","getUserSystemInfo","event","target","setComment","types","values_count","countPerson","display","justifyContent","stretched","getDataCountPerson","textAlign","readOnly","marginLeft","getValueInputCode","checkVerificationCode","defaultValue","getValueInputPhone","setVerificationPhone","checkedTypeDilivery","setTypeDilivery","getButtonTypeDilivery","getListAddress","getListAffiliate","getCountPersonInput","getCommentsTextarea","icon","color","showModal","commentary","getCommentsData","Param","getNoneCartProduct","getInfoUserAuth","getOkListAddress","NewOrderServer","statusNewOrder","dataOrder","DataOrderInfo","getPageOkOrderSet","newOrderStats","setOkNewOrderView","setDataServer","PaymentsPage","SalePoints","value2","getReloadInfODeliveryPay","options","i","push","points","step","min","max","Number","setPointsDefaultsSale","String","sum","sumCart","DataDeliveryInfo","DeliveryPriceItog","errorOrderFinal","checkTypeDiliveryInfo","DataOrder","DataAddressDelivery","getAddressDelivery","DataAddressAffiliate","typeDelivery","AddressDelivery","idAffiliatePickup","PointsSale","DeliverySum","Comments","comments","DopInfo","typePay","cart","getCountsTimeBonus","PriceInfoVisual","getSumCartItogo","getDataOrder","checkMinSummaCart","osName","GetCartHome","getButtonNavigation","typeNav","ButtonBlock","data-to","header","Products","results","cartProduct","idProducts","marginBottom","clear","count","getCartVisual","getOneStepCart","DataDeliveryInfoPay","App","parseQueryString","string","slice","queryParam","kvp","reduce","query","ParamStart","loadingCatalog","activeStory","countCartProduct","activeModal","DeliveryAddressOKCity","StatusLoadSlide","slideHeaderArray","slideIndex","onStoryChange","getCartDB","story","sumCartItog","CPr","document","cookie","typeSlide","getTypeSlideGet","setSlideArray","listSlide","ArraySlide","ArraySlides","Bullets","AutoPlays","SliderVisual","autoplay","slideWidth","bullets","getSlideHeaderArray","setTimeout","reloadSlideHeaderSetTime","url","getIntervalCart","dataOld","dataNew","ListProduct","setCountCartVisal","id_user","listProduct","ListOld","JSON","stringify","ListNew","StatusReloadBasketData","ReloadBasketDataFN","setUserSystem","JsonBasket","basketJson","tE","countPlus","setcountCartProduct","noAdd","cartProducts","setcountCartProductVar","splice","btoa","encodeURI","setCartServer","window","location","search","hash","modal","setModal","right","dynamicContentHeight","caption","tabbar","selected","data-story","getSuccesOrderPage","getSliderGalery","getDeliveryDataPriceItog","getNotificationPage","send","ReactDOM","render","getElementById","module","exports"],"mappings":"4tBAIe,SAASA,EAAT,GAA4D,IAArCC,EAAoC,EAApCA,aAElC,SAASC,EAAWC,EAAYC,GAO5B,OAJI,4BAAQC,QAAS,WAAOD,EAAQD,KAAhC,qDAkDR,OA5BA,SAAgCA,EAAYC,GAExC,GAAKH,EAAa,CACd,IAAIK,GAAQ,EACRC,EAAY,GAShB,OARAN,EAAaO,KAAI,SAACC,EAAKC,GAEhBD,EAAKE,aAAeR,EAAYQ,WAAaF,EAAKG,eAAiBT,EAAYS,eAC9EN,GAAQ,EACRC,EAAYG,OAIP,IAAVJ,EA5BX,SAAwBH,EAAYU,EAAOT,GAYvC,OAVI,yBAAKU,UAAU,iBACX,yBAAKA,UAAU,QAAQT,QAAS,WAAOD,EAAQD,EAAY,OAA3D,KAGCU,EACD,yBAAKC,UAAU,QAAQT,QAAS,WAAOD,EAAQD,KAA/C,MAuBQY,CAAeZ,EAAYF,EAAaM,GAAb,MAAiCH,GAG7DF,EAAWC,EAAYC,GAIlC,OAAOF,EAAWC,EAAYC,GAM/BY,CAvD+D,EAAvBC,aAAuB,EAAVC,U,6LCiIjDC,E,YAtHX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,oBAAmB,GAHR,E,iFAQfC,KAAKC,wB,uCAGQ,IAAD,OACZ,OACI,yBAAKC,GAAIF,KAAKH,MAAMK,GAAIC,MAAO,CAACC,SAAS,SAASC,OAAO,UAAWC,KAAK,SACpEN,KAAKH,MAAMU,aACR,kBAAC,IAAD,CAAOC,MAAM,oEAET,kBAAC,IAAD,CACIC,OAAQT,KAAKH,MAAMU,YAAYG,UAAY,kBAAC,IAAD,CAAQC,IAAKX,KAAKH,MAAMU,YAAYG,YAAe,KAC9FE,YAAaZ,KAAKH,MAAMU,YAAYM,MAAQb,KAAKH,MAAMU,YAAYM,KAAKL,MAAQR,KAAKH,MAAMU,YAAYM,KAAKL,MAAQ,IAFxH,UAIQR,KAAKH,MAAMU,YAAYO,WAJ/B,YAI6Cd,KAAKH,MAAMU,YAAYQ,aAK3Ef,KAAKH,MAAMmB,UAAUA,UAAUC,MAC5BjB,KAAKkB,sBAGL,kBAAC,IAAD,CAAOV,MAAM,gEACT,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,OAAQ,kBAAC,IAAD,OADZ,kEAGkBT,KAAKH,MAAMmB,UAAUA,UAAUG,SAASC,SAMtE,kBAAC,IAAD,KACQ,kBAAC,IAAD,CACIX,OAAQ,kBAAC,IAAD,MACRY,aAAc,kBAAC,IAAD,CACVC,QAAStB,KAAKF,MAAMC,mBACpBwB,SAAU,WAAK,EAAKC,eACxBZ,YAAY,mLALhB,iF,4CAiBhB,OACI,kBAAC,IAAD,iV,4CAMc,IAAD,OACjBa,IAAQC,YAAY,wBAAyB,CAAC,OAAU,8BAA+B,OAAU,CAAC,QAAW,YAAY,EAAI,QAAQ,aAAe,6EAC/IC,MAAK,SAACC,GACH,EAAKC,SAAS,CAAC9B,mBAAoB6B,EAAME,SAASC,aAClD,EAAKlC,MAAMmC,sBAAsBJ,EAAME,SAASC,eAEnDE,OAAM,SAACC,GACJ,EAAKL,SAAS,CAAC9B,oBAAoB,IACnC,EAAKF,MAAMmC,uBAAsB,Q,mCAOJ,IAAlChC,KAAKF,MAAMC,mBACVC,KAAKmC,sBAELnC,KAAKoC,uB,4CAIS,IAAD,OACjBX,IAAQC,YAAY,4BAA6B,IAC5CC,MAAK,SAACC,GACH,EAAKC,SAAS,CAAC9B,oBAAoB,IACnC,EAAKF,MAAMmC,uBAAsB,MAEpCC,OAAM,SAACC,GACJ,EAAKL,SAAS,CAAC9B,oBAAoB,IACnC,EAAKF,MAAMmC,uBAAsB,Q,2CAKxB,IAAD,OAChBP,IAAQC,YAAY,6BAA8B,IAC7CC,MAAK,SAACC,GACH,EAAK3B,yBAERgC,OAAM,SAACC,GACA,EAAKjC,2B,+BAMjB,OACID,KAAKqC,qB,GAnHMC,IAAMC,W,0DC+BdC,I,aCjCAC,cCGAA,cFLS,SAACzB,GAAe,IAAD,EACA0B,mBAAS,aADT,mBAC/BC,EAD+B,KAClBC,EADkB,OAEPF,mBAAS,MAFF,mBAE/BnC,EAF+B,KAElBsC,EAFkB,KAMtCC,qBAAU,YAQT,mBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACoBtB,IAAQC,YAAY,wBADxC,OACOuB,EADP,OAECJ,EAAQI,GAFT,qCAMAC,KACE,IAOH,OACC,kBAAC,IAAD,CAAMP,YAAaA,GAClB,kBAAC,EAAD,CAAUzC,GAAG,YAAYK,YAAaA,EAAa4C,GAP1C,SAAAC,GACVR,EAAeQ,EAAEC,cAAcC,QAAQC,KAMqBvC,UAAWA,EAAWwC,gBAAiBZ,EAAea,U,GAAYzB,sBAAuBhB,EAAUgB,sBAAsByB,U,QGrCvL,SAASC,GAAiBC,GACtB,OAAOA,EACFC,QAAQ,SAAU,KAClBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,UAAW,KACnBA,QAAQ,UAAW,KAGb,SAASC,GAAT,GAA2G,IAAtFC,EAAqF,EAArFA,QAAqF,EAA7EC,WAwBxC,SAASC,EAAcC,EAAQC,EAAUC,EAAWC,GAChDH,GAAUA,EAAS,IAAIL,QAAQ,gBAAiB,IAChD,IAAIS,EAAKC,UAAUL,IAAeA,EAAL,EACzBM,EAAQD,UAAUJ,GAAgBM,KAAKC,IAAIP,GAAb,EAC9BQ,EAA4B,qBAAdN,EAA6B,IAAMA,EACjDO,EAA4B,qBAAdR,EAA6B,IAAMA,EACjDS,EAAI,GAkBR,OAXAA,GAAKL,EANY,SAASF,EAAGE,GACrB,IAAIM,EAAIL,KAAKM,IAAI,GAAIP,GACrB,MAAO,IAAMC,KAAKO,MAAMV,EAAIQ,GAAKA,GAC5BG,QAAQT,GAGTU,CAAWZ,EAAGE,GAAQ,GAAKC,KAAKO,MAAMV,IAC7Ca,MAAM,MACL,GAAGC,OAAS,IACdP,EAAE,GAAKA,EAAE,GAAGhB,QAAQ,0BAA2Bc,KAE9CE,EAAE,IAAM,IACRO,OAASZ,IACVK,EAAE,GAAKA,EAAE,IAAM,GACfA,EAAE,IAAM,IAAIQ,MAAMb,EAAOK,EAAE,GAAGO,OAAS,GAClCE,KAAK,MAEPT,EAAES,KAAKV,GAsFlB,OAzDA,SAAuBW,EAAYvB,EAAWwB,EAAa1G,EAAQ2G,EAAiB/F,GAGhF,IAAIgG,EAAaH,EAiDjB,OA3CsBG,EAAWxG,KAAI,SAACL,EAAY8G,GAAb,OACjC,kBAAC,IAAD,CAAKvG,IAAK,iBAAiBP,EAAYQ,WAAW,IAAIsG,EAAenG,UAAU,eAAeW,GAAI,cAActB,EAAYQ,WAAW,SAASR,EAAYS,cAxBpK,SAA4BsG,GACxB,IAAIC,EAAUC,OAAOC,KAAKH,GAC1B,GAAGC,EAAQT,QAAS,EAChB,MAAO,GAEP,IAAIY,EAAaH,EAAQ3G,KAAI,SAAC2C,EAAMkE,GAChC,OAAQ,yBAAK3G,IAAK2G,EAAMvG,UAAU,qBAAoB,yBAAKoB,IAAKgF,EAAS/D,GAAOoE,cAEpF,OACI,yBAAKzG,UAAU,mBAAmBwG,GAgBjCE,CAAmBrH,EAAYsH,YAChC,kBAAC,IAAD,CAAK3G,UAAU,oBACX,yBACI4G,IAAKvH,EAAY4B,MACjBG,IAAK/B,EAAYwH,IACjBtH,QAAS,WACLyG,EAAa,kBACbC,EAAgB,CAAC5G,IACjByH,QAAQC,IAAI,mFAAkBb,EAAWC,OAIrD,kBAAC,IAAD,CAAKnG,UAAU,gBAEVmE,GAAiB9E,EAAY4B,OAC9B,0BAAMjB,UAAU,aApDNgH,EAqDY3H,EAAY4H,OApDrB,WADYC,EAqDgB7H,EAAY8H,aAlDzD1C,EAAcuC,EAAe,IAAI,IAAK,KAAK,IAAIE,EAI/CF,EAAe,IAAIE,KAiDnB,kBAAC,IAAD,CAAKlH,UAAU,gBACVmE,GAAiB9E,EAAYgC,aAC9B,8BAE0B,IAAzBhC,EAAY+H,UACT,yBAAKpH,UAAU,eACVX,EAAY+H,WAGjB,IAGR,kBAAC,IAAD,CAAKpH,UAAU,mBACX,0BAAMA,UAAU,gBACXyE,EAAcpF,EAAYgI,MAAM,IAAI,IAAI,KAD7C,WAGCnH,EAAuBb,EAAYC,KAxEpD,IAA0B0H,EAAeE,KAoFrCI,CAAc/C,EAAQC,EAvI2F,EAAjEwB,aAAiE,EAAnD1G,QAAmD,EAA1C2G,gBAA0C,EAAzB/F,wB,IC+IjFqH,G,YAhJX,WAAYjH,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACT6C,YAAa,SACboE,aAAc,OACdC,cAAe,KACfC,SAAS,CAAC,CAAC,EAAI,CAAC,MAAQ,gFAPb,E,sEAsBf,SAASC,EAAQnE,EAAGoE,GAChB,OAAIpE,EAAE6D,MAAQO,EAAEP,OACJ,EAER7D,EAAE6D,MAAQO,EAAEP,MACL,EAGJ,EASX,SAASQ,EAAcC,EAAGC,EAAc9B,EAAgB3G,EAASY,GAA2C,IAAD,OAAnB8H,EAAmB,uDAAH,EAChGC,EAAe,GAenB,OAdqB,IAAlBD,IACCC,EA7BR,SAAwBH,GAKpB,OAJUxB,OAAOC,KAAKuB,GAAII,aAAY,SAAUC,EAAKC,EAAMC,EAAOC,GAE9D,OAAcH,EAAII,OAAOH,KAC1B,IAyBgBI,CAAeV,IAEb,IAAlBE,IACCC,EAZR,SAAsBH,GAElB,OAAOxB,OAAOC,KAAKuB,GAAIW,KAAKd,GAUTe,CAAaZ,IAGX,IAAlBE,IACCC,EAAe3B,OAAOC,KAAKuB,IAGfG,EAAavI,KAAI,SAACiJ,EAAYC,GAAb,OAC7B,kBAACtE,GAAD,CAAY1E,IAAK,YAAYgJ,EAAOrE,QAASuD,EAAGa,GAAa3C,aAAc+B,EAAc7D,KAAK,GAAO5E,QAASA,EAAQ4E,KAAK,GAAO+B,gBAAiBA,EAAgB/B,KAAK,GAAOhE,uBAAwBA,EAAuBgE,KAAK,QAgC3O,SAAS2E,EAAQC,GAEb,OACI,kBAAC,IAAD,CAAKnI,GAAI,mBAAmBmI,EAAQC,MAAOnJ,IAAK,mBAAmBkJ,EAAQC,MAAO/I,UAAU,qBACvF6H,EAAciB,EAAQE,aAAaF,EAAQ9C,aAAa9B,KAAKzD,MAAMqI,EAAQ7C,gBAAgB/B,KAAKzD,MAAMqI,EAAQxJ,QAAQ4E,KAAKzD,MAAMqI,EAAQ5I,uBAAuBgE,KAAKzD,QAKlL,SAASwI,EAASF,GACd,OACI,kBAAC,IAAD,CAAKpI,GAAIoI,EAAMA,MAAO/I,UAAU,qBAC5B,kBAAC,IAAD,CAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAKA,UAAU,oBAAmB,yBAAK4G,IAAI,2BAAOxF,IAAI,mEAAuE,kBAAC,IAAD,CAAKpB,UAAU,gBAAf,0FAAoD,kBAAC,IAAD,CAAKA,UAAU,gBAAf,yFAAmD,kBAAC,IAAD,CAAKA,UAAU,mBAAf,0DAA2C,0BAAMA,UAAU,gBAAhB,+BAC7S,kBAAC,IAAD,CAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAKA,UAAU,oBAAmB,yBAAK4G,IAAI,2BAAOxF,IAAI,mEAAuE,kBAAC,IAAD,CAAKpB,UAAU,gBAAf,8EAAkD,kBAAC,IAAD,CAAKA,UAAU,gBAAf,yFAAmD,kBAAC,IAAD,CAAKA,UAAU,mBAAf,0DAA2C,0BAAMA,UAAU,gBAAhB,+BAC3S,kBAAC,IAAD,CAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAKA,UAAU,oBAAmB,yBAAK4G,IAAI,2BAAOxF,IAAI,mEAAuE,kBAAC,IAAD,CAAKpB,UAAU,gBAAf,qDAA6C,kBAAC,IAAD,CAAKA,UAAU,gBAAf,yFAAmD,kBAAC,IAAD,CAAKA,UAAU,mBAAf,0DAA2C,0BAAMA,UAAU,gBAAhB,+BACtS,kBAAC,IAAD,CAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAKA,UAAU,oBAAmB,yBAAK4G,IAAI,2BAAOxF,IAAI,mEAAuE,kBAAC,IAAD,CAAKpB,UAAU,gBAAf,4GAAuD,kBAAC,IAAD,CAAKA,UAAU,gBAAf,yFAAmD,kBAAC,IAAD,CAAKA,UAAU,mBAAf,0DAA2C,0BAAMA,UAAU,gBAAhB,gCAK5T,SAASkJ,EAAQH,GACb,OACI,kBAAC,IAAD,CAAKpI,GAAIoI,EAAMA,MAAO/I,UAAU,qBAC5B,kBAAC,IAAD,CAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAKA,UAAU,oBAAmB,yBAAK4G,IAAI,iCAAQxF,IAAI,sEAA0E,kBAAC,IAAD,CAAKpB,UAAU,gBAAf,wEAAiD,kBAAC,IAAD,CAAKA,UAAU,gBAAf,yFAAmD,kBAAC,IAAD,CAAKA,UAAU,mBAAf,IAAkC,0BAAMA,UAAU,gBAAhB,+BACrS,kBAAC,IAAD,CAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAKA,UAAU,oBAAmB,yBAAK4G,IAAI,iCAAQxF,IAAI,sEAA0E,kBAAC,IAAD,CAAKpB,UAAU,gBAAf,8EAAkD,kBAAC,IAAD,CAAKA,UAAU,gBAAf,yFAAmD,kBAAC,IAAD,CAAKA,UAAU,mBAAf,IAAkC,0BAAMA,UAAU,gBAAhB,+BACtS,kBAAC,IAAD,CAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAKA,UAAU,oBAAmB,yBAAK4G,IAAI,iCAAQxF,IAAI,sEAA0E,kBAAC,IAAD,CAAKpB,UAAU,gBAAf,+FAAoD,kBAAC,IAAD,CAAKA,UAAU,gBAAf,yFAAmD,kBAAC,IAAD,CAAKA,UAAU,mBAAf,IAAkC,0BAAMA,UAAU,gBAAhB,+BACxS,kBAAC,IAAD,CAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAKA,UAAU,oBAAmB,yBAAK4G,IAAI,iCAAQxF,IAAI,sEAA0E,kBAAC,IAAD,CAAKpB,UAAU,gBAAf,kHAAwD,kBAAC,IAAD,CAAKA,UAAU,gBAAf,yFAAmD,kBAAC,IAAD,CAAKA,UAAU,mBAAf,IAAkC,0BAAMA,UAAU,gBAAhB,gCAKxT,SAASmJ,EAAWJ,GAChB,OACI,kBAAC,IAAD,CAAKpI,GAAIoI,EAAO/I,UAAU,qBAC1B,qLAWR,OACI,mBAxEJ,SAA6BoJ,GAEzB,MAAmC,SAAhCA,EAAcA,cAEL,kBAACP,EAAD,CACJjJ,IAAKwJ,EAAcxJ,IACnBmJ,MAAOK,EAAcA,cACrBJ,aAAcI,EAAc3B,cAC5BzB,aAAcoD,EAAcpD,aAAa9B,KAAKzD,MAC9CnB,QAAS8J,EAAc9J,QAAQ4E,KAAKzD,MACpCwF,gBAAiBmD,EAAcnD,gBAAgB/B,KAAKzD,MACpDP,uBAAwBkJ,EAAclJ,uBAAuBgE,KAAKzD,QAGvC,UAAhC2I,EAAcA,cACL,kBAACH,EAAD,CAAUF,MAAOK,EAAcA,gBAER,SAAhCA,EAAcA,cACL,kBAACF,EAAD,CAASH,MAAOK,EAAcA,gBAE9B,kBAACD,EAAD,CAAYJ,MAAOK,EAAcA,kBAoD7C,CACI3B,cAAehH,KAAKH,MAAMmH,cAC1B2B,cAAe3I,KAAKH,MAAMkH,aAC1BhD,WAAY/D,KAAKH,MAAM+I,YACvBrD,aAAcvF,KAAKH,MAAMgJ,eAAepF,KAAKzD,KAAK,kBAClDnB,QAASmB,KAAKH,MAAMhB,QAAQ4E,KAAKzD,MACjCwF,gBAAiBxF,KAAKH,MAAM2F,gBAAgB/B,KAAKzD,MACjDP,uBAAwBO,KAAKH,MAAMJ,uBAAuBgE,KAAKzD,Y,GA5IrDsC,IAAMC,WCDhC,SAASmB,GAAiBC,GACtB,OAAOA,EACFC,QAAQ,SAAU,KAClBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,UAAW,KACnBA,QAAQ,UAAW,K,IA4TbkF,G,YAvTX,WAAajJ,GAAQ,IAAD,8BAChB,4CAAMA,KAWVkJ,UAAY,SAACC,GACT3C,QAAQC,IAAI,OAAQ,0FAAoB0C,GACxC,EAAKnH,SAAS,CAAEc,YAAaqG,KAdb,EAiBpBxD,gBAAkB,SAACwD,GACf3C,QAAQC,IAAI,OAAQ,iJAA8B0C,EAAG,gBACrD,EAAKnH,SAAS,CAAEoH,aAAcD,KAnBd,EAsBpBE,kBAAoB,SAACF,GACjB3C,QAAQC,IAAI,OAAQ,uHAAwB0C,GAC5C,EAAKnH,SAAS,CAAEsH,eAAgBH,KAtBhC,EAAKlJ,MAAQ,CACTsJ,aAAa,EACbzG,YAAa,QACbsE,SAAU,GACVoC,cAAe,GACfF,eAAgB,EAChBF,aAAa,CAAC,CAAC,MAAQ,wFAAkB,YAAc,wFAAkB,YAAc,IAAI,MAAQ,UARvF,E,wEA4BTrK,EAAYC,GAOnB,OAJI,4BAAQC,QAAS,WAAOD,EAAQD,KAAhC,uD,qCAOOA,EAAYU,EAAOT,GAY9B,OAVI,yBAAKU,UAAU,iBACX,yBAAKA,UAAU,QAAQT,QAAS,WAAOD,EAAQD,EAAY,OAA3D,KAGCU,EACD,yBAAKC,UAAU,QAAQT,QAAS,WAAOD,EAAQD,KAA/C,Q,6CAQWA,EAAYC,GAE/B,GAAKmB,KAAKH,MAAMnB,aAAa,CACzB,IAAIK,GAAQ,EACRC,EAAY,GAQhB,OAPAgB,KAAKH,MAAMnB,aAAaO,KAAI,SAACC,EAAKC,GAC3BD,EAAKE,aAAeR,EAAYQ,WAAaF,EAAKG,eAAiBT,EAAYS,eAC9EN,GAAQ,EACRC,EAAYG,OAIP,IAAVJ,EAESiB,KAAKR,eAAeZ,EAAYoB,KAAKH,MAAMnB,aAAaM,GAAxB,MAA4CH,GAG7EmB,KAAKrB,WAAWC,EAAYC,GAIvC,OAAOmB,KAAKrB,WAAWC,EAAYC,K,0CAOvCmB,KAAK6B,SAAS,CAACyH,SAAS,IACxBtJ,KAAK6B,SAAS,CAACoF,SAASjH,KAAKH,MAAM0J,cAAcH,aAAa,M,6CAM9D,MAAyC,eAAtCpJ,KAAKH,MAAM2J,YAAYC,YACf,6CAEA,uB,+BA4HX,IAAMC,EAASjH,cAEf,OACI,kBAAC,IAAD,CAAME,YAAa3C,KAAKF,MAAM6C,aAC1B,kBAAC,IAAD,CAAOzC,GAAG,SACN,kBAAC,IAAD,CACIyJ,MAAM,SADV,0DAKA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKpK,UAAU,aACX,yBAAKoB,IAAI,0DAC8B,eAAtCX,KAAKH,MAAM2J,YAAYC,YAEpB,kBAAC,IAAD,CAAKlK,UAAU,YACX,iDAGJ,kBAAC,IAAD,CAAKA,UAAU,YACX,uBAAGqK,KAAK,oBAAR,4DAIZ,yBAAK1J,GAAG,gBACHF,KAAKH,MAAMgK,iBAGhB,kBAAC,IAAD,CAEItK,UAAWS,KAAK8J,wBACpB,mBAtEhB,SAAwBC,EAAIC,GAIxB,OAA2B,IAAxBlB,EAAa3D,OACL,IAEa,IAAjB4E,EAAIC,SAIiBnE,OAAOC,KAAKiE,EAAIjB,cAAc7J,KAAI,SAAC2J,EAAazJ,GAAd,OAElD,kBAAC,IAAD,CACIgB,MAAO,CAAC,WAAa,mGAAmG4J,EAAIjB,aAAaF,GAAaqB,YAAY,IAAI,eAAiB,QACvL1K,UAAU,mBACVJ,IAAKA,EAAI,IAAIyJ,EACb9J,QACI,WACIiL,EAAIZ,eAAeP,GACnBmB,EAAIG,cAAc,eAIzBH,EAAIjB,aAAaF,GAAauB,UAMhC,gBAwCH,CAAgBhL,IAAI,cAAc2J,aAAc9I,KAAKF,MAAMmH,SAAU+C,SAAUhK,KAAKF,MAAMsJ,YAAac,cAAelK,KAAK+I,UAAUtF,KAAKzD,MAAOmJ,eAAgBnJ,KAAKkJ,kBAAkBzF,KAAKzD,UAIrM,kBAAC,IAAD,CAAOE,GAAG,aACN,mBA9GZ,SAAsB6J,GAClB,OAAoB,IAAjBA,EAAIC,SAIK,yBAAK7J,MAAO,CAACiK,WAAW,YAC5B,kBAAC,IAAD,CACIT,MAAM,QACNU,UAAU,EACVC,KAAM,kBAAC,IAAD,CAAcxL,QAAS,kBAAMiL,EAAIG,cAAc,WAAWR,IAAWa,IACvE,kBAAC,KAAD,MAAuB,kBAAC,KAAD,OAC3BC,MAAO,kBAAC,IAAD,CAAc1L,QAAS,kBAAMiL,EAAIG,cAAc,WAA/C,mCAENH,EAAIjB,aAAaiB,EAAIU,cAAcN,OAExC,kBAAC,GAAD,CACItB,eAAgBkB,EAAIxE,aAAa9B,KAAKzD,MACtCgH,cAAe+C,EAAIjB,aAAaiB,EAAIU,cAAc3D,YAAa3H,IAAK4K,EAAIjB,aAAaiB,EAAIU,cAAcC,YACvG9B,YAAamB,EAAIU,aACjB1D,aAAa,OACblI,QAASkL,EAAIlL,QAAQ4E,KAAKzD,MAC1BP,uBAAwBsK,EAAItK,uBAAuBgE,KAAKzD,MACxDwF,gBAAiBuE,EAAIvE,gBAAgB/B,KAAKzD,SAO9C,kBAAC,IAAD,+CAiFA,CACI8I,aAAc9I,KAAKF,MAAMmH,SACzB+C,SAAUhK,KAAKF,MAAMsJ,YACrBc,cAAelK,KAAK+I,UAAUtF,KAAKzD,MACnCuF,aAAcvF,KAAK+I,UAAUtF,KAAKzD,KAAK,kBACvCwF,gBAAiBxF,KAAKwF,gBAAgB/B,KAAKzD,MAC3CyK,aAAczK,KAAKF,MAAMqJ,eACzBtK,QAASmB,KAAKH,MAAMhB,QAAQ4E,KAAKzD,MACjCP,uBAAwBO,KAAKP,uBAAuBgE,KAAKzD,SAGjE,kBAAC,IAAD,CAAOE,GAAG,kBAEN,mBArKZ,SAA0B6J,GACtB,OAAoB,IAAjBA,EAAIC,UACH3D,QAAQC,IAAIyD,GAER,yBAAKxK,UAAU,eAAeY,MAAO,CAAC,OAAS,IAAI,UAAY,OAAO,WAAa,YAC/E,kBAAC,IAAD,CACIwJ,MAAM,QACNU,UAAU,EACVC,KAAM,kBAAC,IAAD,CAAcxL,QAAS,kBAAMiL,EAAIY,UAAU,eAAejB,IAAWa,IACvE,kBAAC,KAAD,MAAuB,kBAAC,KAAD,OAC3BC,MAAO,kBAAC,IAAD,CAAc1L,QAAS,kBAAMiL,EAAIY,UAAU,eAA3C,mCAENjH,GAAiBqG,EAAIa,YAAY,GAAGpK,QAEzC,kBAAC,IAAD,CAAKN,GAAI,gBAAgB6J,EAAIa,YAAY,GAAGjE,WACxC,yBAAKpH,UAAU,oBAAmB,yBAAKoB,IAAKoJ,EAAIa,YAAY,GAAGxE,IAAKD,IAAK4D,EAAIa,YAAY,GAAGpK,SAC5F,yBAAKjB,UAAU,gBAAgBmE,GAAiBqG,EAAIa,YAAY,GAAGpK,OAAnE,IAA2E,0BAAMjB,UAAU,YAAYwK,EAAIa,YAAY,GAAGjE,YAC1H,yBAAKpH,UAAU,gBAAgBmE,GAAiBqG,EAAIa,YAAY,GAAGhK,cACnE,yBAAKrB,UAAU,mBAAkB,0BAAMA,UAAU,gBAAgBwK,EAAIa,YAAY,GAAGhE,MAAnD,WAC5BmD,EAAItK,uBAAuBsK,EAAIa,YAAY,GAAGb,EAAIlL,aAQ/D,6BACA,kBAAC,IAAD,CACI8K,MAAM,QACNU,UAAU,EACVC,KAAM,kBAAC,IAAD,CAAcxL,QAAS,kBAAMiL,EAAIY,UAAU,eAAejB,IAAWa,IACvE,kBAAC,KAAD,MAAuB,kBAAC,KAAD,OAC3BC,MAAO,kBAAC,IAAD,CAAc1L,QAAS,kBAAMiL,EAAIY,UAAU,eAA3C,mCALX,wCAOI,yBAAKxK,MAAO,CAAC,UAAY,SAAS,QAAU,SAA5C,kIAkIJ,CACI6J,SAAUhK,KAAKF,MAAMsJ,YACrBuB,UAAW3K,KAAK+I,UAAUtF,KAAKzD,MAC/B4K,YAAa5K,KAAKF,MAAMmJ,aACxBpK,QAASmB,KAAKH,MAAMhB,QAAQ4E,KAAKzD,MACjCP,uBAAwBO,KAAKP,uBAAuBgE,KAAKzD,c,GA/QtDsC,IAAMC,WCkBlBsI,GA5BQ,SAACd,GAsBpB,OAjBAjH,qBAAU,WAQN,EAAAC,EAAAC,OAAA,gFAOD,IAGK,kBAAC,GAAD,CAAcnE,QAASkL,EAAIlL,QAAQ4E,U,GAAY/E,aAAcqL,EAAIrL,aAAc6K,cAAeQ,EAAIR,cAAeM,aAAcE,EAAIF,aAAapG,U,GAAY+F,YAAaO,EAAIP,e,2FC4F1KsB,G,YAjHX,WAAYjL,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTiL,SAAS,IAGb,EAAKC,YAAc,EAAKA,YAAYvH,KAAjB,gBANJ,E,+EAUf,IAAIjD,EAAQ,GAQZ,OALIA,EADiC,KAAlCR,KAAKH,MAAMoL,WAAWC,QACblL,KAAKH,MAAMoL,WAAWC,QAEtB,8BAAOlL,KAAKH,MAAMoL,WAAWE,OAA7B,IAAsCnL,KAAKH,MAAMoL,WAAWG,MAIpE,8BACK5K,K,qCAKEuC,GAAG,IAAD,OACT/C,KAAKH,MAAMwL,UAAU,CAAEC,OAAO,kBAAC,IAAD,QAE9BC,IAAM,yFACF,CACIC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BvM,KAAM,CACFwM,YAAY,CAACxL,GAAG6C,GAChB4I,SAAS3L,KAAKH,MAAM+L,SAAS1L,IAEjC2L,aAAa,SAEhBlK,MAAK,YAAe,IAAZzC,EAAW,EAAXA,KACF,UAAWA,EACVmH,QAAQC,IAAIpH,EAAK+B,MAAM,IAAI/B,EAAK4M,YAEF,IAA3B5M,EAAK6M,OAAOC,YACX,EAAKnM,MAAMoM,kBAAkB,OAC7B5F,QAAQC,IAAI,8FAAmBpH,GAC/B,EAAKW,MAAMqM,sBAAqB,GAChC,EAAKrM,MAAMwL,UAAU,CAAEC,OAAO,QAE9BjF,QAAQC,IAAI,wCAAUpH,MAIjC+C,OAAM,SAACC,GACJmE,QAAQC,IAAI,oHAAoCpE,Q,oCAK5DlC,KAAKH,MAAMwL,UAAU,CAAEC,OAAQ,S,kCAItBvI,GAAI,IAAD,OACZ/C,KAAKH,MAAMwL,UAAU,CAAEC,OACf,kBAAC,IAAD,CACIa,QAAS,CAAC,CACN3L,MAAO,uCACP4L,WAAW,EACXjM,MAAO,UACR,CACCK,MAAO,6CACP4L,WAAW,EACXC,OAAQ,kBAAM,EAAKC,eAAevJ,MAEtCwJ,QAASvM,KAAKgL,aAEd,qHACA,8N,qCAMD3G,GAAG,IAAD,OACb,OAAO,6BACC,0BAAMlE,MAAO,CAACqM,MAAM,MAAMC,MAAM,SAAhC,WACKzM,KAAKH,MAAMoL,WAAWpK,KAD3B,mBACuCb,KAAKH,MAAMoL,WAAWE,OAD7D,aAC0EnL,KAAKH,MAAMoL,WAAWG,KADhG,gDACgHpL,KAAKH,MAAMoL,WAAWyB,OADtI,8BACqJ1M,KAAKH,MAAMoL,WAAW0B,KAD3K,mBACuL3M,KAAKH,MAAMoL,WAAW2B,UAE7M,0BAAMzM,MAAO,CAACqM,MAAM,MAAMC,MAAM,UAAU,kBAAC,KAAD,CAAmB3N,QAAS,WAAKuH,QAAQC,IAAI,qGAAqBjC,GAAI,EAAKxE,MAAMgN,eAAe,EAAKhN,MAAMoL,WAAW/K,KAAMC,MAAO,CAACsM,MAAM,OAAOK,YAAY,UAAvM,IAAkN,kBAAC,KAAD,CAA2B3M,MAAO,CAACsM,MAAM,QAAS3N,QAAS,WAAKuH,QAAQC,IAAI,8EAAmB,EAAKyG,YAAY,EAAKlN,MAAMoL,WAAW/K,W,sCAKpVkD,EAAEiB,GAAG,IAAD,OAChB,OAAGjB,IAAMiB,EAED,kBAAC,IAAD,CAAO2I,KAAK,kBAAkBC,MAAOjN,KAAKH,MAAMoL,WAAW/K,GAAIU,YAAaZ,KAAKkN,eAAe7I,GAAI8I,gBAAc,EAACrO,QAAS,WAAO,EAAKe,MAAMoM,kBAAkB5H,GAAG,EAAKxE,MAAMuN,qBAAqB/I,EAAE,qDAAa,EAAKxE,MAAMwN,uBAAuB,EAAKxN,MAAMyN,oBAAoBjJ,KAAOrE,KAAKuN,mBAI/R,kBAAC,IAAD,CAAOP,KAAK,kBAAkBC,MAAOjN,KAAKH,MAAMoL,WAAW/K,GAAIU,YAAaZ,KAAKkN,eAAe7I,GAAIvF,QAAS,WAAO,EAAKe,MAAMoM,kBAAkB5H,GAAG,EAAKxE,MAAMuN,qBAAqB/I,EAAG,qDAAa,EAAKxE,MAAMwN,uBAAuB,EAAKxN,MAAMyN,oBAAoBjJ,KAAOrE,KAAKuN,qB,+BAOzR,OACIvN,KAAKwN,gBAAgBxN,KAAKH,MAAM4N,eAAezN,KAAKH,MAAM6N,mB,GA7G1CpL,IAAMC,WCmFnBoL,G,YAlFX,WAAY9N,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTiL,SAAS,IAGb,EAAKC,YAAc,EAAKA,YAAYvH,KAAjB,gBANJ,E,+EAUf,IAAIjD,EAAQ,GAQZ,OALIA,EADiC,KAAlCR,KAAKH,MAAMoL,WAAWC,QACblL,KAAKH,MAAMoL,WAAWC,QAEtB,8BAAOlL,KAAKH,MAAMoL,WAAWE,OAA7B,IAAsCnL,KAAKH,MAAMoL,WAAWG,MAIpE,8BACK5K,K,qCAKEuC,GAAG,IAAD,OACb/C,KAAKH,MAAMwL,UAAU,CAAEC,OAAO,kBAAC,IAAD,QAE9BC,IAAM,yFACF,CACIC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BvM,KAAM,CACFwM,YAAY,CAACxL,GAAG6C,GAChB4I,SAAS3L,KAAKH,MAAM+L,SAAS1L,IAEjC2L,aAAa,SAEhBlK,MAAK,YAAe,IAAZzC,EAAW,EAAXA,KACF,UAAWA,EACVmH,QAAQC,IAAIpH,EAAK+B,MAAM,IAAI/B,EAAK4M,YAEF,IAA3B5M,EAAK6M,OAAOC,YACX,EAAKnM,MAAMoM,kBAAkB,OAC7B5F,QAAQC,IAAI,8FAAmBpH,GAC/B,EAAKW,MAAMqM,sBAAqB,GAChC,EAAKrM,MAAMwL,UAAU,CAAEC,OAAO,QAE9BjF,QAAQC,IAAI,wCAAUpH,MAIjC+C,OAAM,SAACC,GACJmE,QAAQC,IAAI,oHAAoCpE,Q,oCAKxDlC,KAAKH,MAAMwL,UAAU,CAAEC,OAAQ,S,sCAInBlI,EAAEiB,GACd,OAEQ,kBAAC,IAAD,CAAOuJ,UAAQ,EAACZ,KAAK,kBAAkBC,MAAOjN,KAAKH,MAAMoL,WAAW/K,GAAIU,YAAa,2VAA0EZ,KAAKuN,qB,+BAW5K,OACIvN,KAAKwN,gBAAgBxN,KAAKH,MAAM4N,eAAezN,KAAKH,MAAM6N,mB,GA9EvCpL,IAAMC,W,UC6NtBsL,G,YA9NX,WAAYhO,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACLe,KAAM,GACNsK,OAAQ,GACRC,KAAM,GACN0C,SAAU,GACVC,MAAO,GACPC,KAAM,GACN9C,QAAQ,IAGhB,EAAK+C,aAAe,CAChB,CAAEC,MAAO,iCAASlB,KAAM,OAAQmB,YAAY,MAAOC,SAAS,EAAGC,OAAO,IACtE,CAAEH,MAAO,kFAAkBlB,KAAM,SAAUmB,YAAY,MAAOC,SAAS,EAAGC,OAAO,IACjF,CAAEH,MAAO,kCAAUlB,KAAM,OAAQmB,YAAY,MAAOC,SAAS,EAAGC,OAAO,IACvE,CAAEH,MAAO,yFAAoBlB,KAAM,OAAQmB,YAAY,GAAIC,SAAS,EAAGC,OAAO,IAC9E,CAAEH,MAAO,0DAAclB,KAAM,WAAYmB,YAAY,GAAIC,SAAS,EAAGC,OAAO,IAC5E,CAAEH,MAAO,2BAAQlB,KAAM,QAASmB,YAAY,GAAIC,SAAS,EAAGC,OAAO,IACnE,CAAEH,MAAO,+DAAclB,KAAM,UAAWmB,YAAY,GAAIC,SAAS,EAAGC,OAAO,gIAG/E,EAAK9M,SAAW,EAAKA,SAASkC,KAAd,gBAChB,EAAKsJ,YAAc,EAAKA,YAAYtJ,KAAjB,gBAEnB,EAAKuH,YAAc,EAAKA,YAAYvH,KAAjB,gBAEhB,EAAK5D,MAAMyO,cACV,EAAKxO,MAAQ,CACLI,GAAG,EAAKL,MAAMyO,YAAYpO,GAC1BW,KAAM,EAAKhB,MAAMyO,YAAYzN,KAC7BsK,OAAQ,EAAKtL,MAAMyO,YAAYnD,OAC/BC,KAAM,EAAKvL,MAAMyO,YAAYlD,KAC7B0C,SAAU,EAAKjO,MAAMyO,YAAY5B,OACjCqB,MAAO,EAAKlO,MAAMyO,YAAY3B,KAC9BqB,KAAM,EAAKnO,MAAMyO,YAAY1B,SAC7B1B,QAAS,EAAKrL,MAAMyO,YAAYpD,UApC7B,E,sEAyCV9H,GAAI,IAAD,EACgBA,EAAEC,cAAlB2J,EADA,EACAA,KAAMC,EADN,EACMA,MACdjN,KAAK6B,SAAL,gBAAgBmL,EAAOC,M,oCAMvBjN,KAAKH,MAAMwL,UAAU,CAAEC,OACf,kBAAC,IAAD,CACIa,QAAS,CAAC,CACN3L,MAAO,yDACP4L,WAAW,EACXjM,MAAO,WAEXoM,QAASvM,KAAKgL,aAEd,oLACA,iX,uCAOC,IAAD,OACW,KAApBhL,KAAKF,MAAMe,MAAqC,KAAtBb,KAAKF,MAAMqL,QAAqC,KAApBnL,KAAKF,MAAMsL,KAChEpL,KAAK+M,eAGL/M,KAAKH,MAAMwL,UAAU,CAAEC,OAAO,kBAAC,IAAD,QAG9BC,IAAM,qFACF,CACIC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BvM,KAAM,CACFwM,YAAY1L,KAAKF,MACjB6L,SAAS3L,KAAKH,MAAM+L,SAAS1L,IAEjC2L,aAAa,SAEhBlK,MAAK,YAAe,IAAZzC,EAAW,EAAXA,KACF,UAAWA,EACVmH,QAAQC,IAAIpH,EAAK+B,MAAM,IAAI/B,EAAK4M,YAEF,IAA3B5M,EAAK6M,OAAOC,YACX3F,QAAQC,IAAI,8FAAmBpH,GAC3B,EAAKW,MAAMqM,uBACf,EAAKrM,MAAMwL,UAAU,CAAEC,OAAO,OAC9B,EAAKzL,MAAMoM,kBAAkB,IAE7B5F,QAAQC,IAAI,wCAAUpH,MAIjC+C,OAAM,SAACC,GACJmE,QAAQC,IAAI,oHAAoCpE,S,wCAK9C,IAAD,OACU,KAApBlC,KAAKF,MAAMe,MAAqC,KAAtBb,KAAKF,MAAMqL,QAAqC,KAApBnL,KAAKF,MAAMsL,KAChEpL,KAAK+M,eAGL/M,KAAKH,MAAMwL,UAAU,CAAEC,OAAO,kBAAC,IAAD,QAG9BC,IAAM,sFACF,CACIC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BvM,KAAM,CACFwM,YAAY1L,KAAKF,MACjB6L,SAAS3L,KAAKH,MAAM+L,SAAS1L,IAEjC2L,aAAa,SAEhBlK,MAAK,YAAe,IAAZzC,EAAW,EAAXA,KACF,UAAWA,EACVmH,QAAQC,IAAIpH,EAAK+B,MAAM,IAAI/B,EAAK4M,YAEF,IAA3B5M,EAAK6M,OAAOC,YACX3F,QAAQC,IAAI,8FAAmBpH,GAC3B,EAAKW,MAAMqM,uBACf,EAAKrM,MAAMwL,UAAU,CAAEC,OAAO,QAG9BjF,QAAQC,IAAI,wCAAUpH,MAIjC+C,OAAM,SAACC,GACJmE,QAAQC,IAAI,oHAAoCpE,S,oCAO5DlC,KAAKH,MAAMwL,UAAU,CAAEC,OAAQ,S,sCAGnB,IAAD,OACX,OACI,kBAAC,IAAD,KACKtL,KAAKiO,aAAahP,KAAI,gBAAGiP,EAAH,EAAGA,MAAOlB,EAAV,EAAUA,KAAMmB,EAAhB,EAAgBA,YAAaC,EAA7B,EAA6BA,SAAUC,EAAvC,EAAuCA,OAAvC,OACnB,kBAAC,IAAD,CACIE,KAAK,OACLvB,KAAMA,EACN7N,IAAK,SAAS6N,EACdwB,IAAKN,EACL3M,SAAU,EAAKA,SACfkN,OACIN,EACI,EAAKrO,MAAMkN,IACP,EAAKlN,MAAMkN,GAAM7H,QAASiJ,EAAY,QACpC,QACJ,GAEVM,OACIP,EACI,EAAKrO,MAAMkN,GACP,EAAKlN,MAAMkN,GAAM7H,QAASiJ,EAAY,GAAK,+KAAmC,EAAKtO,MAAMkN,GAAM7H,OAC7F,yIACJ,GAEVwJ,YAAaN,OAGrB,kBAAC,IAAD,CAAQO,KAAK,IAAIzO,MAAO,CAACiK,WAAW,WAAYtL,QAAS,WAAK,EAAK+P,iBAAqB,EAAKhP,MAAMiP,YAAY,EAAKjP,MAAMiP,eAA1H,wG,oCAME,IAAD,OACT,OACI,kBAAC,IAAD,KACK9O,KAAKiO,aAAahP,KAAI,gBAAGiP,EAAH,EAAGA,MAAOlB,EAAV,EAAUA,KAAMmB,EAAhB,EAAgBA,YAAaC,EAA7B,EAA6BA,SAAUC,EAAvC,EAAuCA,OAAvC,OACnB,kBAAC,IAAD,CACIE,KAAK,OACLvB,KAAMA,EACN7N,IAAK,SAAS6N,EACdwB,IAAKN,EACL3M,SAAU,EAAKA,SACfkN,OACIN,EACI,EAAKrO,MAAMkN,IACP,EAAKlN,MAAMkN,GAAM7H,OAAQiJ,EAAY,QACnC,QACJ,GAEVnB,MAAO,EAAKnN,MAAMkN,GAClB0B,OACIP,EACI,EAAKrO,MAAMkN,GACP,EAAKlN,MAAMkN,GAAM7H,OAAQiJ,EAAY,GAAK,8KACxC,yIACJ,GAEVO,YAAaN,OAGrB,kBAAC,IAAD,CAAQO,KAAK,IAAIzO,MAAO,CAACiK,WAAW,WAAYtL,QAAS,WAAK,EAAKiQ,kBAAsB,EAAKlP,MAAMiP,YAAY,EAAKjP,MAAMiP,eAA3H,kJ,+BAMR,OACI,kBAAC,IAAD,KACK9O,KAAKH,MAAMyO,YAActO,KAAKgP,cAAgBhP,KAAKiP,qB,GAzNvC3M,IAAMC,WCiNpB2M,G,YA3MX,WAAYrP,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTqP,YAAY,GACZC,eAAe,GACfC,WAAU,EACVC,YAAY,IAND,E,iFAWftP,KAAKkM,uBACLlM,KAAKH,MAAM0P,UAAU,CAACC,mBAAoB,kBAAC,GAAD,CAAgBnE,UAAWrL,KAAKH,MAAMwL,UAAU5H,KAAKzD,MAAO4L,SAAU5L,KAAKH,MAAM+L,SAAUM,qBAAsBlM,KAAKkM,qBAAqBzI,KAAKzD,MAAOiM,kBAAmBjM,KAAKH,MAAMoM,kBAAkBxI,KAAKzD,MAAO8O,WAAY9O,KAAKH,MAAMiP,WAAWrL,KAAKzD,Y,qCAGzRoD,GACXiD,QAAQC,IAAItG,KAAKF,MAAMqP,aACvBnP,KAAKH,MAAM0P,UAAU,CAACE,oBAAqB,kBAAC,GAAD,CAAgBnB,YAAatO,KAAKF,MAAMqP,YAAY/L,GAAIiI,UAAWrL,KAAKH,MAAMwL,UAAU5H,KAAKzD,MAAO4L,SAAU5L,KAAKH,MAAM+L,SAAUM,qBAAsBlM,KAAKkM,qBAAqBzI,KAAKzD,MAAOiM,kBAAmBjM,KAAKH,MAAMoM,kBAAkBxI,KAAKzD,MAAO8O,WAAY9O,KAAKH,MAAMiP,WAAWrL,KAAKzD,UAC7UA,KAAKH,MAAM6P,WAAW,uB,6CAIc,IAAD,OAAlBC,EAAkB,wDACnCpE,IAAM,qFACF,CACIC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BvM,KAAM,CACF0Q,UAAW5P,KAAKH,MAAM+L,SAAS1L,IAEnC2L,aAAa,SAEhBlK,MAAK,YAAe,IAAZzC,EAAW,EAAXA,KACF,UAAWA,GACVmH,QAAQC,IAAIpH,EAAK+B,MAAM,IAAI/B,EAAK4M,WACd,sBAAf5M,EAAK+B,QACJoF,QAAQC,IAAI,yUACZ,EAAKuJ,uBAKTxJ,QAAQC,IAAIpH,GACZ,EAAK2C,SAAS,CAACsN,YAAYjQ,EAAKiQ,cAChC,EAAKtP,MAAM0P,UAAU,CAACO,kBAAkB5Q,EAAKiQ,cAE7C,EAAKtN,SAAS,CAACuN,eAAelQ,EAAK6Q,wBACnC,EAAKlQ,MAAM0P,UAAU,CAACS,qBAAqB9Q,EAAK6Q,yBAE/B,IAAdJ,EACC,EAAKM,gBAAgB,EAAKnQ,MAAMqP,aAAY,GAE5C,EAAKc,gBAAgB,EAAKnQ,MAAMqP,iBAI3ClN,OAAM,SAACC,GACJmE,QAAQC,IAAI,iGAAgCpE,Q,0CAKpCkB,GAAU,IAARmL,EAAO,uDAAF,EACnB,GAAa,IAATA,EAAY,CACZ,IAAI2B,EAAerK,OAAOC,KAAK9F,KAAKF,MAAMqP,aAC1C,GAAGe,EAAa/K,OAAS,EAAG,CAKxB,IAAIgL,EAAiBnQ,KAAKF,MAAMqP,YAAYe,EAAa9M,IACzDpD,KAAKH,MAAM0P,UAAU,CACjBa,qBAAsB,WAAQD,EAAetP,KAAO,mBAAWsP,EAAehF,OAAS,aAAUgF,EAAe/E,W,0CAOhIpL,KAAKH,MAAMoM,kBAAkB,MAC7BjM,KAAKF,MAAMwP,YAAc,kBAAC,GAAD,CAAgBjE,UAAWrL,KAAKH,MAAMwL,UAAU5H,KAAKzD,MAAO4L,SAAU5L,KAAKH,MAAM+L,SAAUM,qBAAsBlM,KAAKkM,qBAAqBzI,KAAKzD,MAAOiM,kBAAmBjM,KAAKH,MAAMoM,kBAAkBxI,KAAKzD,QACrOA,KAAK6B,SAAS,CAACwN,WAAU,IACzBrP,KAAKH,MAAMwQ,qBAAqB,CAACC,mBAAkB,M,2CAIlCjM,GAAmB,IAAjBkM,EAAgB,uDAAX,yCACpBL,EAAerK,OAAOC,KAAK9F,KAAKF,MAAMqP,aAK1C,GAAGe,EAAa/K,QAAU,EACtBkB,QAAQC,IAAI,gSACZtG,KAAKH,MAAMoM,kBAAkB,UAE3B,CACF,KAAIiE,EAAa7L,KAAMrE,KAAKF,MAAMqP,aAM9B,OAHA9I,QAAQC,IAAI,wLACZtG,KAAKH,MAAMoM,kBAAkB,GAC7B5F,QAAQC,IAAI,uSACLtG,KAAKiQ,gBAAgBjQ,KAAKF,MAAMqP,aAAa,GALpD9I,QAAQC,IAAI,yJASpB,GAAG4J,EAAa/K,QAAU,EACtBkB,QAAQC,IAAI,4IACZD,QAAQC,IAAI,yNAA2CiK,OACrD,CACF,IAAIJ,EAAiBnQ,KAAKF,MAAMqP,YAAYe,EAAa7L,IAAImM,aAC7DxQ,KAAKH,MAAM0P,UAAU,CACjBkB,cAAeN,EAAeO,cAC9BC,YAAaR,EAAeS,cAC5BC,mBAAoBV,EAAeW,wBAEvCzK,QAAQC,IAAI,yNAA2CiK,M,sCAK/CpB,GAAgC,IAAD,OAAnBQ,EAAmB,wDACV,OAA9B3P,KAAKH,MAAM4N,eAA0B5H,OAAOC,KAAKqJ,GAAahK,OAAS,IACtEkB,QAAQC,IAAI,mPAAgD,mFAAkBT,OAAOC,KAAKqJ,GAAahK,QACvGnF,KAAKH,MAAMoM,kBAAkB,GAC7BjM,KAAK+Q,qBAAqB,GAC1B/Q,KAAKH,MAAMwN,uBACXrN,KAAKsN,oBAAoBtN,KAAKH,MAAM4N,iBAGP,OAA9BzN,KAAKH,MAAM4N,eAA0B5H,OAAOC,KAAKqJ,GAAahK,QAAU,IACvEkB,QAAQC,IAAI,4XAA2E,mFAAkBT,OAAOC,KAAKqJ,GAAahK,QAClInF,KAAKH,MAAMoM,kBAAkB,MAC7BjM,KAAK+Q,qBAAqB,KAGb,IAAdpB,GACCtJ,QAAQC,IAAI,oPACZtG,KAAKH,MAAMoM,kBAAkB,GAC7BjM,KAAKiQ,gBAAgBd,GAAY,GACjCnP,KAAK+Q,qBAAqB,GAC1B/Q,KAAKH,MAAMwN,uBACXrN,KAAKsN,oBAAoBtN,KAAKH,MAAM4N,kBAEpCzN,KAAKF,MAAMwP,YAAczJ,OAAOC,KAAKqJ,GAAalQ,KAAI,SAACqQ,EAAanH,GAAd,OAClD,kBAAC,GAAD,CACImF,oBAAqB,EAAKA,oBAAoB7J,KAAK,GACnD4J,qBAAsB,EAAKxN,MAAMwN,qBAAqB5J,KAAK,GAC3D2J,qBAAsB,EAAK2D,qBAAqBtN,KAAK,GACrDyI,qBAAsB,EAAKA,qBAAqBzI,KAAK,GACrD4H,UAAW,EAAKxL,MAAMwL,UAAU5H,KAAK,GACrCmI,SAAU,EAAK/L,MAAM+L,SACrBiB,eAAgB,EAAKA,eAAepJ,KAAK,GACzCtE,IAAK,WAAWgJ,EAChB8C,WAAYkE,EAAYG,GACxB5B,cAAevF,EACfsF,eAAgB,EAAK5N,MAAM4N,eAC3BxB,kBAAmB,EAAKpM,MAAMoM,kBAAkBxI,KAAK,QAI7DzD,KAAKF,MAAMkR,eAAiBnL,OAAOC,KAAK9F,KAAKF,MAAMsP,gBAAgBnQ,KAAI,SAACgS,EAAcC,GAAf,OACnE,kBAAC,GAAD,CACI5D,oBAAqB,EAAKA,oBAAoB7J,KAAK,GACnD4J,qBAAsB,EAAKxN,MAAMwN,qBAAqB5J,KAAK,GAC3D2J,qBAAsB,EAAK2D,qBAAqBtN,KAAK,GACrDyI,qBAAsB,EAAKA,qBAAqBzI,KAAK,GACrD4H,UAAW,EAAKxL,MAAMwL,UAAU5H,KAAK,GACrCmI,SAAU,EAAK/L,MAAM+L,SACrBiB,eAAgB,EAAKA,eAAepJ,KAAK,GACzCtE,IAAK,WAAW+R,EAChBjG,WAAY,EAAKnL,MAAMsP,eAAe6B,GACtCvD,cAAewD,EACfzD,eAAgB,EAAK5N,MAAM4N,eAC3BxB,kBAAmB,EAAKpM,MAAMoM,kBAAkBxI,KAAK,QAG7DzD,KAAK6B,SAAS,CAACwN,WAAU,IACzBrP,KAAKH,MAAMwQ,qBAAqB,CAACC,mBAAkB,IACnDtQ,KAAK+Q,qBAAqB/Q,KAAKH,MAAM4N,eAAgB,gBAAMzN,KAAKH,MAAM4N,gBACtEzN,KAAKH,MAAMwN,uBACXrN,KAAKsN,oBAAoBtN,KAAKH,MAAM4N,mB,6CAMxC,OACI,6BACKzN,KAAKF,MAAMwP,YACXtP,KAAKF,MAAMkR,kB,+BAOpB,OAAiC,IAAzBhR,KAAKF,MAAMuP,UAAsB,6KAA+B,kBAAC,IAAD,OAAyBrP,KAAKmR,2B,GAvMhF7O,IAAMC,WC2DrB6O,G,YAjEX,WAAYvR,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTiL,SAAS,IAHE,E,+EAQf,OACI,8BACI/K,KAAKH,MAAMoL,WAAWzK,S,uCAM9B,OACI,0BAAML,MAAO,CAAC,MAAQ,WAAYkR,wBAAyB,CAACC,OAAQtR,KAAKH,MAAMoL,WAAWsG,oB,sCAMlFnO,EAAEiB,GAAG,IAAD,OAChB,OAAGjB,IAAMiB,EAED,kBAAC,IAAD,CACI2I,KAAK,mBACLC,MAAOjN,KAAKH,MAAMoL,WAAW/K,GAC7BU,YAAaZ,KAAKkN,iBAClBC,gBAAc,EAACrO,QAAS,WACpB,EAAKe,MAAM2R,oBAAoBnN,GAClC,EAAKxE,MAAMyN,oBAAoBjJ,KAIhCrE,KAAKuN,mBAMT,kBAAC,IAAD,CACIP,KAAK,mBACLC,MAAOjN,KAAKH,MAAMoL,WAAW/K,GAC7BU,YAAaZ,KAAKkN,iBAClBpO,QAAS,WACL,EAAKe,MAAM2R,oBAAoBnN,KAGnCrE,KAAKuN,qB,+BASjB,OACIvN,KAAKwN,gBAAgBxN,KAAKH,MAAM4R,iBAAiBzR,KAAKH,MAAM6N,mB,GA7DnCpL,IAAMC,WCmG5BmP,G,YA/FX,WAAY7R,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT6R,cAAc,GACdC,oBAAmB,EACnBC,cAAc,IALH,E,iFASE,IAAD,OAChBtG,IAAM,mFACF,CACIC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BvM,KAAM,CACF4S,QAAS,EACTlC,UAAU5P,KAAKH,MAAM+L,SAAS1L,IAElC2L,aAAa,SAEhBlK,MAAK,YAAe,IAAZzC,EAAW,EAAXA,KACF,UAAWA,EACVmH,QAAQC,IAAIpH,EAAK+B,MAAM,IAAI/B,EAAK4M,UAAU,2DAE1CzF,QAAQC,IAAIpH,EAAK,0DACd2G,OAAOC,KAAK5G,EAAK6S,kBAAkB5M,OAAO,GAEzCU,OAAOC,KAAK5G,EAAK6S,kBAAkB9S,KAAI,SAAC2C,EAAMkE,GAEnC,EAAKjG,MAAM4R,mBAAqB3L,GAE/B,EAAKjG,MAAM2R,oBAAoB,MAM3C,EAAK3P,SAAS,CAAC8P,cAAczS,EAAK8S,OAClC,EAAKC,oBAAoB,EAAKnS,MAAM6R,eACpC,EAAK9R,MAAM0P,UAAU,CAAC2C,oBAAoBhT,EAAK8S,SAE/C,EAAKnQ,SAAS,CAAC8P,cAAczS,EAAK8S,OAClC,EAAKC,oBAAoB,EAAKnS,MAAM6R,eACpC,EAAK9R,MAAM0P,UAAU,CAAC2C,oBAAoBhT,EAAK8S,YAK1D/P,OAAM,SAACC,GACJmE,QAAQC,IAAI,iGAAgCpE,Q,0CAIpCkB,GAAU,IAARmL,EAAO,uDAAF,EACvB,GAAU,IAAPA,EAAS,CACR,IAAI2B,EAAerK,OAAOC,KAAK9F,KAAKF,MAAM6R,eAKtCxB,EAAiBnQ,KAAKF,MAAM6R,cAAczB,EAAa9M,IAC3DpD,KAAKH,MAAM0P,UAAU,CACjBa,qBAAsBD,EAAe3P,W,0CAM7B2O,GAAc,IAAD,OAC7BnP,KAAKH,MAAMsS,oCACXnS,KAAKsN,oBAAoBtN,KAAKH,MAAM4R,kBACpCzR,KAAKF,MAAM+R,cAAgBhM,OAAOC,KAAKqJ,GAAalQ,KAAI,SAAC4S,EAAe1J,GAAhB,OACpD,kBAAC,GAAD,CACIhJ,IAAK,aAAagJ,EAClB8C,WAAYkE,EAAY0C,GACxBnE,cAAevF,EACfsJ,iBAAkB,EAAK5R,MAAM4R,iBAC7BD,oBAAqB,EAAK3R,MAAM2R,oBAAoB/N,KAAK,GACzD6J,oBAAqB,EAAKA,oBAAoB7J,KAAK,QAG5DzD,KAAK6B,SAAS,CAAC+P,oBAAmB,M,+BAQjC,OACsC,IAAlC5R,KAAKF,MAAM8R,mBAA+B,6BAAK,2HAAL,IAA+B,kBAAC,IAAD,MAA/B,IAAgD,6BAAgB5R,KAAKF,MAAM+R,kB,GA3FrGvP,IAAMC,WCO5B6P,GAAiB,CACnBC,gBAAiB,WA4SNC,G,YAxSX,WAAazS,GACZ,IAAD,8BACI,4CAAMA,KACDC,MAAQ,CACTyS,SAAS,CAACC,MAAM,GAAGC,MAAM,IACzBC,cAAa,EACbC,WAAW,GACXC,UAAU,GACVC,wBAAuB,EACvBC,SAAS,EACTC,SAAU,KACVzC,mBAAkB,EAClB0C,oBAAmB,GAGvB,EAAKC,SAAW,EAAKA,SAASxP,KAAd,gBAdpB,E,iFAoBI,IAA8B5B,EAW9BwE,QAAQC,IAAI,gGACyB,IAApCtG,KAAKH,MAAMqT,eAAejS,QAZGY,EAY8B7B,KAAK6B,SAAS4B,KAAKzD,MAZ/E,EAAA+C,EAAAC,OAAA,gDACIvB,IAAQC,YAAY,yBAAyB,CAAC,KAAO,gDAChDC,MAAK,SAACzC,GACHmH,QAAQC,IAAIpH,EAAK,iHACjB2C,EAAS,CAAE0Q,SAAS,CAACC,MAAOtT,EAAKiU,mBAEpClR,OAAM,SAACC,GACJmE,QAAQC,IAAI,kBAAkBpE,MAP1C,wC,iCAgBiB,IAAD,OAAVkB,EAAU,uDAAN,KACNpD,KAAKF,MAAMiT,UACf/S,KAAK6B,SAAS,CAAEkR,SACR,kBAAC,IAAD,CACIK,OAAO,WACP7G,QAAS,kBAAM,EAAK1K,SAAS,CAAEkR,SAAU,QACzCtS,OAAQ,kBAAC,IAAD,CAAQmO,KAAM,GAAIzO,MAAOiS,IAAgB,kBAAC,KAAD,CAAaiB,KAAK,UAAU7G,MAAO,GAAI8G,OAAQ,OAE3F,OAAJlQ,GAAY,4SACR,OAAJA,GAAYA,O,6CAMN,IAAD,OAClBiD,QAAQC,IAAI,+KACZiF,IAAM,wFACF,CACIC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BvM,KAAM,CACFqU,kBAAmBvT,KAAKF,MAAMyS,SAASC,OAE3C3G,aAAa,SAEhBlK,MAAK,YAAe,IAAZzC,EAAW,EAAXA,KACF,UAAWA,EACVmH,QAAQC,IAAIpH,EAAK+B,MAAM,IAAI/B,EAAK4M,WAEb,WAAhB5M,EAAKuP,QACJpI,QAAQC,IAAI,mOACZ,EAAKzE,SAAS,CAAC6Q,cAAa,MAE5BrM,QAAQC,IAAI,wCAAUpH,GACtB,EAAK+T,SAAS,yKAIzBhR,OAAM,YAAY,IAAVC,EAAS,EAATA,IACLmE,QAAQC,IAAI,yEAA4BpE,Q,8CAI5B,IAAD,OACnBmE,QAAQC,IAAI,qLAAoCtG,KAAKH,MAAM+L,SAAS1L,IACpEqL,IAAM,uFACF,CACIC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BvM,KAAM,CACFqU,kBAAmBvT,KAAKF,MAAMyS,SAASC,MACvCgB,iBAAkBxT,KAAKF,MAAM8S,UAC7BjH,SAAS3L,KAAKH,MAAM+L,SAAS1L,IAEjC2L,aAAa,SAEhBlK,MAAK,YAAe,IAAZzC,EAAW,EAAXA,KACF,UAAWA,EACVmH,QAAQC,IAAIpH,EAAK+B,MAAM,IAAI/B,EAAK4M,WAEb,cAAhB5M,EAAKuP,QACJpI,QAAQC,IAAI,0XACZ,EAAKzG,MAAM4T,kBAAkB,EAAK5T,MAAM+L,SAAS1L,MAGjDmG,QAAQC,IAAI,wCAAUpH,GACtB,EAAK+T,eAIhBhR,OAAM,SAACC,GACJmE,QAAQC,IAAI,yEAA4BpE,Q,yCAIjCwR,GACf1T,KAAK6B,SAAS,CAAC0Q,SAAS,CAACC,MAAOkB,EAAMC,OAAO1G,SAC7C5G,QAAQC,IAAItG,KAAKF,MAAMyS,SAASC,S,wCAGlBkB,GACd1T,KAAK6B,SAAS,CAAC+Q,UAAWc,EAAMC,OAAO1G,U,sCAG3B7J,GACZpD,KAAKH,MAAM+T,WAAWxQ,EAAEuQ,OAAO1G,S,yCAGhB4G,GACf,IAAIC,EAAe9T,KAAKH,MAAMkU,YAC9B,OAAOF,GACH,IAAK,IAAKC,GAAgB,EAAG,MAC7B,IAAK,IAAKA,GAAgB,EAAG,MAC7B,QAASzN,QAAQC,IAAI,6EAGtBwN,GAAc,IAAIA,EAAe,GAChB,KAAjBA,IAAsBA,EAAe,GACrCA,EAAc,IAAIA,EAAe,GAEpC9T,KAAKH,MAAM0P,UAAU,CAACwE,YAAaD,M,4CAInC,OACI,kBAAC,IAAD,CAAOtT,MAAM,oFACT,kBAAC,IAAD,CAAKL,MAAO,CAAC6T,QAAS,OAAOC,eAAe,WACxC,kBAAC,IAAD,CAAQrF,KAAK,IAAIsF,WAAS,EAAC/T,MAAO,CAAC2M,YAAa,GAAG1M,SAAS,GAAGgK,WAAW,WAAYtL,QAASkB,KAAKmU,mBAAmB1Q,KAAKzD,KAAK,MAAjI,KACA,kBAAC,IAAD,CAAOuO,KAAK,SAASpO,MAAO,CAACC,SAAS,GAAGgU,UAAU,UAAWnH,MAAOjN,KAAKH,MAAMkU,YAAaM,SAAS,aACtG,kBAAC,IAAD,CAAQzF,KAAK,IAAIsF,WAAS,EAAC/T,MAAO,CAACmU,WAAY,GAAGlU,SAAS,GAAGgK,WAAW,WAAYtL,QAASkB,KAAKmU,mBAAmB1Q,KAAKzD,KAAK,MAAhI,S,4CAMM,IAAD,OACjB,OAAO,kBAAC,IAAD,KACH,kBAAC,IAAD,MACiC,IAA5BA,KAAKF,MAAM4S,cAAyB,kBAAC,IAAD,CAAiBlE,IAAI,oKAEtD,kBAAC,IAAD,CAAOD,KAAK,SAASI,YAAY,OAAOpN,SAAUvB,KAAKuU,kBAAkB9Q,KAAKzD,QAG9E,kBAAC,IAAD,CAAQ+N,MAAM,WAAW5N,MAAO,CAAC,WAAa,WAAYrB,QAAS,WAAMuH,QAAQC,IAAI,EAAKxG,MAAM8S,WAAY,EAAK4B,0BAAjH,sEALiC,IAK+H,kBAAC,IAAD,CAAQzG,MAAM,YAAY5N,MAAO,CAAC,MAAQ,SAAUrB,QAAS,WAAO,EAAK+C,SAAS,CAAC6Q,cAAa,MAAhG,iGAGvI,IAA5B1S,KAAKF,MAAM4S,cAA0B,kBAAC,IAAD,CAAiBlE,IAAI,sJACvD,kBAAC,IAAD,CAAOD,KAAK,SAASI,YAAY,cAAc8F,aAAczU,KAAKF,MAAMyS,SAASC,MAAOjR,SAAUvB,KAAK0U,mBAAmBjR,KAAKzD,QAC/H,kBAAC,IAAD,CAAQ+N,MAAM,WAAW5N,MAAO,CAAC,WAAa,WAAYrB,QAAS,WAAO,EAAK6V,uBAAwBtO,QAAQC,IAAI,EAAKxG,MAAMyS,SAASC,SAAvI,uEAFkC,IAEoI,kBAAC,IAAD,CAAQ1T,QAAS,WAAO,EAAK+C,SAAS,CAAC6Q,cAAa,KAAS3E,MAAM,YAAY5N,MAAO,CAAC,MAAQ,UAA/F,oEAG7KH,KAAKF,MAAMiT,Y,8CAII,IAAD,OACnB,OAAO,kBAAC,IAAD,CAAK5S,MAAO,CAAC6T,QAAS,OAAO,iBAAiB,MACjD,kBAAC,IAAD,CAAQpF,KAAK,IAAIsF,WAAS,EAAC/T,MAAO,CAAC2M,YAAa,GAAIiB,MAA0C,IAAnC/N,KAAKH,MAAM+U,oBAA4B,YAAc,WAAY9V,QAAS,WAAK,EAAKe,MAAMgV,gBAAgB,KAArK,oDACA,kBAAC,IAAD,CAAQjG,KAAO,IAAIsF,WAAS,EAACnG,MAA0C,IAAnC/N,KAAKH,MAAM+U,oBAA4B,YAAc,WAAa9V,QAAS,WAAK,EAAKe,MAAMgV,gBAAgB,KAA/I,6D,wCAOJ,OACI,6BACK7U,KAAK8U,wBAC8B,IAAnC9U,KAAKH,MAAM+U,oBACR5U,KAAK+U,iBAEL/U,KAAKgV,mBAERhV,KAAKiV,sBACLjV,KAAKkV,yB,2CAMd,OACI,kBAAC,IAAD,CACIC,KAAM,kBAAC,IAAD,MACN9I,QAAQ,GAGR,yLACA,gW,uCAMK,IAAD,OAEZ,OACI,kBAAC,IAAD,CACI9M,UAAU,wBACViB,MAAM,wFACHI,YAAaZ,KAAKF,MAAMwQ,kBACpB,kBAAC,IAAD,CACI1B,KAAK,IACLb,MAAM,YACN5N,MAAO,CAAEiK,WAAY,UAAUgL,MAAM,WAErCtW,QAAS,WACL,EAAKe,MAAMwV,UAAU,sBAN7B,mFAUA,IAEP,kBAAC,GAAD,CACIzJ,SAAU5L,KAAKH,MAAM+L,SACrB6B,eAAgBzN,KAAKH,MAAM4N,eAC3BxB,kBAAmBjM,KAAKH,MAAMoM,kBAAkBxI,KAAKzD,MACrDqL,UAAWrL,KAAKH,MAAMwL,UAAU5H,KAAKzD,MACrCqQ,qBAAsBrQ,KAAK6B,SAAS4B,KAAKzD,MACzCgT,mBAAoBhT,KAAKF,MAAMkT,mBAC/BzD,UAAWvP,KAAKH,MAAM0P,UAAU9L,KAAKzD,MACrCqN,qBAAsBrN,KAAKH,MAAMwN,qBAAqB5J,KAAKzD,MAE3D0P,WAAY1P,KAAKH,MAAMwV,UAAU5R,KAAKzD,MACtC8O,WAAY9O,KAAKH,MAAMiP,WAAWrL,KAAKzD,W,yCAOnD,OACI,kBAAC,IAAD,CAAOQ,MAAM,qGACb,kBAAC,GAAD,CACIoL,SAAU5L,KAAKH,MAAM+L,SACrB6F,iBAAkBzR,KAAKH,MAAM4R,iBAC7BD,oBAAqBxR,KAAKH,MAAM2R,oBAAoB/N,KAAKzD,MACzDmS,kCAAmCnS,KAAKH,MAAMsS,kCAAkC1O,KAAKzD,MACrFuP,UAAWvP,KAAKH,MAAM0P,UAAU9L,KAAKzD,W,4CAO7C,OACI,kBAAC,IAAD,CAAOQ,MAAM,kHACT,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAUyM,MAAOjN,KAAKH,MAAMyV,WAAY/T,SAAUvB,KAAKuV,gBAAgB9R,KAAKzD,MAAO2O,YAAY,8F,uCAM1F6G,GACb,OACIA,GAAQ,EAAIxV,KAAKyV,qBAAuBzV,KAAK0V,oB,+BAMjD,OACI,8BACyC,IAApC1V,KAAKH,MAAMqT,eAAejS,OACvBjB,KAAKkB,uBAG4B,IAApClB,KAAKH,MAAMqT,eAAejS,OACvBjB,KAAK2V,iBAAiB3V,KAAKH,MAAMiH,YAAY3B,a,GA/R1C7C,IAAMC,WC+BdqT,I,mBA3CX,WAAa/V,GACZ,IAAD,8BACI,4CAAMA,KACDC,MAAQ,GAFjB,E,6EAOgB,IAAD,OACXE,KAAKH,MAAM0P,UAAU,CAACsG,eAAe,8EACrCtK,IAAM,kFACF,CACIC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BvM,KAAM,CACFyM,SAAU3L,KAAKH,MAAM+L,SAAS1L,GAC9B4V,UAAU9V,KAAKH,MAAMkW,eAEzBlK,aAAa,SAEhBlK,MAAK,YAAe,IAAZzC,EAAW,EAAXA,KACF,UAAWA,EACVmH,QAAQC,IAAIpH,EAAK+B,MAAM,IAAI/B,EAAK4M,YAEhCzF,QAAQC,IAAI,6EAAiBpH,GACX,MAAfA,EAAKuP,SACJ,EAAK5O,MAAMmW,kBAAkB,CAACC,eAAc,IAC5C,EAAKpW,MAAMqW,yBAItBjU,OAAM,SAACC,GACJmE,QAAQC,IAAI,iGAAgCpE,Q,+BAI9C,IAAD,OACL,OACI,kBAAC,IAAD,CAAQ0M,KAAK,KAAK9P,QAAS,WAAK,EAAKqX,iBAAkB5W,UAAU,kBAAjE,6F,GAxCiB+C,IAAMC,Y,+DCkOpB6T,G,YA1NX,WAAavW,GACZ,IAAD,8BACI,4CAAMA,KACDC,MAAQ,CACTuW,WAAW,EAAKxW,MAAMwW,WACtBC,OAAO,EACPT,eAAe,MAGnB,EAAKhW,MAAM0W,2BARf,E,mFAWsBF,GAClBA,GAAwB,EACxBrW,KAAK6B,SAAS,CAACwU,eACfrW,KAAKH,MAAM0P,UAAU,CAAC8G,WAAWA,M,gCAKjC,IADA,IAAIG,EAAU,GACLC,EAAI,EAAGA,GAA8C,EAAzCzW,KAAKH,MAAMqT,eAAe/R,SAASC,MAASqV,GAAK,EAClED,EAAQE,KAAK,4BAAQzJ,MAAK,UAAKwJ,GAAKtX,IAAG,UAAKsX,IAAMA,IAEtD,OAAOD,I,2CAGU,IAAD,OACZG,EAAkD,EAAzC3W,KAAKH,MAAMqT,eAAe/R,SAASC,MAChD,OAAGuV,EAAQ,EAEH,6BACQ,kBAAC,IAAD,mKAAmC,2BAAIA,IAC3C,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,KAAM,EACNC,IAAK,EACLC,IAAKH,EACL1J,MAAO8J,OAAO/W,KAAKF,MAAMuW,YACzB9U,SAAU,SAAC8U,GAAD,OAAe,EAAKW,sBAAsBX,IACpD7H,IAAI,2FAER,kBAAC,IAAD,CAAQjN,SAAU,SAAA6B,GAAC,OAAI,EAAK4T,sBAAsB5T,EAAEuQ,OAAO1G,QAAQA,MAAOgK,OAAOjX,KAAKF,MAAMuW,aACvFrW,KAAKwW,WAGd,yBAAKrW,MAAO,CAAC6T,QAAS,OAAOC,eAAe,WACxC,kBAAC,IAAD,CAAQrF,KAAK,IAAIsF,WAAS,EAAC/T,MAAO,CAAC2M,YAAa,KAAhD,0FACA,kBAAC,IAAD,CAAQ8B,KAAK,IAAIsF,WAAS,EAAC/T,MAAO,CAACmU,WAAY,KAA/C,oEAKL,kBAAC,IAAD,CAAM/U,UAAU,kBAAkBkB,OAAQ,kBAAC,IAAD,OAA1C,4FAA8E,gCAA9E,2C,wCAKX,IAAIyW,EAAMlX,KAAKH,MAAMsX,QAAQnX,KAAKH,MAAMwW,WAKxC,OAJGrW,KAAKH,MAAMuX,iBAAiBC,oBAC3BH,GAAyD,EAA5ClX,KAAKH,MAAMuX,iBAAiB3G,eAE1CyG,EAAI,IAAGA,EAAM,GACRA,I,0CAKR,OAAGlX,KAAKH,MAAMuX,iBAAiBE,gBAEvB,kBAAC,IAAD,CACInC,KAAM,kBAAC,IAAD,MACN9I,QAAQ,GAGR,4KAA+BrM,KAAKH,MAAMuX,iBAAiBzG,YAA3D,yCACA,8aAKJ3Q,KAAKuX,0B,wCAMb,OAAGvX,KAAKH,MAAMuX,iBAAiBC,kBAEvB,kBAAC,IAAD,CAAM5W,OAAQ,kBAAC,KAAD,OAAd,6GAAmD,2BAAIT,KAAKH,MAAMuX,iBAAiB3G,cAAhC,YAGhD,K,yCAIIrN,GACf,GAAGyC,OAAOC,KAAK9F,KAAKH,MAAMuX,iBAAiBtH,mBAAmB3K,OAAO,EACjE,IAAI+K,EAAerK,OAAOC,KAAK9F,KAAKH,MAAMuX,iBAAiBtH,mBAKvDK,EAAiBnQ,KAAKH,MAAMuX,iBAAiBtH,kBAAkBI,EAAa9M,SAE5E+M,EAAiB,CAACjQ,GAAG,SAG7B,OAAOiQ,I,0CAIS/M,GAChB,GAAGyC,OAAOC,KAAK9F,KAAKH,MAAMuX,iBAAiBlF,qBAAqB/M,OAAO,EACnE,IAAI+K,EAAerK,OAAOC,KAAK9F,KAAKH,MAAMuX,iBAAiBlF,qBAKvD/B,EAAiBnQ,KAAKH,MAAMuX,iBAAiBlF,oBAAoBhC,EAAa9M,SAE9E+M,EAAiB,CAACjQ,GAAG,SAG7B,OAAOiQ,I,qCAKP,IAAIqH,EAAY,GAEZC,EAAsBzX,KAAK0X,mBAAmB1X,KAAKH,MAAMuX,iBAAiB3J,gBAC1EkK,EAAuB3X,KAAKiS,oBAAoBjS,KAAKH,MAAMuX,iBAAiB3F,kBAahF,OAXA+F,EAAU7L,SAAW3L,KAAKH,MAAM+L,SAAS1L,GACzCsX,EAAUI,aAAe5X,KAAKH,MAAMuX,iBAAiBxC,oBACrD4C,EAAUK,gBAAkB,CAAC,KAAOJ,EAAoB,UAAYA,EAAoBvX,IACxFsX,EAAUM,kBAAoB,CAAC,KAAOH,EAAqB,YAAcA,EAAqBzX,IAC9FsX,EAAUO,WAAa/X,KAAKH,MAAMwW,WAClCmB,EAAUQ,YAAchY,KAAKH,MAAMuX,iBAAiBC,kBAAoBrX,KAAKH,MAAMuX,iBAAiB3G,cAAgB,EACpH+G,EAAUS,SAAWjY,KAAKH,MAAMuX,iBAAiBc,SACjDV,EAAUW,QAAUnY,KAAKH,MAAMuX,iBAAiB9B,WAChDkC,EAAUY,QAAUpY,KAAKH,MAAMuX,iBAAiBgB,QAChDZ,EAAUzD,YAAc/T,KAAKH,MAAMuX,iBAAiBrD,YACpDyD,EAAUa,KAAOrY,KAAKH,MAAMuX,iBAAiBiB,KACtCb,I,8CAIa,IAAD,OACnB,OAAsC,IAAnCxX,KAAKH,MAAM+U,qBAA2D,OAA9B5U,KAAKH,MAAM4N,eAE9C,kBAAC,IAAD,CACI0H,KAAM,kBAAC,IAAD,MACN9I,OAAQ,kBAAC,IAAD,CAAQuC,KAAK,IAAIb,MAAM,WAAWjP,QAAS,WAAK,EAAKe,MAAMwM,OAAO,CAAC1J,YAAa,eAAhF,8EAGZ,oLACI,0uBAKD,6BACC,kBAAC,IAAD,CAAOnC,MAAM,0IACRR,KAAKsY,sBAGV,kBAAC,IAAD,CAAO9X,MAAM,2IACT,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,OAAQ,kBAAC,KAAD,MACRG,YAAa,8BACP,2BAAIZ,KAAKH,MAAMuX,iBAAiBhH,uBAEtCxB,KAAK,KAC+B,IAAnC5O,KAAKH,MAAM+U,oBAA4B,sGAAwB,2FAEpE,kBAAC,IAAD,CAAMnU,OAAQ,kBAAC,IAAD,OAAd,qFAAgD,2BAAIT,KAAKH,MAAMwW,aAC9DrW,KAAKuY,kBACN,kBAAC,IAAD,CAAM9X,OAAQ,kBAAC,KAAD,OAAd,iDAAgD,uBAAGlB,UAAU,eAAeS,KAAKwY,kBAAjC,cAG5D,kBAAC,IAAD,CAAOhY,MAAM,6EACT,kBAAC,IAAD,KACI,kBAAC,IAAD,KACJ,kBAAC,IAAD,CAAOwM,KAAK,eAAeC,MAAM,IAC1BrM,YAAY,wKACZuM,eAAwD,IAAxCnN,KAAKH,MAAMuX,iBAAiBgB,QAC5CtZ,QAAS,WAAO,EAAKe,MAAM0P,UAAU,CAAC6I,QAAQ,MAHrD,oDAIA,kBAAC,IAAD,CAAOpL,KAAK,eAAeC,MAAM,IAAIrM,YAAY,8MAC1CuM,eAAwD,IAAxCnN,KAAKH,MAAMuX,iBAAiBgB,QAC5CtZ,QAAS,WAAO,EAAKe,MAAM0P,UAAU,CAAC6I,QAAQ,MAFrD,qDAKI,kBAAC,IAAD,KACA,kBAAC,IAAD,KACI,kBAAC,GAAD,CAAgB7I,UAAWvP,KAAK6B,SAAS4B,KAAKzD,MAC9B4L,SAAU5L,KAAKH,MAAM+L,SACrBmK,cAAe/V,KAAKyY,eACpBzC,kBAAmBhW,KAAKH,MAAM0P,UAAU9L,KAAKzD,MAC7CkW,kBAAmBlW,KAAKH,MAAMqW,kBAAkBzS,KAAKzD,e,+BAYzF,OACIA,KAAK0Y,wB,GAtNUpW,IAAMC,WCC3BoW,GAASlW,cAuOAmW,G,YAlOX,WAAa/Y,GACZ,IAAD,8BACI,4CAAMA,KACDC,MAAQ,CACT6C,YAAY,OACZ2I,OAAO,MAJf,E,0EASalI,GACTpD,KAAK6B,SAAS,CAACc,YAAaS,M,4EASvB,IAAD,OAyEJ,SAASyV,EAAoBC,EAASzM,GAEnC,OAAOyM,GACH,IAAI,IAAK,IAAIC,EAAc,yBAAKxZ,UAAU,yBAAwB,4BAAQA,UAAU,eAAeT,QAAS,WAAMuN,EAAO,CAAC1J,YAAa,WAArE,qDAAvC,IAA2I,4BAAQ7D,QAAS,WAAMuN,EAAO,CAAC1J,YAAa,cAAgBqW,UAAQ,YAApE,gEAA3I,IAA8O,4BAAQla,QAAS,WAAMuN,EAAO,CAAC1J,YAAa,YAA5C,yCAA+E,MACxV,IAAI,IAASoW,EAAc,yBAAKxZ,UAAU,yBAAwB,4BAAQT,QAAS,WAAMuN,EAAO,CAAC1J,YAAa,WAA5C,qDAAvC,IAAkH,4BAAQpD,UAAU,eAAeT,QAAS,WAAMuN,EAAO,CAAC1J,YAAa,cAAgBqW,UAAQ,YAA7F,gEAAlH,IAA8O,4BAAQla,QAAS,WAAMuN,EAAO,CAAC1J,YAAa,YAA5C,yCAA+E,MACxV,IAAI,IAASoW,EAAc,yBAAKxZ,UAAU,yBAAwB,4BAAQT,QAAS,WAAMuN,EAAO,CAAC1J,YAAa,WAA5C,qDAAvC,IAAkH,4BAAQ7D,QAAS,WAAMuN,EAAO,CAAC1J,YAAa,cAAgBqW,UAAQ,YAApE,gEAAlH,IAAqN,4BAAQzZ,UAAU,eAAeT,QAAS,WAAMuN,EAAO,CAAC1J,YAAa,YAArE,yCAGpP,OACI,kBAAC,IAAD,KACKoW,GA0CZ,OACI,kBAAC,IAAD,CAAMpW,YAAa3C,KAAKF,MAAM6C,YAAapD,UAAWoZ,KAAWpO,IAAM,cAAgB,kBAAmBe,OAAQtL,KAAKF,MAAMwL,OAAQ2N,SAAQjZ,KAAKH,MAAMiH,YAAY3B,QAAQ,IAGnKnF,KAAKH,MAAMiH,YAAY3B,QAAQ,EAvCrC,kBAAC,IAAD,CAAOjF,GAAG,QAEN,kBAAC,IAAD,CACIiV,KAAM,kBAAC,KAAD,MACN9I,QAAQ,GAGR,yGACA,wSAOf,SAAwBvF,EAAYjI,EAAQsY,EAAQtV,GACjD,OACI,kBAAC,IAAD,CAAO3B,GAAG,QACV,kBAAC,IAAD,CAAayJ,MAAM,SAAnB,IAA6BkP,EAAoB,IAAKhX,EAAS4B,KAAKzD,QACpE,kBAAC,IAAD,CAAOQ,MAAM,wCACZ,kBAAC,IAAD,CAAKjB,UAAU,4BAxFxB,SAAwBW,EAAIgZ,EAASra,GAAS,IAAD,OAExC,GAAGqa,EAAS/T,QAAQ,EAChB,OAAO,yBAAKhF,MAAO,CAAC,UAAY,SAAS,QAAU,WAAW,UAAY,SAAS,yGAAsB,ycAGzG,IAAIgZ,EAAUD,EAASja,KAAI,SAACma,EAAYC,GAAb,OACvB,yBAAK9Z,UAAU,qBAAqBJ,IAAK,iBAAiBka,GACtD,yBAEA9Z,UAAU,eACVY,MAAO,CACH,MAAS,QACT,OAAU,OACV,QAAW,KACX,MAAQ,OACRmZ,aAAa,KAGb,yBAAK/Z,UAAU,oBACX,yBAAKoB,IAAKyY,EAAYhT,OAE1B,yBAAK7G,UAAU,gBAEV6Z,EAAY5Y,MAFjB,IAEwB,0BAAMjB,UAAU,YAAY6Z,EAAYzS,YAEhE,yBAAKpH,UAAU,iBACV6Z,EAAYxY,aAEjB,yBAAKT,MAAO,CAACoZ,MAAM,SAEf,0BAAMha,UAAU,gBAAhB,gDAAyC,0BAAMA,UAAU,kBAAkB6Z,EAAYI,MAAQJ,EAAYxS,MAAlE,YACzC,yBAAKrH,UAAU,kBAAiBY,MAAO,CAACqM,MAAM,OAAOkC,QAAQ,IAAI,kBAAC,EAAD,CAAYhQ,aAAcwa,EAAUxZ,aAAc0Z,EACtEzZ,SAAUd,EAAQ4E,KAAK,QAG5E,kBAAC,IAAD,CAAWtD,MAAO,CAAEE,OAAQ,gBAIpC,OAAO,yBAAKd,UAAU,qBAAqB4Z,GAiD1CM,CAAc,EAAS3S,EAAajI,EAAQ4E,QACjD,yBAAKtD,MAAO,CAACoZ,MAAM,YAGvB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKha,UAAU,sBAAf,kEAAiD,0BAAMA,UAAU,eAAe4X,EAA/B,aAErD,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAAQvI,KAAK,KAAK9P,QAAS,WAAM+C,EAAS,CAACc,YAAa,cAAgBqW,UAAQ,YAAhF,yEAaWU,CAAe1Z,KAAKH,MAAMiH,YAAa9G,KAAKH,MAAMhB,QAAQ4E,OAAOzD,KAAKH,MAAMsX,QAASnX,KAAK6B,SAAS4B,KAAKzD,OAGhH,kBAAC,IAAD,CAAOE,GAAG,YACN,kBAAC,IAAD,CAAayJ,MAAM,SAASkP,EAAoB,IAAK7Y,KAAK6B,SAAS4B,KAAKzD,QACxE,kBAAC,GAAD,CACIkT,eAAgBlT,KAAKH,MAAMqT,eAC3BtH,SAAU5L,KAAKH,MAAM+L,SACrB6H,kBAAmBzT,KAAKH,MAAM4T,kBAAkBhQ,OAEhDgK,eAAgBzN,KAAKH,MAAM4N,eAC3BxB,kBAAmBjM,KAAKH,MAAMoM,kBAAkBxI,KAAKzD,MAErDyR,iBAAkBzR,KAAKH,MAAM4R,iBAC7BD,oBAAqBxR,KAAKH,MAAM2R,oBAAoB/N,KAAKzD,MAEzD4U,oBAAqB5U,KAAKH,MAAM+U,oBAChCC,gBAAiB7U,KAAKH,MAAMgV,gBAAgBpR,KAAKzD,MAEjDsV,WAAYtV,KAAKH,MAAMyV,WACvB1B,WAAY5T,KAAKH,MAAM+T,WAAWnQ,KAAKzD,MAEvC+T,YAAa/T,KAAKH,MAAMkU,YAExBxE,UAAWvP,KAAKH,MAAM0P,UAAU9L,KAAKzD,MACrCqN,qBAAsBrN,KAAKH,MAAMwN,qBAAqB5J,KAAKzD,MAC3DmS,kCAAmCnS,KAAKH,MAAMsS,kCAAkC1O,KAAKzD,MAGrFmX,QAASnX,KAAKH,MAAMsX,QAEpB9L,UAAWrL,KAAK6B,SAAS4B,KAAKzD,MAC9B8G,YAAa9G,KAAKH,MAAMiH,YAExBuO,UAAWrV,KAAKH,MAAMwV,UAAU5R,KAAKzD,MACrC8O,WAAY9O,KAAKH,MAAMiP,WAAWrL,KAAKzD,QAG3C,kBAAC,IAAD,CAAKG,MAAO,CAAC6T,QAAS,SAClB,kBAAC,IAAD,CAAQpF,KAAK,IAAIsF,WAAS,EAACnG,MAAM,YAAa5N,MAAO,CAAE2M,YAAa,GAAKvN,UAAU,eAAeT,QAAS,WAAM,EAAK+C,SAAS,CAACc,YAAa,WAA7I,qDACA,kBAAC,IAAD,CAAQiM,KAAK,IAAIsF,WAAS,EAAC3U,UAAU,eAAeT,QAAS,WAAM,EAAK+C,SAAS,CAACc,YAAa,YAA/F,iDAGR,kBAAC,IAAD,CAAOzC,GAAG,SACN,kBAAC,IAAD,CAAayJ,MAAM,SAASkP,EAAoB,IAAK7Y,KAAK6B,SAAS4B,KAAKzD,QACxE,kBAAC,GAAD,CACIkT,eAAgBlT,KAAKH,MAAMqT,eAC3BtH,SAAU5L,KAAKH,MAAM+L,SACrByK,WAAYrW,KAAKH,MAAMwW,WACvB9G,UAAWvP,KAAKH,MAAM0P,UAAU9L,KAAKzD,MACrCmX,QAASnX,KAAKH,MAAMsX,QACpBvC,oBAAqB5U,KAAKH,MAAM+U,oBAChCnH,eAAgBzN,KAAKH,MAAM4N,eAE3B2J,iBAAkBpX,KAAKH,MAAM8Z,oBAE7BpD,yBAA0BvW,KAAKH,MAAM+U,oBAAsB5U,KAAKH,MAAMsS,kCAAkC1O,KAAKzD,MAAQA,KAAKH,MAAMwN,qBAAqB5J,KAAKzD,MAG1JqM,OAAQrM,KAAK6B,SAAS4B,KAAKzD,MAE3BkW,kBAAmBlW,KAAKH,MAAMqW,kBAAkBzS,KAAKzD,QAEzD,kBAAC,IAAD,CAAKG,MAAO,CAAC6T,QAAS,SAClB,kBAAC,IAAD,CAAQpF,KAAK,IAAIb,MAAM,YAAYmG,WAAS,EAAC/T,MAAO,CAAE2M,YAAa,GAAKvN,UAAU,eAAeT,QAAS,WAAM,EAAK+C,SAAS,CAACc,YAAa,cAAgBqW,UAAQ,YAApK,8E,GAzNE1W,IAAMC,WCozBjBqX,G,YAnyBX,WAAa/Z,GAAQ,IAAD,8BAChB,4CAAMA,KAqDVga,iBAAmB,SAACC,GAChB,OAAOA,EAAOC,MAAM,GAAG7U,MAAM,KACxBjG,KAAI,SAAC+a,GACF,IAAIC,EAAMD,EAAW9U,MAAM,KAC3B,MAAO,CAAC/F,IAAK8a,EAAI,GAAIhN,MAAOgN,EAAI,OAEnCC,QAAO,SAACC,EAAOF,GAEZ,OADAE,EAAMF,EAAI9a,KAAO8a,EAAIhN,MACdkN,IACR,KA5DP,EAAKra,MAAQ,CACTsa,YAAW,EACXnT,SAAS,GACToT,gBAAe,EACfC,YAAa,UACblR,aAAa,EACbnG,KAAK,GACLiQ,eAAe,CAACjS,OAAM,EAAKE,SAAS,IACpCkX,KAAK,GACLkC,iBAAiB,GACjB9M,eAAe,KACfgE,iBAAiB,EACjBmD,oBAAoB,EACpBU,WAAW,GACX8C,QAAQ,EACRrE,YAAY,EACZsC,WAAW,EACXc,QAAQ,EACRqD,YAAY,KACZhL,mBAAmB,GACnBC,oBAAoB,GAEpBK,kBAAkB,GAClBoC,oBAAoB,GAEpBzB,cAAc,EACdE,YAAY,IACZE,mBAAmB,EAGnByG,iBAAgB,EAEhBD,mBAAkB,EAGlBoD,uBAAsB,EAGtBrK,qBAAqB,GACrB6F,eAAc,EAEdyE,iBAAgB,EAChBC,iBAAiB,GACjBC,WAAY,EAEZ7a,oBAAmB,GAGvB,EAAK8a,cAAgB,EAAKA,cAAcpX,KAAnB,gBAnDL,E,iFAoEhB4C,QAAQC,IAAI,6EACTtG,KAAKF,MAAMmW,eACVjW,KAAK8a,UAAU9a,KAAKF,MAAMmD,KAAK/C,IAC/BF,KAAK6B,SAAS,CAACyY,YAAa,kBAE5BjU,QAAQC,IAAI,oE,2CAKC,IAAD,OAChB,OACI,kBAAC,IAAD,CAAa4N,WAAS,EACTiB,KAAM,kBAAC,IAAD,MACN9I,OAAQ,kBAAC,IAAD,CAAQuC,KAAK,IAAIb,MAAM,WAAWjP,QAAS,WAAK,EAAK+C,SAAS,CAACyY,YAAa,cAA5E,sDAGjB,sHACA,mV,iDAMLta,KAAKF,MAAM6Q,YAAc3Q,KAAKF,MAAMqX,SACnCnX,KAAK6B,SAAS,CAACyV,iBAAgB,IAC5BtX,KAAKF,MAAM+Q,oBAAsB7Q,KAAKF,MAAMqX,QAE3CnX,KAAK6B,SAAS,CAACwV,mBAAkB,IAGjCrX,KAAK6B,SAAS,CAACwV,mBAAkB,KAGrCrX,KAAK6B,SAAS,CAACyV,iBAAgB,IAEnCjR,QAAQC,IAAI,uHAAwBtG,KAAKF,MAAM+Q,mBAAmB,MAAM7Q,KAAKF,MAAMqX,W,0DAKnFnX,KAAK6B,SAAS,CACV4O,cAAe,EACfE,YAAa,IACbE,mBAAoB,IAGrB7Q,KAAKF,MAAMqX,QAAU,KACpBnX,KAAK6B,SAAS,CAACyV,iBAAgB,IAC5BtX,KAAKF,MAAMqX,QAAU,EAEpBnX,KAAK6B,SAAS,CAACwV,mBAAkB,IAGjCrX,KAAK6B,SAAS,CAACwV,mBAAkB,KAGrCrX,KAAK6B,SAAS,CAACyV,iBAAgB,IAEnCjR,QAAQC,IAAI,6L,oCAGDlD,GACXpD,KAAK6B,SAAS,CAAEyY,YAAalX,EAAEC,cAAcC,QAAQyX,U,0CAGrC3X,GACR,GAALA,IAAQA,EAAI,IACfpD,KAAK6B,SAAS,CACV0Y,iBAAiBnX,IAGrB,IAAI4X,EAAc,EAClBhb,KAAKF,MAAMuY,KAAKpZ,KAAI,SAACgc,GACbD,GAAcC,EAAIrU,MAAMqU,EAAIzB,SAGpCxZ,KAAK6B,SAAS,CAACsV,QAAQ6D,IAEvBE,SAASC,OAAS,UAAUnb,KAAKF,MAAMuY,O,iCAGhCjV,GACPpD,KAAK6B,SAAS,CACVyT,WAAWlS,M,8BAIXA,GACJpD,KAAK6B,SAAS,CAACoB,KAAKG,M,oCAGVA,GACVpD,KAAK6B,SAAS,CAACqR,eAAe,CAACjS,OAAM,EAAME,SAASiC,O,wCAIpD,OAAOpD,KAAKF,MAAMsa,WAAW3Q,aACzB,IAAI,cAAe,MAAO,UAC1B,QAAS,MAAO,Y,4CAKF,IAAD,QACY,IAA1BzJ,KAAKF,MAAMsa,YAIV7O,IAAM,qFACF,CACIC,OAAQ,OACRC,QAAS,CAAC,eAAgB,qCAC1BvM,KAAM,CACFkc,UAAWpb,KAAKqb,mBAEpBxP,aAAc,SAEjBlK,MAAK,YAAa,IAAXzC,EAAU,EAAVA,KACA,UAAWA,GACX,EAAKoc,cAAc,IAAI,GACvBjV,QAAQC,IAAIpH,EAAK+B,MAAO,IAAK/B,EAAK4M,YAGlC,EAAKwP,cAAcpc,EAAKqc,WAAW,MAG1CtZ,OAAM,YAAY,IAAVC,EAAS,EAATA,IACLmE,QAAQC,IAAI,mHAAoCpE,Q,oCAKlDsZ,EAAW/M,IACP,IAAXA,GACCzO,KAAK6B,SAAS,CAAC8Y,iBAAkBa,KACE,IAA/Bxb,KAAKF,MAAM4a,iBACX1a,KAAK6B,SAAS,CAAC6Y,iBAAiB,MAGD,IAA/B1a,KAAKF,MAAM4a,iBACX1a,KAAK6B,SAAS,CAAC6Y,iBAAiB,M,wCAK1B,IAAD,OACTe,EAAc5V,OAAOC,KAAK9F,KAAKF,MAAM6a,kBACrCe,EAAU,OACVC,EAAY,OACEF,EAAYtW,OAE9B,GADGsW,EAAYtW,QAAU,IAAGuW,GAAU,EAAMC,GAAY,IACtB,IAA/B3b,KAAKF,MAAM4a,gBAA2Be,EAAYtW,OAAS,EAAG,CAC7D,IAAIyW,EAAeH,EAAYxc,KAAI,SAAC2C,EAAMkE,GAEtC,OAAQ,yBAAK3G,IAAK2G,EAAMnF,IAAK,EAAKb,MAAM6a,iBAAiB/Y,GAAOwE,IAAKjG,MAAO,CAACC,SAAS,aAG1F,OACI,kBAAC,IAAD,CACIyb,SAAUF,EAGVG,WAAW,OACX3b,MAAO,CAACqM,MAAM,OAAO8G,OAAQ,QAC7ByI,QAASL,GAERE,GAIT,MACI,K,iDAOR5b,KAAKgc,sBACLC,WAAWjc,KAAKkc,yBAAyBzY,KAAKzD,MAAM,O,4CAQlC,IAAD,OACjByB,IAAQC,YAAY,wBAAyB,CAAC,OAAU,8BAA+B,OAAU,CAAC,QAAW,YAAY,EAAI,QAAQ,aAAe,6EAC/IC,MAAK,SAACC,GACH,EAAKC,SAAS,CAAC9B,mBAAoB6B,EAAME,SAASC,gBAErDE,OAAM,SAACC,GACJ,EAAKL,SAAS,CAAC9B,oBAAoB,S,4CAIzBqD,GAClBpD,KAAK6B,SAAS,CAAC9B,mBAAmBqD,M,4CAIhB,IAAD,OACjB,OAAqC,IAAlCpD,KAAKF,MAAMC,mBAEN,kBAAC,IAAD,CAAamU,WAAS,EACTiB,KAAM,kBAAC,IAAD,MACN9I,OAAQ,kBAAC,IAAD,CAAQuC,KAAK,IAAIb,MAAM,WAAWjP,QAAS,WAAK,EAAK+C,SAAS,CAACyY,YAAa,cAA5E,sDAGjB,qHACA,wWAKJ,kBAAC,IAAD,CAAapG,WAAS,EACTiB,KAAM,kBAAC,IAAD,MACN9I,OAAQ,kBAAC,IAAD,CAAQuC,KAAK,IAAIb,MAAM,WACfjP,QAAS,WAAK,EAAK0C,cAD3B,uHAGRrB,MAAO,CAACiU,UAAU,WAL/B,gP,mCAc6B,IAAlCpU,KAAKF,MAAMC,mBACVC,KAAKmC,sBAELnC,KAAKoC,uB,4CAIS,IAAD,OACjBX,IAAQC,YAAY,4BAA6B,IAC5CC,MAAK,SAACC,GACH,EAAKC,SAAS,CAAC9B,oBAAoB,OAEtCkC,OAAM,SAACC,GACA,EAAKL,SAAS,CAAC9B,oBAAoB,S,2CAK9B,IAAD,OAChB0B,IAAQC,YAAY,6BAA8B,IAC7CC,MAAK,SAACC,GACH,EAAK3B,yBAERgC,OAAM,SAACC,GACA,EAAKjC,2B,0CAOA,IAAD,OAChBD,KAAKC,sBAYLsL,IAAM,CACFC,OAAO,MAGP2Q,IAAI,6HACJtQ,aAAa,SACdlK,MAAK,YAAe,IAAZzC,EAAW,EAAXA,KACPmH,QAAQC,IAAI,6EAAiBpH,EAAK8S,MAClC,EAAKnQ,SAAS,CAEVoF,SAAU/H,EAAK8S,KACfqI,gBAAe,OAGlBpY,OAAM,SAACC,GACJmE,QAAQC,IAAI,kBAAkBpE,MAzBtC,SAAyBW,EAAQiY,EAAUrH,GAA3C,QAAA1Q,EAAAC,OAAA,kEAAAD,EAAA,MACuBtB,IAAQC,YAAY,wBAD3C,OACUuB,EADV,OAEIJ,EAAQI,GAIR6X,EAAU7X,EAAK/C,IACfuT,EAAkBxQ,EAAK/C,IAP3B,qCA6BAgD,CAAUlD,KAAK6C,QAAQY,KAAKzD,MAAMA,KAAK8a,UAAUrX,KAAKzD,MAAMA,KAAKyT,kBAAkBhQ,KAAKzD,OACxFA,KAAKkc,2BACDD,WAAW,WAAYjc,KAAKoc,gBAAgB,IAAI3Y,KAAKzD,MAAO,O,sCAGpDyW,GAEZA,IACAzW,KAAK8a,UAAU9a,KAAKF,MAAMmD,KAAK/C,IAC/B+b,WAAW,WAAYjc,KAAKoc,gBAAgB3F,IAAIhT,KAAKzD,MAAO,O,6CAGzCqc,EAAQC,GAC3B,OAAGD,IAAYC,I,yCAIAC,GAEfvc,KAAK6B,SAAS,CAEVwW,KAAMkE,EACNnT,aAAa,IAEjBpJ,KAAKwc,sB,gCAGCC,GAAS,IAAD,QACY,IAAvBzc,KAAKF,MAAMwJ,SACVtJ,KAAK6B,SAAS,CAACyH,SAAS,IAE5BiC,IAAM,CACFC,OAAO,MACP2Q,IAAI,mHAAmHM,EACvH5Q,aAAa,SACdlK,MAAK,YAAe,IAAZzC,EAAW,EAAXA,KAEJ,UAAWA,IACVA,EAAKwd,YAAc,GACnBrW,QAAQC,IAAIpH,EAAK+B,MAAM,IAAI/B,EAAK4M,YAGZ,OAArB5M,EAAKwd,cACJxd,EAAKwd,YAAc,IAGvB,IAAIC,EAAUC,KAAKC,UAAU,EAAK/c,MAAMuY,MACpCyE,EAAUF,KAAKC,UAAU3d,EAAKwd,cAId,IAFD,EAAKK,uBAAuBJ,EAAQG,IAGnD,EAAKE,mBAAmB9d,EAAKwd,gBAKhCza,OAAM,YAAY,IAAVC,EAAS,EAATA,IACLmE,QAAQC,IAAI,kBAAkBpE,Q,wCAMxBua,GAAS,IAAD,OACtBzc,KAAK6B,SAAS,CAACyH,SAAS,IAExBiC,IAAM,CACFC,OAAO,MACP2Q,IAAI,+GAA+GM,EACnH5Q,aAAa,SACdlK,MAAK,YAAe,IAAZzC,EAAW,EAAXA,KAEJ,UAAWA,EAEVmH,QAAQC,IAAIpH,EAAK+B,MAAM,IAAI/B,EAAK4M,WAEhC,EAAKmR,cAAc/d,EAAK8S,KAAK,IAGjC,EAAKnQ,SAAS,CACVuH,aAAa,IAEjB/C,QAAQC,IAAI,iBAAiB,EAAKxG,MAAMoT,mBAEvCjR,OAAM,YAAY,IAAVC,EAAS,EAATA,IACLmE,QAAQC,IAAI,kBAAkBpE,Q,oCAM5Bua,EAAQS,GAElB3R,IAAM,8FAA8FkR,EAChG,CACAjR,OAAQ,OACJC,QAAS,CAAE,eAAgB,qCAC/BvM,KAAM,CACFie,WAAYD,GAEhBrR,aAAa,SAEZlK,MAAK,YAAe,IAAZzC,EAAW,EAAXA,KACF,UAAWA,GACVmH,QAAQC,IAAIpH,EAAK+B,MAAM,IAAI/B,EAAK4M,cAGvC7J,OAAM,YAAY,IAAVC,EAAS,EAATA,IACLmE,QAAQC,IAAI,6GAAkCpE,Q,8BAIlDkB,GAAY,IAAD,OAATga,EAAS,uDAAJ,IAGL9d,EAASU,KAAKF,MAAMuY,KAAKlT,OAC/B,GAAS,KAANiY,EAEC,GAAG9d,GAAQ,EAAG,CAEVU,KAAKF,MAAMuY,KAAK3B,KAAKtT,GACrB,IAAMia,EAAY/d,EAClBU,KAAKF,MAAMuY,KAAKgF,GAAW7D,MAAQ,EACnCxZ,KAAKsd,oBAAoB,OACxB,CAED,IAAIC,GAAQ,EAYZ,GAVAvd,KAAKF,MAAMuY,KAAKpZ,KAAI,SAACue,EAAare,GAC1Bqe,EAAape,aAAegE,EAAEhE,YAAcoe,EAAane,eAAe+D,EAAE/D,eAE1E,EAAKS,MAAMuY,KAAKlZ,GAAKqa,MAAQ,EAAK1Z,MAAMuY,KAAKlZ,GAAKqa,MAAQ,EAC1DiE,GAAgD,EAAK3d,MAAMuY,KAAKlZ,GAAKqa,MACrE+D,GAAO,OAKF,IAAVA,EAAe,CAEdvd,KAAKF,MAAMuY,KAAK3B,KAAKtT,GACrB,IAAMia,EAAY/d,EAClBU,KAAKF,MAAMuY,KAAKgF,GAAW7D,MAAQ,EACnCiE,UAMR,GAAGne,GAAQ,OAEN,CACGie,GAAQ,EACZvd,KAAKF,MAAMuY,KAAKpZ,KAAI,SAACue,EAAare,GAC1Bqe,EAAape,aAAegE,EAAEhE,YAAcoe,EAAane,eAAe+D,EAAE/D,eAEtE,EAAKS,MAAMuY,KAAKlZ,GAAKqa,OAAO,EAE5B,EAAK1Z,MAAMuY,KAAKqF,OAAOve,EAAK,IAE5B,EAAKW,MAAMuY,KAAKlZ,GAAKqa,MAAQ,EAAK1Z,MAAMuY,KAAKlZ,GAAKqa,MAAQ,EAC1DiE,GAAgD,EAAK3d,MAAMuY,KAAKlZ,GAAKqa,MACrE+D,GAAO,OAS3B,IAAIE,EAAyB,EAC7Bzd,KAAKF,MAAMuY,KAAKpZ,KAAI,SAACgc,GACpBwC,GAAgDxC,EAAIzB,SAErDxZ,KAAKsd,oBAAoBG,GACzB,IAAItH,EAAgBwH,KAAKC,UAAUhB,KAAKC,UAAU7c,KAAKF,MAAMuY,QAE7DrY,KAAK6d,cAAc7d,KAAKF,MAAMmD,KAAK/C,GAAGiW,K,0CAMtC,IAAIsH,EAAyB,EAC7Bzd,KAAKF,MAAMuY,KAAKpZ,KAAI,SAACgc,GAChBwC,GAAgDxC,EAAIzB,SAGzDxZ,KAAKsd,oBAAoBG,K,sCAGbra,GACZpD,KAAK6B,SAAS,CAAC+S,oBAAoBxR,M,wCAIrBA,GACL,QAANA,IACCA,EAAI,GAERpD,KAAK6B,SAAS,CAAC4L,eAAerK,IAC9BiD,QAAQC,IAAI,+HAA2BlD,K,0CAIvBA,GAChBpD,KAAK6B,SAAS,CAAC4P,iBAAiBrO,M,+BAI3BA,GACLpD,KAAK6B,SAAS,CAAC2Y,YAAYpX,M,+BAGpB,IAAD,OACAoG,EAAcxJ,KAAK6Z,iBAAiBiE,OAAOC,SAASC,QACvChe,KAAK6Z,iBAAiBiE,OAAOC,SAASE,OAE5B,IAA1Bje,KAAKF,MAAMsa,YACV/T,QAAQC,IAAI,+BAAsBkD,IAGT,IAA1BxJ,KAAKF,MAAMsa,aACVpa,KAAKF,MAAMsa,WAAa5Q,GAM5B,IAAM0U,EACF,kBAAC,IAAD,CAAW1D,YAAaxa,KAAKF,MAAM0a,aAC/B,kBAAC,IAAD,CACIta,GAAG,mBACHqM,QAAS,kBAAM,EAAK4R,SAAS,OAC7BlF,OACI,kBAAC,IAAD,CACImF,MAAO,kBAAC,IAAD,CAActf,QAAS,WAAM,EAAKqf,SAAS,QAA3C,yCADX,mFAOJ3d,MAAM,oGACN6d,qBAAqB,OACrBC,QAAQ,GACRnS,QAAS,CAAC,CACN3L,MAAO,GACP+N,KAAM,UACNlC,OAAQ,WACJ,EAAK8R,SAAS,UAIrBne,KAAKF,MAAM0P,oBAGhB,kBAAC,IAAD,CACItP,GAAG,oBACHqM,QAAS,kBAAM,EAAK4R,SAAS,OAC7BlF,OACI,kBAAC,IAAD,CACImF,MAAO,kBAAC,IAAD,CAActf,QAAS,WAAM,EAAKqf,SAAS,QAA3C,yCADX,iHAOJ3d,MAAM,4HACN6d,qBAAqB,OACrBC,QAAQ,GACRnS,QAAS,CAAC,CACN3L,MAAO,GACP+N,KAAM,UACNlC,OAAQ,WACJ,EAAK8R,SAAS,UAIrBne,KAAKF,MAAM2P,sBAKxB,OACI,kBAAC,IAAD,CAAM6K,YAAata,KAAKF,MAAMwa,YAAaiE,OACvC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIzf,QAASkB,KAAK6a,cACd2D,SAAqC,YAA3Bxe,KAAKF,MAAMwa,YACrBmE,aAAW,UACX9a,KAAK,8CACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CAAYxD,MAAO,CAAC,QAAU,QAC1BrB,QAASkB,KAAK6a,cACd2D,SAAqC,aAA3Bxe,KAAKF,MAAMwa,YACrBmE,aAAW,WACX9a,KAAK,kCACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CACI7E,QAASkB,KAAK6a,cACd2D,SAAqC,SAA3Bxe,KAAKF,MAAMwa,YACrBmE,aAAW,OACXvQ,MAAOlO,KAAKF,MAAMya,iBAClB5W,KAAK,8CACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CACI7E,QAASkB,KAAK6a,cACd2D,SAAqC,kBAA3Bxe,KAAKF,MAAMwa,YACrBmE,aAAW,gBACX9a,KAAK,sEACR,kBAAC,IAAD,OACD,kBAAC,IAAD,CACI7E,QAASkB,KAAK6a,cACd2D,SAAqC,SAA3Bxe,KAAKF,MAAMwa,YACrBmE,aAAW,OACX9a,KAAK,8CACR,kBAAC,IAAD,SAGL,kBAAC,IAAD,CAAMzD,GAAG,eAAeyC,YAAY,YAAYsW,QAAQ,GACpD,kBAAC,IAAD,CAAO/Y,GAAG,aAELF,KAAK0e,uBAGd,kBAAC,IAAD,CAAMxe,GAAG,UAAUyC,YAAY,UAAUsW,QAAQ,GAC7C,kBAAC,IAAD,CAAO/Y,GAAG,WAGFF,KAAKF,MAAMua,eAEP,kBAAC,GAAD,CAAgBxb,QAASmB,KAAKnB,QAAQ4E,KAAKzD,MAAOtB,aAAcsB,KAAKF,MAAMuY,KAAM9O,cAAevJ,KAAKF,MAAMmH,SAAU4C,aAAc7J,KAAK2e,gBAAgBlb,KAAKzD,MAAOwJ,YAAaA,IAEjL,kBAAC,IAAD,QAIhB,kBAAC,IAAD,CAAMtJ,GAAG,WAAWyC,YAAY,YAC5B,kBAAC,IAAD,CAAOzC,GAAG,YACN,kBAAC,IAAD,oFAGR,kBAAC,IAAD,CAAMA,GAAG,OAAOyC,YAAY,OAAOub,MAAOA,GACtC,kBAAC,IAAD,CAAOhe,GAAG,OAAOC,MAAO,CAAC,cAAgB,SACrC,kBAAC,IAAD,CAAawJ,MAAM,QACNU,UAAU,GADvB,8CAKA,yBAAKlL,IAAI,YAAYgB,MAAO,CAAC,cAAgB,SAEzC,kBAAC,GAAD,CACI2G,YAAa9G,KAAKF,MAAMuY,KACxBxZ,QAASmB,KAAKnB,QAAQ4E,KAAKzD,MAC3BkT,eAAgBlT,KAAKF,MAAMoT,eAC3BtH,SAAU5L,KAAKF,MAAMmD,KACrBwQ,kBAAmBzT,KAAKyT,kBAAkBhQ,KAAKzD,MAE/CyN,eAAgBzN,KAAKF,MAAM2N,eAC3BxB,kBAAmBjM,KAAKiM,kBAAkBxI,KAAKzD,MAE/CyR,iBAAkBzR,KAAKF,MAAM2R,iBAC7BD,oBAAqBxR,KAAKwR,oBAAoB/N,KAAKzD,MAEnD4U,oBAAqB5U,KAAKF,MAAM8U,oBAChCC,gBAAiB7U,KAAK6U,gBAAgBpR,KAAKzD,MAE3CsV,WAAYtV,KAAKF,MAAMwV,WACvB1B,WAAY5T,KAAK4T,WAAWnQ,KAAKzD,MAEjC+T,YAAa/T,KAAKF,MAAMiU,YAExBsC,WAAYrW,KAAKF,MAAMuW,WAEvB9G,UAAWvP,KAAK6B,SAAS4B,KAAKzD,MAC9BqN,qBAAsBrN,KAAK4e,yBAAyBnb,KAAKzD,MACzDmS,kCAAmCnS,KAAKmS,kCAAkC1O,KAAKzD,MAE/EmX,QAASnX,KAAKF,MAAMqX,QAEpB9B,UAAWrV,KAAKme,SAAS1a,KAAKzD,MAC9B8O,WAAY9O,KAAKme,SAAS1a,KAAKzD,KAAK,MAEpC2Z,oBACI,CACIlJ,cAAczQ,KAAKF,MAAM2Q,cACzBE,YAAY3Q,KAAKF,MAAM6Q,YACvBE,mBAAmB7Q,KAAKF,MAAM+Q,mBAG9ByG,gBAAgBtX,KAAKF,MAAMwX,gBAE3BD,kBAAkBrX,KAAKF,MAAMuX,kBAG7BoD,sBAAsBza,KAAKF,MAAM2a,sBAEjCrK,qBAAqBpQ,KAAKF,MAAMsQ,qBAEhCwE,oBAAoB5U,KAAKF,MAAM8U,oBAC/BnD,iBAAiBzR,KAAKF,MAAM2R,iBAC5BhE,eAAezN,KAAKF,MAAM2N,eAE1BqC,kBAAkB9P,KAAKF,MAAMgQ,kBAC7BoC,oBAAqBlS,KAAKF,MAAMoS,oBAEhCgG,SAASlY,KAAKF,MAAMwV,WACpB8C,QAAQpY,KAAKF,MAAMsY,QACnBrE,YAAY/T,KAAKF,MAAMiU,YACvBsE,KAAKrY,KAAKF,MAAMuY,MAKxBnC,kBAAmBlW,KAAKkW,kBAAkBzS,KAAKzD,QAIvD,yBAAKG,MAAO,CAAC,MAAQ,aAI7B,kBAAC,IAAD,CAAMD,GAAG,gBAAgByC,YAAY,iBACjC,kBAAC,IAAD,CAAOzC,GAAG,iBACN,kBAAC,IAAD,2EACCF,KAAK6e,wBAGd,kBAAC,IAAD,CAAM3e,GAAG,OAAOyC,YAAY,QACxB,kBAAC,IAAD,CAAOzC,GAAG,QACN,kBAAC,IAAD,mDACA,kBAAC,GAAD,CAASA,GAAG,OAAOiD,GAAG,SAASnC,UAAWhB,KAAKF,MAAMoT,eAAgBlR,sBAAuBhC,KAAKgC,sBAAsByB,KAAKzD,e,GA5xBlIsC,IAAMC,WCrBxBd,IAAQqd,KAAK,gBAQbC,IAASC,OAAO,kBAAC,GAAD,MAAS9D,SAAS+D,eAAe,U,mBClBjDC,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.53a280fb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\n\r\nexport default function ButtonInCart({CartProducts,typeProduct2,setCarts}){\r\n\r\n    function getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getButtonInCartProduct(typeProduct,setCart){\r\n       // console.log(CartProducts,'---0---',typeProduct,setCart);\r\n        if(!!CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            CartProducts.map((data,key)=>{\r\n                //console.log(data.id_Product,typeProduct.id_Product, data.type_product,typeProduct.type_product,'++++++++++++++++++');\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  getCountButton(typeProduct,CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return(getButtonInCartProduct(typeProduct2,setCarts));\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport {List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\n\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\n\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            StatusNotification:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getStatusNotificate();\r\n    }\r\n\r\n    getPanelProfil(){\r\n        return(\r\n            <div id={this.props.id} style={{maxWidth:'1200px',margin:'0 auto'}} them='white'>\r\n                {this.props.fetchedUser &&\r\n                    <Group title=\"Ваши данные\r\n    \">\r\n                        <Cell\r\n                            before={this.props.fetchedUser.photo_200 ? <Avatar src={this.props.fetchedUser.photo_200}/> : null}\r\n                            description={this.props.fetchedUser.city && this.props.fetchedUser.city.title ? this.props.fetchedUser.city.title : ''}\r\n                        >\r\n                            {`${this.props.fetchedUser.first_name} ${this.props.fetchedUser.last_name}`}\r\n                        </Cell>\r\n                    </Group>\r\n                }\r\n\r\n                {this.props.dataUsers.dataUsers.error ?\r\n                    this.getInfoUserNoneAuth()\r\n                    :\r\n\r\n                    <Group title=\"Активность\">\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Coins />}\r\n                            >\r\n                                Бонус Таймы: {this.props.dataUsers.dataUsers.dataUser.point}\r\n                            </Cell>\r\n                        </List>\r\n                    </Group>\r\n                }\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24Notification />}\r\n                            asideContent={<Switch\r\n                                checked={this.state.StatusNotification}\r\n                                onChange={()=>{this.PushClick()}} />}\r\n                            description=\"Изменение статуса заказа, акциии...\"\r\n                        >\r\n                            PUSH - уведомления\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth() {\r\n        return (\r\n            <Div>\r\n                Авторизуйтесь по номеру телефона, чтобы просматривать данные!\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n                this.props.setStatusNotification(datas.response.is_allowed);\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            });\r\n    }\r\n\r\n    //defaultChecked\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            })\r\n            .catch((err)=> {\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getPanelProfil()\r\n        );\r\n    }\r\n}\r\nexport default UserInfo;\r\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport UserInfo from './ProfileUser/UserInfo';\nimport Persik from './Persik';\nimport NoPersik from './Nopersik';\n\nconst ProfileUserPage = (dataUsers) => {\n\tconst [activePanel, setActivePanel] = useState('homeUsers');\n\tconst [fetchedUser, setUser] = useState(null);\n\t//const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\n\tuseEffect(() => {\n\t\t// connect.subscribe(({ detail: { type, data }}) => {\n\t\t// \tif (type === 'VKWebAppUpdateConfig') {\n\t\t// \t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t// \t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t// \t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t// \t}\n\t\t// });\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\t//setPopout(null);\n\t\t\t//console.log(connect);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\n\treturn (\n\t\t<View activePanel={activePanel}>\n\t\t\t<UserInfo id='homeUsers' fetchedUser={fetchedUser} go={go} dataUsers={dataUsers} setActivePanels={setActivePanel.bind(this)} setStatusNotification={dataUsers.setStatusNotification.bind(this)}/>\n\t\t</View>\n\t);\n}\n\nexport default ProfileUserPage;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport { View, Group, List, Cell } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Persik = props => (\r\n    <Panel id={props.id}>\r\n        <PanelHeader\r\n            left={<HeaderButton onClick={props.go} data-to=\"home\">\r\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n            </HeaderButton>}\r\n        >\r\n            Persik\r\n        </PanelHeader>\r\n        <Div>\r\n            <h2 size=\"x3\" level=\"1\">Это не совсем персик</h2>\r\n            <View activePanel=\"main\">\r\n                <Panel id=\"main\">\r\n                    <PanelHeader>VKUI</PanelHeader>\r\n                    <Group title=\"Items\">\r\n                        <List>\r\n                            <Cell>Hello</Cell>\r\n                            <Cell>World</Cell>\r\n                        </List>\r\n                    </Group>\r\n                </Panel>\r\n            </View>\r\n        </Div>\r\n        <img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\r\n    </Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nexport default function OneProduct({product,idCategory, ClickProduct, setCart, setProductModal, getButtonInCartProduct}) {\r\n// console.log('ут должна функция должна быть',ClickProduct);\r\n    // const ArrayProducts = product.map(oneProduct =>\r\n    //     //<OneProduct key={oneProduct.id} product={oneProduct} />\r\n    //     <Div className=\"blockProduct\" key={\"id_product_\"+oneProduct.id_Product}>\r\n    //         <Div className=\"imgPrewieProduct\"><img alt={oneProduct.title} src={oneProduct.img}/></Div><Div className=\"titleProduct\">{oneProduct.title}</Div><Div className=\"DescrProduct\">{oneProduct.description}</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">{oneProduct.price} руб.</span></Div>\r\n    //     </Div>\r\n    // );\r\n\r\n    // console.log(key);\r\n\r\n    function escapeHtml(text) {\r\n        var map = {\r\n            '&': '&amp;',\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '\"': '&quot;',\r\n            \"'\": '&#039;'\r\n        };\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n\r\n    function number_format(number, decimals, dec_point, separator ) {\r\n        number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\r\n        var n = !isFinite(+number) ? 0 : +number,\r\n            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n            sep = (typeof separator === 'undefined') ? ',' : separator ,\r\n            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n            s = '',\r\n            toFixedFix = function(n, prec) {\r\n                var k = Math.pow(10, prec);\r\n                return '' + (Math.round(n * k) / k)\r\n                    .toFixed(prec);\r\n            };\r\n        // Фиксим баг в IE parseFloat(0.55).toFixed(0) = 0;\r\n        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))\r\n            .split('.');\r\n        if (s[0].length > 3) {\r\n            s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n        }\r\n        if ((s[1] || '')\r\n            .length < prec) {\r\n            s[1] = s[1] || '';\r\n            s[1] += new Array(prec - s[1].length + 1)\r\n                .join('0');\r\n        }\r\n        return s.join(dec);\r\n    }\r\n\r\n    function getWeightProduct(Product_Weight,Product_WeightType){\r\n        if(Product_WeightType != 'л'){\r\n            return(\r\n                number_format(Product_Weight,'0','.', ' ')+' '+Product_WeightType\r\n            );\r\n        }else{\r\n            return(\r\n                Product_Weight+' '+Product_WeightType\r\n            );\r\n        }\r\n    }\r\n\r\n    function getModyficateBlock(ArrayMod){\r\n        var ListMod = Object.keys(ArrayMod);\r\n        if(ListMod.length <=0){\r\n            return \"\";\r\n        }else{\r\n            var VisualList = ListMod.map((datas,keys)=>{\r\n                return (<div key={keys} className=\"ModyficateProduct\"><img src={ArrayMod[datas].mod_img} /></div>);\r\n            });\r\n            return(\r\n                <div className=\"ModyficateBlock\">{VisualList}</div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function getProductDiv(productList,idCategory,ClickProduct,setCart,setProductModal ,getButtonInCartProduct){\r\n\r\n         //console.log(ClickProduct,'в корзину функция');\r\n        var ProductCat = productList;\r\n\r\n        const WeightProduct = '';\r\n\r\n\r\n\r\n        const ArrayProducts = ProductCat.map((typeProduct,idTypeProduct) =>\r\n            <Div key={\"blockProducts_\"+typeProduct.id_Product+\"_\"+idTypeProduct} className=\"blockProduct\" id={\"id_product_\"+typeProduct.id_Product+\"_type_\"+typeProduct.type_product}>\r\n                {getModyficateBlock(typeProduct.modyficate)}\r\n                <Div className=\"imgPrewieProduct\">\r\n                    <img\r\n                        alt={typeProduct.title}\r\n                        src={typeProduct.img}\r\n                        onClick={() =>{\r\n                            ClickProduct('Panels_Product');\r\n                            setProductModal([typeProduct]);\r\n                            console.log('Нажали на фотку',ProductCat,idTypeProduct)}\r\n                        }\r\n                    />\r\n                </Div>\r\n                <Div className=\"titleProduct\">\r\n                    {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                    {escapeHtmlDecode(typeProduct.title)}\r\n                    <span className=\"redTextP\">\r\n                        {getWeightProduct(typeProduct.weight,typeProduct.weight_type)}\r\n                    </span>\r\n                </Div>\r\n                <Div className=\"DescrProduct\">\r\n                    {escapeHtmlDecode(typeProduct.description)}\r\n                    <div>\r\n                    </div>\r\n                    {typeProduct.type_info != '' ?\r\n                        <div className=\"WeightBlock\">\r\n                            {typeProduct.type_info}\r\n                        </div>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                </Div>\r\n                <Div className=\"priceProductBig\">\r\n                    <span className=\"priceProduct\">\r\n                        {number_format(typeProduct.price,'0','.',' ')} ₽\r\n                    </span>\r\n                    {getButtonInCartProduct(typeProduct,setCart)}\r\n                </Div>\r\n            </Div>\r\n        );\r\n\r\n\r\n        return ArrayProducts;\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        getProductDiv(product,idCategory,ClickProduct, setCart , setProductModal, getButtonInCartProduct)\r\n    );\r\n}","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\n// import Icon24Back from '@vkontakte/icons/dist/24/back';\r\n// import ModalProduct from '../ModalProduct.js';\r\nimport OneProduct from \"./OneProduct\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass ProductList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activePanel: 'panel1',\r\n            nameCategory: 'none',\r\n            productsLists: null,\r\n            products:[{\"1\":{\"title\":\"ЕКАРНЫЙ БАБАЙ\"}}]\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        function ReverceCatalog(Pr){\r\n            var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n                // console.log(last, index);\r\n                return (arr = arr.concat(last))\r\n            }, []);\r\n            return res;\r\n        }\r\n\r\n\r\n        function compare(a, b) {\r\n            if (a.price < b.price) {\r\n                return -1;\r\n            }\r\n            if (a.price > b.price) {\r\n                return 1;\r\n            }\r\n            // a должно быть равным b\r\n            return 0;\r\n        }\r\n\r\n        function comparePrice(Pr){\r\n            //console.log(Pr);\r\n            return Object.keys(Pr).sort(compare)\r\n        }\r\n\r\n\r\n        function ArrayProducts(Pr,ClickProductF,setProductModal,setCart, getButtonInCartProduct,ReverceStatus = 0) {\r\n            var CatalogLists = [];\r\n            if(ReverceStatus === 0){\r\n                CatalogLists = ReverceCatalog(Pr);\r\n            }\r\n            if(ReverceStatus === 1){\r\n                CatalogLists = comparePrice(Pr);\r\n            }\r\n\r\n            if(ReverceStatus === 2){\r\n                CatalogLists = Object.keys(Pr);\r\n            }\r\n\r\n            const ArrayPr = CatalogLists.map((oneProduct, keyId) =>\r\n                <OneProduct key={'Products_'+keyId} product={Pr[oneProduct]} ClickProduct={ClickProductF.bind(this)} setCart={setCart.bind(this)} setProductModal={setProductModal.bind(this)} getButtonInCartProduct={getButtonInCartProduct.bind(this)}/>\r\n            );\r\n            return ArrayPr;\r\n        }\r\n\r\n\r\n        function ShowProductCategory(nameCategorys){\r\n            //console.log('ShowProductCategory ',nameCategorys);\r\n            if(nameCategorys.nameCategorys === 'sets'){\r\n                // console.log('d-d-d-d-',nameCategorys.productsLists[nameCategorys.idCategory]);\r\n                return (<GetSets\r\n                    key={nameCategorys.key}\r\n                    names={nameCategorys.nameCategorys}\r\n                    ProductArray={nameCategorys.productsLists}\r\n                    ClickProduct={nameCategorys.ClickProduct.bind(this)}\r\n                    setCart={nameCategorys.setCart.bind(this)}\r\n                    setProductModal={nameCategorys.setProductModal.bind(this)}\r\n                    getButtonInCartProduct={nameCategorys.getButtonInCartProduct.bind(this)}\r\n                />);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'sushi'){\r\n                return (<GetSushi names={nameCategorys.nameCategorys}/>);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'roli'){\r\n                return (<GetRoli names={nameCategorys.nameCategorys}/>);\r\n            }else{\r\n                return (<GetNoneCat names={nameCategorys.nameCategorys}/>);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        function GetSets(ArrayPr) {\r\n           //console.log('ArrayPr ',ArrayPr);\r\n            return (\r\n                <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                    {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this))}\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetSushi(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с креветкой</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши краб</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши копченый лосот</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetRoli(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с тунцом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл Филадельфия</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Филадельфия с крабом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetNoneCat(names){\r\n            return (\r\n                <Div id={names} className=\"blockCategoryFlex\">\r\n                <h1>К сожаление категория пуста!</h1>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        // function GetModalProduct(product){\r\n        //     return(\r\n        //\r\n        //     )\r\n        // }\r\n\r\n        return (\r\n            <ShowProductCategory\r\n                productsLists={this.props.productsLists}\r\n                nameCategorys={this.props.nameCategory}\r\n                idCategory={this.props.idCategorys}\r\n                ClickProduct={this.props.onClickProduct.bind(this,'Panels_Product')}\r\n                setCart={this.props.setCart.bind(this)}\r\n                setProductModal={this.props.setProductModal.bind(this)}\r\n                getButtonInCartProduct={this.props.getButtonInCartProduct.bind(this)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductList;","import React from 'react';\r\nimport {Div, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport ProductList from \"./ProductList\";\r\nimport axios from \"axios\";\r\n//import ProductsInfo from \"../../../../SushiHappyTime/src/ProductsInfo\";\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nclass CategoryList extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            loadingPage: true,\r\n            activePanel: 'brand',\r\n            products: [],\r\n            panelCategory: '',\r\n            ActiveCategory: 0,\r\n            productModal:[{\"title\":\"Название товара\",\"description\":\"Описание товара\",\"typeproduct\":\"0\",\"price\":\"1000\"}]\r\n        };\r\n    }\r\n\r\n    hndlClick = (aP) => {\r\n        console.log('--- ', 'Нажали на кнопку '+aP);\r\n        this.setState({ activePanel: aP })\r\n    };\r\n\r\n    setProductModal = (aP) => {\r\n        console.log('--- ', 'Установили товар в модалку '+aP+' - - - -XTTT');\r\n        this.setState({ productModal: aP })\r\n    };\r\n\r\n    setActiveCategory = (aP) => {\r\n        console.log('--- ', 'Установили категорию '+aP);\r\n        this.setState({ ActiveCategory: aP })\r\n    };\r\n\r\n\r\n    getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getButtonInCartProduct(typeProduct,setCart){\r\n        //console.log(this.props.CartProducts,'---0---');\r\n        if(!!this.props.CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            this.props.CartProducts.map((data,key)=>{\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  this.getCountButton(typeProduct,this.props.CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return this.getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return this.getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true});\r\n        this.setState({products:this.props.ProductsLists,loadingPage: false});\r\n        //console.log('Передали: ',this.props.ProductsLists);\r\n            }\r\n\r\n    classNameDivCategory(){\r\n        //console.log(this.props.queryParams.vk_platform);\r\n        if(this.props.queryParams.vk_platform == \"desktop_web\"){\r\n            return \"GroupBlockCategory DivBlockDesctopCategoys\";\r\n        }else{\r\n            return \"GroupBlockCategory\";\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n\r\n        function ModalProductInfo(OPT){\r\n            if(OPT.Loadings === false){\r\n                console.log(OPT);\r\n                return(\r\n                    <div className=\"blockProduct\" style={{\"margin\":\"0\",\"textAlign\":\"left\",\"background\":\"#ffffff\"}}>\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            noShadow={false}\r\n                            left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                        >\r\n                            {escapeHtmlDecode(OPT.ProductInfo[0].title)}\r\n                        </PanelHeader>\r\n                        <Div id={'product_type_'+OPT.ProductInfo[0].type_info}>\r\n                            <div className=\"imgPrewieProduct\"><img src={OPT.ProductInfo[0].img} alt={OPT.ProductInfo[0].title}/></div>\r\n                            <div className=\"titleProduct\">{escapeHtmlDecode(OPT.ProductInfo[0].title)} <span className=\"redTextP\">{OPT.ProductInfo[0].type_info}</span></div>\r\n                            <div className=\"DescrProduct\">{escapeHtmlDecode(OPT.ProductInfo[0].description)}</div>\r\n                            <div className=\"priceProductBig\"><span className=\"priceProduct\">{OPT.ProductInfo[0].price} ₽</span>\r\n                                {OPT.getButtonInCartProduct(OPT.ProductInfo[0],OPT.setCart)}\r\n                            </div>\r\n                        </Div>\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <div>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                    >Ошибка</PanelHeader>\r\n                        <div style={{\"textAlign\":\"center\",\"padding\":\"5% 0\"}}>Ошибка, вернитесь назад</div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        function GetCategorys(OPT){\r\n            if(OPT.Loadings === false) {\r\n               // console.log(OPT,'-0-0-0-');\r\n               // console.log('Загрузилось', OPT.CategoryList);\r\n                //console.log('Товары ', OPT.CategoryList[OPT.ShowCategory].ProductList);\r\n                return (<div style={{background:\"#FFFFFF\"}}>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>Назад</HeaderButton>}\r\n                    >\r\n                        {OPT.CategoryList[OPT.ShowCategory].Title}\r\n                    </PanelHeader>\r\n                    <ProductList\r\n                        onClickProduct={OPT.ClickProduct.bind(this)}\r\n                        productsLists={OPT.CategoryList[OPT.ShowCategory].ProductList} key={OPT.CategoryList[OPT.ShowCategory].id_Category}\r\n                        idCategorys={OPT.ShowCategory}\r\n                        nameCategory=\"sets\"\r\n                        setCart={OPT.setCart.bind(this)}\r\n                        getButtonInCartProduct={OPT.getButtonInCartProduct.bind(this)}\r\n                        setProductModal={OPT.setProductModal.bind(this)}\r\n                    />\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <PanelHeader>Ошибка</PanelHeader>\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        function GetBrandPanels(OPT,Loadings){\r\n           // console.log(OPT,' - - - категории грузим',OPT.Loadings);\r\n\r\n\r\n            if(CategoryList.length === 0){\r\n                return '';\r\n            }else {\r\n                if(OPT.Loadings === false) {\r\n                    //ProductObject = Object.keys(OPT.CategoryList);\r\n                    //console.log('Преобразовали',ProductObject);\r\n                    // const ArrayBrands = Object.keys(OPT.CategoryList).map((CategoryProdcuts, key) =>\r\n                    const ArrayBrands = Object.keys(OPT.CategoryList).map((idCategorys, key) =>\r\n\r\n                        <Div\r\n                            style={{\"background\":\"linear-gradient( rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4) ), url(//sushi-time31.ru/images/API_IMG/\"+OPT.CategoryList[idCategorys].imgCategory+\")\",\"backgroundSize\":\"100%\"}}\r\n                            className=\"DivCategoryBlock\"\r\n                            key={key+'_'+idCategorys}\r\n                            onClick={\r\n                                () => {\r\n                                    OPT.ActiveCategory(idCategorys);\r\n                                    OPT.ClickCategory('Panels_38')\r\n                                }\r\n                            }\r\n                        >\r\n                            {OPT.CategoryList[idCategorys].Title}\r\n                        </Div>\r\n                    );\r\n                    return ArrayBrands;\r\n                }\r\n                else {\r\n                    return 'Loading ...';\r\n                }\r\n                // return '';\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        const osname = platform();\r\n\r\n        return (\r\n            <View activePanel={this.state.activePanel}>\r\n                <Panel id=\"brand\">\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                    >\r\n                        Категории\r\n                    </PanelHeader>\r\n                    <Group>\r\n                        <Div className=\"logoBlock\">\r\n                            <img src=\"//sushi-time31.ru/images/API_IMG/logo_susshi_time.png\"/>\r\n                            {this.props.queryParams.vk_platform == \"desktop_web\"\r\n                                ?\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a>+7 (4722) 777-498</a>\r\n                                </Div>\r\n                                :\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a href=\"tel:+74722777498\">Позвонить</a>\r\n                                </Div>\r\n                            }\r\n                        </Div>\r\n                        <div id=\"SliderHeader\">\r\n                            {this.props.sliderHeader()}\r\n                        </div>\r\n                    </Group>\r\n                        <Group\r\n                            //title=\"Выбери категорию\"\r\n                            className={this.classNameDivCategory()} >\r\n                        <GetBrandPanels key=\"BrandPanels\" CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)} ActiveCategory={this.setActiveCategory.bind(this)}/>\r\n                    </Group>\r\n                </Panel>\r\n                {/*{this.state.loadingPage ? <Panel id=\"Panels_38\" />  : <Panel id=\"Panels_38\" ><PanelHeader >Суши</PanelHeader></Panel> && <GetCategory CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)}/>}*/}\r\n                <Panel id=\"Panels_38\">\r\n                    <GetCategorys\r\n                        CategoryList={this.state.products}\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickCategory={this.hndlClick.bind(this)}\r\n                        ClickProduct={this.hndlClick.bind(this,'Panels_Product')}\r\n                        setProductModal={this.setProductModal.bind(this)}\r\n                        ShowCategory={this.state.ActiveCategory}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                    />\r\n                </Panel>\r\n                <Panel id=\"Panels_Product\">\r\n\r\n                    <ModalProductInfo\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickBack={this.hndlClick.bind(this)}\r\n                        ProductInfo={this.state.productModal}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                    />\r\n                </Panel>\r\n                {/*<Panel id=\"Panels_38\" />*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}*/}\r\n                {/*    >*/}\r\n                {/*        Cуши*/}\r\n                {/*    </PanelHeader>*/}\r\n\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sushi\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"light2\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Роллы*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"roli\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Сеты*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sets\" idCategorys=\"0\"/>*/}\r\n                {/*</Panel>*/}\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CategoryList;","import React, {useEffect} from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n//import ModalProduct from './panels/ModalProduct';\r\nimport CategoryList from './CategoryList';\r\n//import App from \"./Profile\";\r\n\r\nconst CatalogProduct = (OPT) => {\r\n    // const [activePanel, setActivePanel] = useState('home');\r\n    // const [fetchedUser, setUser] = useState(null);\r\n    // const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\r\n\r\n    useEffect(() => {\r\n        // connect.subscribe(({ detail: { type, data }}) => {\r\n        //     if (type === 'VKWebAppUpdateConfig') {\r\n        //         const schemeAttribute = document.createAttribute('scheme');\r\n        //         schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n        //         document.body.attributes.setNamedItem(schemeAttribute);\r\n        //     }\r\n        // });\r\n        async function fetchData() {\r\n            // const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            // setUser(user);\r\n            // setPopout(null);\r\n           // console.log(OPT.ProductsLists,'--- ВОТ');\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n            <CategoryList setCart={OPT.setCart.bind(this)} CartProducts={OPT.CartProducts} ProductsLists={OPT.ProductsLists} sliderHeader={OPT.sliderHeader.bind(this)} queryParams={OPT.queryParams}/>\r\n    );\r\n\r\n};\r\n\r\nexport default CatalogProduct;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n            axios('https://sushi-time31.ru/api/deletedAddressUser&apiKey=03478f08258a5b0e7f4a1e83dae33da9',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:{id:a},\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            this.props.setAddressDefault('del');\r\n                            console.log('Обновляем адреса',data);\r\n                            this.props.getAddressUserSystem(true);\r\n                            this.props.setPopout({ popout:null});\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    openDefault (a) {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Отмена',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }, {\r\n                        title: 'Удалить',\r\n                        autoclose: true,\r\n                        action: () => this.deletedAddress(a),\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Удаление адреса</h2>\r\n                    <p>Вы уверены что хотите удалить адрес?</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n    getAddressFull(n){\r\n        return(<div>\r\n                <span style={{width:\"75%\",float:\"left\"}}>\r\n                 г. {this.props.AddresInfo.city}, ул. {this.props.AddresInfo.street}, д. {this.props.AddresInfo.home}, подъезд {this.props.AddresInfo.podezd}, этаж {this.props.AddresInfo.etaj}, кв. {this.props.AddresInfo.kvartira}\r\n                </span>\r\n                <span style={{width:\"24%\",float:\"right\"}}><Icon28EditOutline onClick={()=>{console.log('Редактируем адрес ',n); this.props.setAddressEdit(this.props.AddresInfo.id)}} style={{float:\"left\",marginRight:\"10px\"}}/> <Icon28CancelCircleOutline style={{float:\"left\"}} onClick={()=>{console.log('Удаляем адрес '); this.openDefault(this.props.AddresInfo.id);}}/></span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} defaultChecked onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n,'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n, 'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddressOff extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n        this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n        axios('https://sushi-time31.ru/api/deletedAddressUser&apiKey=03478f08258a5b0e7f4a1e83dae33da9',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    addressInfo:{id:a},\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.result.result_add === true){\r\n                        this.props.setAddressDefault('del');\r\n                        console.log('Обновляем адреса',data);\r\n                        this.props.getAddressUserSystem(true);\r\n                        this.props.setPopout({ popout:null});\r\n                    }else{\r\n                        console.log('Ошибка ',data);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n            });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'У Вас в корзине лежат товары, которые на этот адрес не доставляются!'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'У Вас в корзине лежат товары, которые на этот адрес не доставляются!'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddressOff;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert, Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass FormNewAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                city: '',\r\n                street: '',\r\n                home: '',\r\n                entrance: '',\r\n                level: '',\r\n                flat: '',\r\n                comment:''\r\n        }\r\n\r\n        this.addressItems = [\r\n            { label: 'Город', name: 'city', statusChech:'yes', minValue:5, valPls:'' },\r\n            { label: 'Название улицы', name: 'street', statusChech:'yes', minValue:4, valPls:'' },\r\n            { label: '№ дома', name: 'home', statusChech:'yes', minValue:0, valPls:'' },\r\n            { label: '№ квартиры/офиса', name: 'flat', statusChech:'', minValue:0, valPls:'' },\r\n            { label: '№ подъезда', name: 'entrance', statusChech:'', minValue:0, valPls:'' },\r\n            { label: 'Этаж', name: 'level', statusChech:'', minValue:0, valPls:''},\r\n            { label: 'Примечание', name: 'comment', statusChech:'', minValue:0, valPls:'Пример: Квартира сестры' }\r\n        ];\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.openDefault = this.openDefault.bind(this);\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n\r\n        if(this.props.AddressEdit){\r\n            this.state = {\r\n                    id:this.props.AddressEdit.id,\r\n                    city: this.props.AddressEdit.city,\r\n                    street: this.props.AddressEdit.street,\r\n                    home: this.props.AddressEdit.home,\r\n                    entrance: this.props.AddressEdit.podezd,\r\n                    level: this.props.AddressEdit.etaj,\r\n                    flat: this.props.AddressEdit.kvartira,\r\n                    comment: this.props.AddressEdit.comment\r\n                }\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({[name]: value });\r\n       // console.log(this.state);\r\n    }\r\n\r\n\r\n    openDefault () {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Исправить',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Не все поля адреса заполнены</h2>\r\n                    <p>Внимательно заполните все поля, для сохранения адреса доставки!</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n\r\n    saveNewAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://sushi-time31.ru/api/setAddressUser&apiKey=03478f08258a5b0e7f4a1e83dae33da9',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n    saveEditAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://sushi-time31.ru/api/editAddressUser&apiKey=03478f08258a5b0e7f4a1e83dae33da9',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            //this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n    getNulledForm(){\r\n        return(\r\n            <FormLayout>\r\n                {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                    <Input\r\n                        type=\"text\"\r\n                        name={name}\r\n                        key={\"input_\"+name}\r\n                        top={label}\r\n                        onChange={this.onChange}\r\n                        status={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >=minValue  ? 'valid' : 'error'\r\n                                    : 'error'\r\n                                : \"\"\r\n                        }\r\n                        bottom={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >=minValue  ? '' : 'Введенные значение не корректно '+this.state[name].length\r\n                                    : 'Обязательно к заполнению'\r\n                                : \"\"\r\n                        }\r\n                        placeholder={valPls}\r\n                    />\r\n                ))}\r\n                <Button size=\"l\" style={{background:\"#ff7300\"}} onClick={()=>{this.saveNewAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Подтвердить адрес</Button>\r\n            </FormLayout>\r\n        );\r\n    }\r\n\r\n\r\n    getEditForm(){\r\n        return(\r\n            <FormLayout>\r\n                {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                    <Input\r\n                        type=\"text\"\r\n                        name={name}\r\n                        key={\"input_\"+name}\r\n                        top={label}\r\n                        onChange={this.onChange}\r\n                        status={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >minValue  ? 'valid' : 'error'\r\n                                    : 'error'\r\n                                : \"\"\r\n                        }\r\n                        value={this.state[name]}\r\n                        bottom={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >minValue  ? '' : 'Введенные значение не корректно'\r\n                                    : 'Обязательно к заполнению'\r\n                                : \"\"\r\n                        }\r\n                        placeholder={valPls}\r\n                    />\r\n                ))}\r\n                <Button size=\"l\" style={{background:\"#ff7300\"}} onClick={()=>{this.saveEditAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Завершить редактирование</Button>\r\n            </FormLayout>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Div>\r\n                {this.props.AddressEdit ? this.getEditForm() : this.getNulledForm()}\r\n            </Div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default FormNewAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAddress from \"./GetOneAddress\";\r\nimport GetOneAddressOff from \"./GetOneAddressOff\";\r\nimport OneProduct from \"../catalog/OneProduct\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport FormNewAddress from './FormNewAddress';\r\n\r\nclass DiliveryAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAddress:[],\r\n            listAddressOff:[],\r\n            addressOk:false,\r\n            dataAddress:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAddressUserSystem();\r\n        this.props.setStates({formNewAddressData: <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n    }\r\n\r\n    setAddressEdit(e){\r\n        console.log(this.state.listAddress);\r\n        this.props.setStates({formEditAddressData: <FormNewAddress AddressEdit={this.state.listAddress[e]} setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n        this.props.showModals('MODAL_EditADDRESS');\r\n    }\r\n\r\n\r\n    getAddressUserSystem(delUpdate = false){\r\n        axios('https://sushi-time31.ru/api/getAddressUser&apiKey=03478f08258a5b0e7f4a1e83dae33da9',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_UserVK: this.props.userInfo.id,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                    if(data.error === 'Address not found'){\r\n                        console.log('Нужно вывести форму для создания первого адреса пользователя');\r\n                        this.getFormNewAddress();\r\n                    }else{\r\n\r\n                    }\r\n                }else{\r\n                    console.log(data);\r\n                    this.setState({listAddress:data.listAddress});\r\n                    this.props.setStates({listAddressGlobal:data.listAddress});\r\n\r\n                    this.setState({listAddressOff:data.ListAddressNoDelivery});\r\n                    this.props.setStates({listAddressGlobalOff:data.ListAddressNoDelivery});\r\n\r\n                    if(delUpdate === true){\r\n                        this.getAddressUsers(this.state.listAddress,true);\r\n                    }else{\r\n                        this.getAddressUsers(this.state.listAddress);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n\r\n    setAddressInfoUsers(e,type=0){\r\n            if (type === 0) {\r\n                var listAddressU = Object.keys(this.state.listAddress);\r\n                if(listAddressU.length > 0) {\r\n                    // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n                    // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n                    var DataSetAddress = this.state.listAddress[listAddressU[e]];\r\n                    this.props.setStates({\r\n                        addressOrderInfoUser: 'г. ' + DataSetAddress.city + ', ул. ' + DataSetAddress.street + ', д. ' + DataSetAddress.home\r\n                    });\r\n                }\r\n            }\r\n    }\r\n\r\n    getFormNewAddress(){\r\n        this.props.setAddressDefault(null);\r\n        this.state.dataAddress = <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)}/>;\r\n        this.setState({addressOk:true});\r\n        this.props.setShowBTNNewAddress({showBTNNewAddress:false});\r\n\r\n    }\r\n\r\n    setDataDiliveryPrice(n,ee = 'Дефолт 0'){\r\n        var listAddressU = Object.keys(this.state.listAddress);\r\n        // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n        // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n        if(listAddressU.length <= 0){\r\n            console.log('Адресов нет, должны вернуть только не доступные адреса');\r\n            this.props.setAddressDefault(null);\r\n            //return this.getAddressUsers(this.state.listAddress, true);\r\n        }else {\r\n            if (listAddressU[n] in this.state.listAddress) {\r\n                console.log('Все ок, продолжаем по адресам');\r\n            } else {\r\n                console.log('Адреса такого нет, ставим в дефаулт');\r\n                this.props.setAddressDefault(0);\r\n                console.log('Должны переустановить дефаултный адрес на 0, адреса есть');\r\n                return this.getAddressUsers(this.state.listAddress, true);\r\n            }\r\n        }\r\n\r\n        if(listAddressU.length <= 0){\r\n            console.log('Адресов нет, но продолжаем');\r\n            console.log('Установили значения стоимости доставки ', ee);\r\n        }else {\r\n            var DataSetAddress = this.state.listAddress[listAddressU[n]].diliveryData;\r\n            this.props.setStates({\r\n                priceDelivery: DataSetAddress.priceDilivery,\r\n                minSumOrder: DataSetAddress.min_sum_order,\r\n                minSumFreeDelivery: DataSetAddress.min_sum_free_dilivery\r\n            });\r\n            console.log('Установили значения стоимости доставки ', ee);\r\n        }\r\n\r\n    }\r\n\r\n    getAddressUsers(listAddress,delUpdate = false) {\r\n        if(this.props.addressDefault === null & Object.keys(listAddress).length > 0){\r\n            console.log('Устанавливаем дефаултное значение адреса на 0','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(0);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n        if(this.props.addressDefault !== null & Object.keys(listAddress).length <= 0){\r\n            console.log('Устанавливаем дефаултное значение адреса на 0 с условием что адресов нет','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(null);\r\n            this.setDataDiliveryPrice(0);\r\n        }\r\n\r\n        if(delUpdate === true){\r\n            console.log('Устанавливаем дефаултное значение адреса на 0');\r\n            this.props.setAddressDefault(0);\r\n            this.getAddressUsers(listAddress,false);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }else{\r\n            this.state.dataAddress = Object.keys(listAddress).map((dataAddress, keyId) =>\r\n                <GetOneAddress\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId}\r\n                    AddresInfo={listAddress[dataAddress]}\r\n                    NumberAddress={keyId}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n\r\n            this.state.dataAddressOff = Object.keys(this.state.listAddressOff).map((dataAddress2, keyId2) =>\r\n                <GetOneAddressOff\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId2}\r\n                    AddresInfo={this.state.listAddressOff[dataAddress2]}\r\n                    NumberAddress={keyId2}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n            this.setState({addressOk:true});\r\n            this.props.setShowBTNNewAddress({showBTNNewAddress:true});\r\n            this.setDataDiliveryPrice(this.props.addressDefault, 'На '+this.props.addressDefault);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n    }\r\n\r\n    getListAddressVisual(){\r\n        return(\r\n            <div>\r\n                {this.state.dataAddress}\r\n                {this.state.dataAddressOff}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (this.state.addressOk === false ? <div>Загрузка адресов доставки <ScreenSpinner/></div> : this.getListAddressVisual()\r\n            );\r\n    };\r\n}\r\n\r\nexport default DiliveryAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\n\r\nclass GetOneAffiliateAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n    }\r\n\r\n    getAddressTitle(){\r\n        return(\r\n            <span>\r\n               {this.props.AddresInfo.title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    getAddressFull(){\r\n        return(\r\n            <span style={{\"color\":\"#ffae6b\"}} dangerouslySetInnerHTML={{__html: this.props.AddresInfo.operating_mode}}>\r\n\r\n            </span>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    defaultChecked onClick={() => {\r\n                        this.props.setAffiliateDefault(n);\r\n                    ;this.props.setAddressInfoUsers(n);\r\n                    }\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    onClick={() => {\r\n                        this.props.setAffiliateDefault(n)}\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.AffiliateDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAffiliateAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAffiliateAddress from \"./GetOneAffiliateAddress\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass AffiliateList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAffiliate:[],\r\n            addressAffiliateOk:false,\r\n            dataAffiliate:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios('https://sushi-time31.ru/api/getAffiliate&apiKey=03478f08258a5b0e7f4a1e83dae33da9',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_City: 1,\r\n                    id_UserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo,'Самовывоз');\r\n                }else{\r\n                    console.log(data,'Самовывоз');\r\n                    if(Object.keys(data.listOffAffiliate).length>0){\r\n                       // console.log('Есть запрещенные точки, проводим цикл');\r\n                        Object.keys(data.listOffAffiliate).map((datas,keys)=>\r\n                            {\r\n                                if(this.props.AffiliateDefault === keys){\r\n                                    //console.log('Точка самовывоза по умолчанию совпадает с запрещенной, ставим нуль ', keys);\r\n                                    this.props.setAffiliateDefault(0);\r\n                                }else{\r\n                                   // console.log('Точка по умолчанию не совпадает с запрещенной, ничего не делаем ',keys);\r\n                                }\r\n                            }\r\n                        );\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }else{\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    setAddressInfoUsers(e,type=1){\r\n        if(type===1){\r\n            var listAddressU = Object.keys(this.state.listAffiliate);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.state.listAffiliate[listAddressU[e]];\r\n            this.props.setStates({\r\n                addressOrderInfoUser: DataSetAddress.title\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    getAddressAffiliate(listAddress) {\r\n        this.props.getDeliveryDataPriceItogAffiliate();\r\n        this.setAddressInfoUsers(this.props.AffiliateDefault);\r\n        this.state.dataAffiliate = Object.keys(listAddress).map((dataAffiliate, keyId) =>\r\n            <GetOneAffiliateAddress\r\n                key={'Affiliate_'+keyId}\r\n                AddresInfo={listAddress[dataAffiliate]}\r\n                NumberAddress={keyId}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n            />\r\n        );\r\n       this.setState({addressAffiliateOk:true});\r\n        //this.state.addressOk:true;\r\n        //return ArrayPr;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            this.state.addressAffiliateOk === false ? <div><h3>Ареса самовывоза</h3> <ScreenSpinner/> <p></p></div> : this.state.dataAffiliate\r\n        );\r\n    };\r\n}\r\n\r\nexport default AffiliateList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Placeholder, Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar,Textarea, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon16Clear from '@vkontakte/icons/dist/16/clear';\r\nimport DiliveryAddress from \"./DiliveryAddress\";\r\nimport AffiliateList from \"./AffiliateList\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\n\r\n\r\nconst orangeBackground = {\r\n    backgroundImage: 'linear-gradient(135deg, #ffb73d, #ffa000)'\r\n};\r\n\r\nconst blueBackground = {\r\n    backgroundColor: '#ffffff'\r\n};\r\n\r\nclass Dilivery extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            UserCard:{phone:\"\",email:\"\"},\r\n            CheckSMSCode:false,\r\n            phoneValue:\"\",\r\n            codeValue:\"\",\r\n            resultVerificationCode:true,\r\n            tooltip: true,\r\n            snackbar: null,\r\n            showBTNNewAddress:false,\r\n            showFormNewAddress:false\r\n        };\r\n\r\n        this.openBase = this.openBase.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.openBase();\r\n\r\n        async function getPhoneUserVK(setState){\r\n            connect.sendPromise(\"VKWebAppGetPhoneNumber\",{\"sign\":\"T3in3QPDby8GsRNAfsEnEoYmVt7Se2dy0XUOhnCSlSw\"})\r\n                .then((data ) => {\r\n                    console.log(data,\"Данные пользователя\");\r\n                    setState({ UserCard:{phone: data.phone_number} });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ------  \",err);\r\n                });\r\n        }\r\n\r\n        console.log(\"Получаем телефон\");\r\n        {this.props.userSystemInfo.error === true && getPhoneUserVK(this.setState.bind(this));}\r\n    }\r\n\r\n\r\n    openBase (e = null) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Clear fill=\"#ff0000\" width={16} height={16} /></Avatar>}\r\n                >\r\n                    {e===null && <span>Проверочный код введен не верно, повторите попытку!</span>}\r\n                    {e!==null && e}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n\r\n    setVerificationPhone(){\r\n        console.log('Отправили запрос на верификацию');\r\n        axios('https://sushi-time31.ru/api/VerificationPhone&apiKey=03478f08258a5b0e7f4a1e83dae33da9',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_SMS\"){\r\n                        console.log('СМС отправлено, выводим поле для ввода кода');\r\n                        this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        console.log('Ошибка ',data);\r\n                        this.openBase('Номер телефона введен не верно!');\r\n                    }\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    checkVerificationCode(){\r\n        console.log('Отправили запрос на проверку кода',this.props.userInfo.id);\r\n        axios('https://sushi-time31.ru/api/VerificationCode&apiKey=03478f08258a5b0e7f4a1e83dae33da9',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                    VerificationCode: this.state.codeValue,\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_CODE_V\"){\r\n                        console.log('Данные сохранены, можно обновить приложение, пользователь авторизован');\r\n                        this.props.getUserSystemInfo(this.props.userInfo.id);\r\n                        //this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        console.log('Ошибка ',data);\r\n                        this.openBase();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    getValueInputPhone(event){\r\n        this.setState({UserCard:{phone: event.target.value}});\r\n        console.log(this.state.UserCard.phone);\r\n    }\r\n\r\n    getValueInputCode(event){\r\n        this.setState({codeValue: event.target.value});\r\n    }\r\n\r\n    getCommentsData(e){\r\n        this.props.setComment(e.target.value);\r\n    }\r\n\r\n    getDataCountPerson(types){\r\n        var values_count = this.props.countPerson;\r\n        switch(types){\r\n            case '-': values_count -= 1; break;\r\n            case '+': values_count += 1; break;\r\n            default: console.log('Нет параметра');\r\n        }\r\n\r\n        if(values_count<=0){ values_count = 1;}\r\n        if(values_count === ''){ values_count = 1;}\r\n        if(values_count >9){ values_count = 9;}\r\n\r\n        this.props.setStates({countPerson: values_count});\r\n    }\r\n\r\n    getCountPersonInput(){\r\n        return (\r\n            <Group title=\"Кол-во приборов\">\r\n                <Div style={{display: 'flex',justifyContent:'center'}}>\r\n                    <Button size=\"l\" stretched style={{marginRight: 10,maxWidth:50,background:\"#ff7300\"}} onClick={this.getDataCountPerson.bind(this,'-')}>-</Button>\r\n                    <Input type=\"number\" style={{maxWidth:80,textAlign:\"center\"}} value={this.props.countPerson} readOnly=\"readOnly\"/>\r\n                    <Button size=\"l\" stretched style={{marginLeft: 10,maxWidth:50,background:\"#ff7300\"}} onClick={this.getDataCountPerson.bind(this,'+')}>+</Button>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth(){\r\n        return(<Group>\r\n            <FormLayout>\r\n                {this.state.CheckSMSCode === true && <FormLayoutGroup top=\"Введите одноразовый код из СМС\">\r\n\r\n                    <Input type=\"number\" placeholder=\"1234\" onChange={this.getValueInputCode.bind(this)} />\r\n\r\n\r\n                    <Button level=\"commerce\" style={{\"background\":\"#ff7300\"}} onClick={()=> {console.log(this.state.codeValue); this.checkVerificationCode()}}>Подтвердить</Button> <Button level=\"secondary\" style={{\"float\":\"right\"}} onClick={() => {this.setState({CheckSMSCode:false})}}>Выслать повторно</Button>\r\n                </FormLayoutGroup>}\r\n\r\n                {this.state.CheckSMSCode === false && <FormLayoutGroup top=\"Подтвердите номер телефона\">\r\n                    <Input type=\"number\" placeholder=\"79876543210\" defaultValue={this.state.UserCard.phone} onChange={this.getValueInputPhone.bind(this)}/>\r\n                    <Button level=\"commerce\" style={{\"background\":\"#ff7300\"}} onClick={() => {this.setVerificationPhone(); console.log(this.state.UserCard.phone)}}>Получить код</Button> <Button onClick={() => {this.setState({CheckSMSCode:true})}} level=\"secondary\" style={{\"float\":\"right\"}}>Уже есть код</Button>\r\n                </FormLayoutGroup>}\r\n            </FormLayout>\r\n            {this.state.snackbar}\r\n        </Group>);\r\n    }\r\n\r\n    getButtonTypeDilivery(){\r\n        return(<Div style={{display: 'flex',\"padding-bottom\":\"0\"}}>\r\n            <Button size=\"l\" stretched style={{marginRight: 8}} level={this.props.checkedTypeDilivery === 1 ? \"secondary\" : \"commerce\"} onClick={()=>{this.props.setTypeDilivery(0)}}>Доставка</Button>\r\n            <Button size = \"l\" stretched level={this.props.checkedTypeDilivery === 0 ? \"secondary\" : \"commerce\"}  onClick={()=>{this.props.setTypeDilivery(1)}}>Самовывоз</Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getInfoUserAuth(){\r\n        //console.log('По дефолту адрес ',this.props.addressDefault)\r\n        return(\r\n            <div>\r\n                {this.getButtonTypeDilivery()}\r\n                {this.props.checkedTypeDilivery === 0 ?\r\n                    this.getListAddress()\r\n                    :\r\n                    this.getListAffiliate()\r\n                }\r\n                {this.getCountPersonInput()}\r\n                {this.getCommentsTextarea()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getNoneCartProduct(){\r\n        return(\r\n            <Placeholder\r\n                icon={<Icon56ErrorOutline />}\r\n                action={false}\r\n\r\n            >\r\n                <h2>В корзине отсутствуют товары</h2>\r\n                <p>Для совершения заказа, нужно положить хотябы 1 товар в корзину!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n\r\n    getListAddress(){\r\n        //console.log(this.state.showBTNNewAddress);\r\n        return(\r\n            <Group\r\n                className=\"GroupBlockListAddress\"\r\n                title=\"Адреса доставки\"\r\n                   description={this.state.showBTNNewAddress ?\r\n                       <Button\r\n                           size=\"l\"\r\n                           level=\"secondary\"\r\n                           style={{ background: '#FF7300',color:\"#FFFFFF\" }}\r\n                           // onClick={()=>{this.setState({showFormNewAddress:true})}}\r\n                           onClick={()=>{\r\n                               this.props.showModal('MODAL_NEWADDRESS');\r\n                           }}\r\n                       >Добавить адрес</Button>\r\n                       :\r\n                       \"\"}\r\n            >\r\n                <DiliveryAddress\r\n                    userInfo={this.props.userInfo}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    setShowBTNNewAddress={this.setState.bind(this)}\r\n                    showFormNewAddress={this.state.showFormNewAddress}\r\n                    setStates={this.props.setStates.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n                    showModals={this.props.showModal.bind(this)}\r\n                    hideModals={this.props.hideModals.bind(this)}\r\n                />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getListAffiliate(){\r\n        return (\r\n            <Group title=\"Адреса самовывоза\">\r\n            <AffiliateList\r\n                userInfo={this.props.userInfo}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n                setStates={this.props.setStates.bind(this)}\r\n            />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCommentsTextarea () {\r\n        return (\r\n            <Group title=\"Комментарий к заказу\">\r\n                <Div>\r\n                <Textarea value={this.props.commentary} onChange={this.getCommentsData.bind(this)} placeholder=\"Ваш комментарий\"/>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getOkListAddress(Param){\r\n        return(\r\n            Param <=0 ? this.getNoneCartProduct() : this.getInfoUserAuth()\r\n        )\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                {this.props.userSystemInfo.error === true &&\r\n                    this.getInfoUserNoneAuth()\r\n                }\r\n\r\n                {this.props.userSystemInfo.error === false &&\r\n                    this.getOkListAddress(this.props.ProductList.length)\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Dilivery;","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\n\r\nclass NewOrderServer extends React.Component{\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    setDataServer(){\r\n        this.props.setStates({statusNewOrder:'Запрос прошел'});\r\n        axios('https://sushi-time31.ru/api/setNewOrder&apiKey=03478f08258a5b0e7f4a1e83dae33da9',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    idUserVK: this.props.userInfo.id,\r\n                    dataOrder:this.props.DataOrderInfo\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    console.log('Ответ сервера ',data);\r\n                    if(data.status == \"OK\"){\r\n                        this.props.getPageOkOrderSet({newOrderStats:true});\r\n                        this.props.setOkNewOrderView();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button size=\"xl\" onClick={()=>{this.setDataServer()}} className=\"WeightFontBold\">Завершить заказ</Button>\r\n        );\r\n    };\r\n}\r\n\r\nexport default NewOrderServer;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport NewOrderServer from './NewOrderServer';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Info from '@vkontakte/icons/dist/24/info';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\n\r\nclass PaymentsPage extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            SalePoints:this.props.SalePoints,\r\n            value2:0,\r\n            statusNewOrder:'11'\r\n        }\r\n\r\n        this.props.getReloadInfODeliveryPay();\r\n    }\r\n\r\n    setPointsDefaultsSale(SalePoints){\r\n        SalePoints = SalePoints*1;\r\n        this.setState({SalePoints});\r\n        this.props.setStates({SalePoints:SalePoints});\r\n    }\r\n\r\n    options () {\r\n        let options = [];\r\n        for (let i = 0; i <= this.props.userSystemInfo.dataUser.point*1; i += 1) {\r\n            options.push(<option value={`${i}`} key={`${i}`}>{i}</option>)\r\n        }\r\n        return options;\r\n    }\r\n\r\n    getCountsTimeBonus(){\r\n        var points = this.props.userSystemInfo.dataUser.point*1;\r\n        if(points >0){\r\n            return(\r\n                <div>\r\n                        <Div>Доступно таймов для списания: <b>{points}</b></Div>\r\n                    <FormLayout>\r\n                        <Slider\r\n                            step={1}\r\n                            min={0}\r\n                            max={points}\r\n                            value={Number(this.state.SalePoints)}\r\n                            onChange={(SalePoints)=> this.setPointsDefaultsSale(SalePoints)}\r\n                            top=\"Списать в оплату\"\r\n                        />\r\n                        <Select onChange={e => this.setPointsDefaultsSale(e.target.value)} value={String(this.state.SalePoints)}>\r\n                            {this.options()}\r\n                        </Select>\r\n\r\n                    <div style={{display: 'none',justifyContent:'center'}}>\r\n                        <Button size=\"l\" stretched style={{marginRight: 10}}>Выбранное кол-во</Button>\r\n                        <Button size=\"l\" stretched style={{marginLeft: 10}}>Списать все</Button>\r\n                    </div>\r\n                    </FormLayout>\r\n                </div>);\r\n        }else{\r\n            return(<Cell className=\"IconColorOrange\" before={<Icon24Coins />}> К сожалению у Вас <b>0</b> таймов</Cell>);\r\n        }\r\n    }\r\n\r\n    getSumCartItogo(){\r\n        var sum = this.props.sumCart-this.props.SalePoints;\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog) {\r\n            sum = sum + (this.props.DataDeliveryInfo.priceDelivery * 1);\r\n        }\r\n        if(sum<0){sum = 0;}\r\n        return (sum);\r\n    }\r\n\r\n\r\n    checkMinSummaCart(){\r\n        if(this.props.DataDeliveryInfo.errorOrderFinal){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={false}\r\n\r\n                >\r\n                    <h2>Сумма минимального заказа {this.props.DataDeliveryInfo.minSumOrder} рублей</h2>\r\n                    <p>Мы не можем принять Ваш заказ, так как сумма Вашей покупки, меньше необходимой</p>\r\n                </Placeholder>\r\n            );\r\n        }else{\r\n            return(\r\n                this.checkTypeDiliveryInfo()\r\n            );\r\n        }\r\n    }\r\n\r\n    PriceInfoVisual(){\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog){\r\n            return(\r\n                <Cell before={<Icon24Info />}> Стоимость доставки: <b>{this.props.DataDeliveryInfo.priceDelivery} ₽</b></Cell>\r\n            );\r\n        }else{\r\n            return('');\r\n        }\r\n    }\r\n\r\n    getAddressDelivery(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAddressGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAddressGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAddressGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getAddressAffiliate(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAffiliateGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getDataOrder(){\r\n        var DataOrder = {};\r\n\r\n        var DataAddressDelivery = this.getAddressDelivery(this.props.DataDeliveryInfo.addressDefault);\r\n        var DataAddressAffiliate = this.getAddressAffiliate(this.props.DataDeliveryInfo.AffiliateDefault);\r\n\r\n        DataOrder.idUserVK = this.props.userInfo.id;\r\n        DataOrder.typeDelivery = this.props.DataDeliveryInfo.checkedTypeDilivery;\r\n        DataOrder.AddressDelivery = {\"Info\":DataAddressDelivery,\"idAddress\":DataAddressDelivery.id};\r\n        DataOrder.idAffiliatePickup = {\"Info\":DataAddressAffiliate,\"idAffiliate\":DataAddressAffiliate.id};\r\n        DataOrder.PointsSale = this.props.SalePoints;\r\n        DataOrder.DeliverySum = this.props.DataDeliveryInfo.DeliveryPriceItog ? this.props.DataDeliveryInfo.priceDelivery : 0;\r\n        DataOrder.Comments = this.props.DataDeliveryInfo.comments;\r\n        DataOrder.DopInfo = this.props.DataDeliveryInfo.commentary;\r\n        DataOrder.typePay = this.props.DataDeliveryInfo.typePay;\r\n        DataOrder.countPerson = this.props.DataDeliveryInfo.countPerson;\r\n        DataOrder.cart = this.props.DataDeliveryInfo.cart;\r\n        return DataOrder;\r\n    }\r\n\r\n\r\n    checkTypeDiliveryInfo(){\r\n        if(this.props.checkedTypeDilivery === 0 && this.props.addressDefault === null){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Выбрать адрес</Button>}\r\n\r\n                >\r\n                <h2>Вы не выбрали адрес доставки</h2>\r\n                    <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите адрес доставки, либо адрес точки самовывоза, откуда Вам будет удобно забрать заказ.</p>\r\n                </Placeholder>\r\n\r\n            );\r\n        }else{\r\n            return(<div>\r\n                    <Group title=\"Оплата бонусными баллами\">\r\n                        {this.getCountsTimeBonus()}\r\n\r\n                    </Group>\r\n                    <Group title=\"Итоговые данные по заказу\">\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Place />}\r\n                                description={<span>\r\n                                      <i>{this.props.DataDeliveryInfo.addressOrderInfoUser}</i>\r\n                                  </span>}\r\n                                size=\"l\">\r\n                                {this.props.checkedTypeDilivery === 0 ? \" Доставка курьером \" : \" Заберу заказ сам\"}\r\n                            </Cell>\r\n                            <Cell before={<Icon24Coins />}> Списано таймов: <b>{this.props.SalePoints}</b></Cell>\r\n                            {this.PriceInfoVisual()}\r\n                            <Cell before={<Icon24MoneyCircle />}> К оплате: <b className=\"OrangeColor\">{this.getSumCartItogo()} ₽</b></Cell>\r\n                        </List>\r\n                    </Group>\r\n                <Group title=\"Способ оплаты\">\r\n                    <List>\r\n                        <Cell>\r\n                    <Radio name=\"typePayments\" value=\"1\"\r\n                           description=\"Оплата наличными при получении\"\r\n                           defaultChecked={this.props.DataDeliveryInfo.typePay === 1 ? true : false}\r\n                           onClick={() => {this.props.setStates({typePay:1})}}>Наличные</Radio>\r\n                    <Radio name=\"typePayments\" value='2' description=\"Оплата банковской картой, по терминалу\"\r\n                           defaultChecked={this.props.DataDeliveryInfo.typePay === 2 ? true : false}\r\n                           onClick={() => {this.props.setStates({typePay:2})}}>Терминал</Radio>\r\n\r\n                        </Cell>\r\n                        <Cell>\r\n                        <Div>\r\n                            <NewOrderServer setStates={this.setState.bind(this)}\r\n                                            userInfo={this.props.userInfo}\r\n                                            DataOrderInfo={this.getDataOrder()}\r\n                                            getPageOkOrderSet={this.props.setStates.bind(this)}\r\n                                            setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                            />\r\n                        </Div>\r\n                        </Cell>\r\n                    </List>\r\n                    </Group>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.checkMinSummaCart()\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentsPage;","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\nimport Dilivery from \"./Dilivery\";\r\n\r\nimport './styleCart.css';\r\n\r\nimport ButtonCart from \"../catalog/ButtonInCart\";\r\nimport PaymentsPage from \"./PaymentsPage\";\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass GetCartHome extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n\r\n    ReloadDeliveryPay(){\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n       function go(e){\r\n         setActivePanel(e);\r\n         // setActivePanel(e.currentTarget.dataset.to);\r\n       };\r\n\r\n       function setActivePanel(e){\r\n           // useState(e);\r\n          // this.setState({activePanel: e});\r\n           this.ActivePanels(e);\r\n       }\r\n\r\n       function setPopout(e){\r\n           if(e === ''){\r\n               // useState(<ScreenSpinner size='large' />);\r\n               this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n           }else{\r\n               // useState(e);\r\n               this.setState({popout: e});\r\n           }\r\n       }\r\n\r\n       function  getCartVisual(id, Products,setCart){\r\n           //setPopout(null);\r\n            if(Products.length<=0){\r\n                return(<div style={{\"textAlign\":\"center\",\"padding\":\"5px 10px\",\"marginTop\":\"30px\"}}><h2>Корзина пуста</h2><p>К сожалению, для того чтобы что-то заказать, Вам нужно положить этот товар в корзину!</p></div>);\r\n            }else {\r\n\r\n                var results = Products.map((cartProduct,idProducts) =>\r\n                    <div className=\"ProductInCartBlock\" key={\"blockProducts_\"+idProducts}>\r\n                        <div\r\n\r\n                        className=\"blockProduct\"\r\n                        style={{\r\n                            \"width\": \" 100%\",\r\n                            \"margin\": \"5% 0\",\r\n                            \"padding\": \"0%\",\r\n                            \"float\":\"none\",\r\n                            marginBottom:10\r\n                        }}\r\n                        >\r\n                            <div className=\"imgPrewieProduct\">\r\n                                <img src={cartProduct.img}/>\r\n                            </div>\r\n                            <div className=\"titleProduct\">\r\n                                {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                                {cartProduct.title} <span className=\"redTextP\">{cartProduct.type_info}</span>\r\n                            </div>\r\n                            <div className=\"DescrProduct2\">\r\n                                {cartProduct.description}\r\n                            </div>\r\n                            <div style={{clear:\"both\"}}>\r\n                                {/*Товаров: {cartProduct.count} <br/>*/}\r\n                                <span className=\"priceProduct\">На сумму: <span className=\"WeightFontBold\">{cartProduct.count * cartProduct.price} ₽</span></span>\r\n                                <div className=\"priceProductBig\"style={{width:\"100%\",bottom:-8}}><ButtonCart CartProducts={Products} typeProduct2={cartProduct}\r\n                                                                             setCarts={setCart.bind(this)}/></div>\r\n                            </div>\r\n                        </div>\r\n                        <Separator style={{ margin: '20px 0' }} />\r\n                    </div>\r\n                );\r\n\r\n                return(<div className=\"CartBlockProducts\">{results}</div>);\r\n\r\n            }\r\n        }\r\n\r\n        function getDiliveryData(){\r\n            return (<div><h2>Доставка</h2></div>);\r\n        }\r\n\r\n\r\n\r\n        function getButtonNavigation(typeNav, action){\r\n\r\n           switch(typeNav){\r\n               case\"1\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button className=\"activeButons\" onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"2\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"3\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>; break;\r\n           }\r\n\r\n           return(\r\n               <HorizontalScroll>\r\n                   {ButtonBlock}\r\n               </HorizontalScroll>\r\n           );\r\n        }\r\n\r\n        function getOneStepCartNone(){\r\n           return(\r\n               <Panel id=\"home\">\r\n\r\n                   <Placeholder\r\n                       icon={<Icon56MarketOutline />}\r\n                       action={false}\r\n\r\n                   >\r\n                       <h2>Корзина пуста</h2>\r\n                       <p>Для совершения заказа, положите в нее хотя-бы 1 товар</p>\r\n                   </Placeholder>\r\n\r\n               </Panel>\r\n           );\r\n        }\r\n\r\n        function getOneStepCart(ProductList,setCart,sumCart,setState){\r\n           return (\r\n               <Panel id=\"home\" >\r\n               <PanelHeader theme=\"light\"> {getButtonNavigation('1', setState.bind(this))}</PanelHeader>\r\n               <Group title=\"Товары\">\r\n                <Div className=\"CartBlockProductsOneStep\">\r\n                {getCartVisual(\"homes\", ProductList, setCart.bind())}\r\n            <div style={{clear:\"both\"}}></div>\r\n            </Div>\r\n        </Group>\r\n        <Group>\r\n            <Div className=\"SumItogOneSTepCart\">Сумма итого: <span className=\"OrangeColor\">{sumCart} ₽</span></Div>\r\n        </Group>\r\n        <Div><Button size=\"xl\" onClick={()=> {setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button></Div>\r\n               </Panel>\r\n        );\r\n        }\r\n\r\n\r\n\r\n        return(\r\n            <View activePanel={this.state.activePanel} className={osName === IOS ? \"IOSCLASSCSS\" : \"AndroidCLASSCSS\"} popout={this.state.popout} header={this.props.ProductList.length<=0 ? false : true}>\r\n\r\n\r\n                    {this.props.ProductList.length<=0 ? getOneStepCartNone() :\r\n\r\n                        getOneStepCart(this.props.ProductList, this.props.setCart.bind(),this.props.sumCart, this.setState.bind(this))\r\n                    }\r\n\r\n                <Panel id=\"dilivery\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('2', this.setState.bind(this))}</PanelHeader>\r\n                    <Dilivery\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        getUserSystemInfo={this.props.getUserSystemInfo.bind()}\r\n\r\n                        addressDefault={this.props.addressDefault}\r\n                        setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n\r\n                        AffiliateDefault={this.props.AffiliateDefault}\r\n                        setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        setTypeDilivery={this.props.setTypeDilivery.bind(this)}\r\n\r\n                        commentary={this.props.commentary}\r\n                        setComment={this.props.setComment.bind(this)}\r\n\r\n                        countPerson={this.props.countPerson}\r\n\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                        getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                        /*Для вычисления суммы бесплатной доставки*/\r\n                        sumCart={this.props.sumCart}\r\n\r\n                        setPopout={this.setState.bind(this)}\r\n                        ProductList={this.props.ProductList}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n                        hideModals={this.props.hideModals.bind(this)}\r\n\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" stretched level=\"secondary\"  style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"home\"});}}>В корзину</Button>\r\n                        <Button size=\"l\" stretched className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"order\"});}}>К оплате</Button>\r\n                    </Div>\r\n                </Panel>\r\n                <Panel id=\"order\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('3', this.setState.bind(this))}</PanelHeader>\r\n                    <PaymentsPage\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        SalePoints={this.props.SalePoints}\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        sumCart={this.props.sumCart}\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        addressDefault={this.props.addressDefault}\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                        getReloadInfODeliveryPay={this.props.checkedTypeDilivery ? this.props.getDeliveryDataPriceItogAffiliate.bind(this) : this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n\r\n                        action={this.setState.bind(this)}\r\n\r\n                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" level=\"secondary\" stretched style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button>\r\n\r\n                    </Div>\r\n                </Panel>\r\n            </View>\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default GetCartHome;","import React, {useState} from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport {ModalRoot, ModalPage, ModalPageHeader, HeaderButton, Placeholder, Button, Gallery, Switch} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Icon56NotificationOutline from '@vkontakte/icons/dist/56/notification_outline';\r\nimport Icon56CheckCircleOutline from '@vkontakte/icons/dist/56/check_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport ButtonCart from  \"./panels/catalog/ButtonInCart\";\r\n\r\n\r\nimport {Div, Epic, Tabbar, TabbarItem, Panel, PanelHeader} from '@vkontakte/vkui';\r\n//import Icon28Messages from '@vkontakte/icons/dist/28/messages';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\r\nimport Icon28User from '@vkontakte/icons/dist/28/user';\r\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport AppHome from \"./panels/Profile\";\r\nimport CatalogProduct from \"./panels/catalog/CatalogProduct\";\r\nimport './panels/catalog/product.css';\r\n\r\nimport GetCartHome from \"./panels/Cart/CartHome\";\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ParamStart:false,\r\n            products:[],\r\n            loadingCatalog:false,\r\n            activeStory: 'catalog',\r\n            loadingPage: true,\r\n            user:[],\r\n            userSystemInfo:{error:true,dataUser:\"\"},\r\n            cart:[],\r\n            countCartProduct:'',\r\n            addressDefault:null,\r\n            AffiliateDefault:0,\r\n            checkedTypeDilivery:0,\r\n            commentary:\"\",\r\n            typePay:1,\r\n            countPerson:1,\r\n            SalePoints:0,\r\n            sumCart:0,\r\n            activeModal:null,\r\n            formNewAddressData:'',\r\n            formEditAddressData:'',\r\n\r\n            listAddressGlobal:[],\r\n            listAffiliateGlobal:[],\r\n\r\n            priceDelivery:0,\r\n            minSumOrder:300,\r\n            minSumFreeDelivery:0,\r\n\r\n            //Если сумма корзины меньше необходимой для заказа\r\n            errorOrderFinal:false,\r\n            //Если сумма корзины меньше бесплатной доставки\r\n            DeliveryPriceItog:false,\r\n\r\n            //Доставка на адрес возможна, сли false, то не возможна\r\n            DeliveryAddressOKCity:true,\r\n\r\n            //Адрес, для отображения в последнем блоке корзины\r\n            addressOrderInfoUser:'',\r\n            newOrderStats:false,\r\n\r\n            StatusLoadSlide:false,\r\n            slideHeaderArray:[],\r\n            slideIndex: 0,\r\n\r\n            StatusNotification:false\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    parseQueryString = (string) => {\r\n        return string.slice(1).split('&')\r\n            .map((queryParam) => {\r\n                let kvp = queryParam.split('=');\r\n                return {key: kvp[0], value: kvp[1]}\r\n            })\r\n            .reduce((query, kvp) => {\r\n                query[kvp.key] = kvp.value;\r\n                return query\r\n            }, {})\r\n    };\r\n\r\n\r\n    setOkNewOrderView(){\r\n        console.log('Показать окно');\r\n        if(this.state.newOrderStats) {\r\n            this.getCartDB(this.state.user.id);\r\n            this.setState({activeStory: 'newOrderInfo'});\r\n        }else{\r\n            console.log('Ну не совсем');\r\n        }\r\n    }\r\n\r\n\r\n    getSuccesOrderPage(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56CheckCircleOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.setState({activeStory: 'catalog'});}}>В каталог</Button>}\r\n\r\n            >\r\n                <h2>Ваш заказ принят</h2>\r\n                <p>Мы свяжемся с Вами в ближайшее время, для уточнения деталей.</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    getDeliveryDataPriceItog(){\r\n        if(this.state.minSumOrder < this.state.sumCart){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.minSumFreeDelivery <= this.state.sumCart){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        console.log('Выполнили перерасчет ',this.state.minSumFreeDelivery+' < '+this.state.sumCart);\r\n    }\r\n\r\n\r\n    getDeliveryDataPriceItogAffiliate(){\r\n        this.setState({\r\n            priceDelivery: 0,\r\n            minSumOrder: 300,\r\n            minSumFreeDelivery: 0\r\n        });\r\n\r\n        if(this.state.sumCart > 300){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.sumCart > 0){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        console.log('Выполнили перерасчет на самовывоз');\r\n    }\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n\r\n    setcountCartProduct(e){\r\n        if(e == 0){e = '';}\r\n        this.setState({\r\n            countCartProduct:e\r\n        });\r\n\r\n        var sumCartItog = 0;\r\n        this.state.cart.map((CPr)=>{\r\n                sumCartItog +=CPr.price*CPr.count\r\n            }\r\n        );\r\n        this.setState({sumCart:sumCartItog});\r\n\r\n        document.cookie = \"cart = \"+this.state.cart;\r\n    }\r\n\r\n    setComment(e){\r\n        this.setState({\r\n            commentary:e\r\n        });\r\n    }\r\n\r\n    setUser(e){\r\n        this.setState({user:e});\r\n    }\r\n\r\n    setUserSystem(e){\r\n        this.setState({userSystemInfo:{error:false,dataUser:e}});\r\n    }\r\n\r\n    getTypeSlideGet(){\r\n        switch(this.state.ParamStart.vk_platform){\r\n            case\"desktop_web\": return \"desktop\";break;\r\n            default: return \"mobile\";\r\n        }\r\n    }\r\n\r\n\r\n    getSlideHeaderArray(){\r\n        if(this.state.ParamStart === false){\r\n\r\n        }else {\r\n            //console.log(this.state.ParamStart);\r\n            axios('https://sushi-time31.ru/api/getSlideHeader&apiKey=03478f08258a5b0e7f4a1e83dae33da9',\r\n                {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n                    data: {\r\n                        typeSlide: this.getTypeSlideGet(),\r\n                    },\r\n                    responseType: 'text'\r\n                })\r\n                .then(({data}) => {\r\n                    if (\"error\" in data) {\r\n                        this.setSlideArray([], false);\r\n                        console.log(data.error, '|', data.errorInfo);\r\n                    } else {\r\n                        //console.log(data.listSlide);\r\n                        this.setSlideArray(data.listSlide, true);\r\n                    }\r\n                })\r\n                .catch(({err}) => {\r\n                    console.log(\"ERROR: ---Получение слайдов---  \", err);\r\n                });\r\n        }\r\n    }\r\n\r\n    setSlideArray(ArraySlide,status){\r\n        if(status === true) {\r\n            this.setState({slideHeaderArray: ArraySlide});\r\n            if (this.state.StatusLoadSlide === false) {\r\n                this.setState({StatusLoadSlide: true});\r\n            }\r\n        }else{\r\n            if (this.state.StatusLoadSlide === true) {\r\n                this.setState({StatusLoadSlide: false});\r\n            }\r\n        }\r\n    }\r\n\r\n    getSliderGalery(){\r\n        var ArraySlides = Object.keys(this.state.slideHeaderArray);\r\n        var Bullets = \"dark\";\r\n        var AutoPlays = \"7000\";\r\n        var countNumber = ArraySlides.length;\r\n        if(ArraySlides.length <= 1){Bullets = false;AutoPlays = false;}\r\n        if(this.state.StatusLoadSlide === true & ArraySlides.length > 0) {\r\n            var SliderVisual = ArraySlides.map((datas,keys) => {\r\n                //console.log(datas);\r\n                return (<img key={keys} src={this.state.slideHeaderArray[datas].img} style={{maxWidth:\"100%\"}}/>);\r\n            });\r\n\r\n            return (\r\n                <Gallery\r\n                    autoplay={AutoPlays}\r\n                    //slideIndex={this.state.slideIndex}\r\n                    //onEnd={()=>{this.setState({\"slideIndex\":0})}}\r\n                    slideWidth=\"100%\"\r\n                    style={{width:\"100%\",height: \"auto\"}}\r\n                    bullets={Bullets}\r\n                >\r\n                    {SliderVisual}\r\n                </Gallery>\r\n            );\r\n        }else{\r\n            return(\r\n                \"\"\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    reloadSlideHeaderSetTime(){\r\n        this.getSlideHeaderArray();\r\n        setTimeout(this.reloadSlideHeaderSetTime.bind(this),5000);\r\n    }\r\n\r\n\r\n\r\n\r\n    ///////Уведомления PUSH\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n            });\r\n    }\r\n\r\n    setStatusNotification(e){\r\n        this.setState({StatusNotification:e});\r\n    }\r\n\r\n\r\n    getNotificationPage(){\r\n        if(this.state.StatusNotification === true){\r\n            return(\r\n                <Placeholder stretched\r\n                             icon={<Icon56NotificationOutline />}\r\n                             action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.setState({activeStory: 'catalog'});}}>В каталог</Button>}\r\n\r\n                >\r\n                    <h2>Уведомлений нет</h2>\r\n                    <p>Как только для Вас появятся уведомления, они отобразятся здесь!</p>\r\n                </Placeholder>\r\n            );\r\n        }else{\r\n            return(\r\n                <Placeholder stretched\r\n                             icon={<Icon56NotificationOutline />}\r\n                             action={<Button size=\"l\" level=\"tertiary\"\r\n                                             onClick={()=>{this.PushClick()}}\r\n                             >Включить уведомления</Button>}\r\n                             style={{textAlign:\"center\"}}\r\n                >\r\n                    Для просмотра уведомлений, их нужно включить\r\n                </Placeholder>\r\n            );\r\n        }\r\n    }\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n            })\r\n            .catch((err)=> {\r\n                    this.setState({StatusNotification: false});\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    ///////\r\n\r\n    componentDidMount() {\r\n        this.getStatusNotificate();\r\n\r\n        async function fetchData(setUser,getCartDB,getUserSystemInfo) {\r\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            setUser(user);\r\n            //setPopout(null);\r\n            //setModal(MODAL_CARD_MONEY_SEND);\r\n            //console.log('...','Получили данные пользователя',user.id);\r\n            getCartDB(user.id);\r\n            getUserSystemInfo(user.id);\r\n        }\r\n\r\n        axios({\r\n            method:'get',\r\n            // url:'https://sushi-time31.ru/test.json',\r\n            // url:'https://sushi-time31.ru/test2.json',\r\n            url:'https://sushi-time31.ru/api/Catalog&apiKey=03478f08258a5b0e7f4a1e83dae33da9&idCategoryKeyArray=true&idProductKeyArray=true',\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            console.log(\"Пришли данные \",data.list);\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                products: data.list,\r\n                loadingCatalog:true\r\n            });\r\n        })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n\r\n        fetchData(this.setUser.bind(this),this.getCartDB.bind(this),this.getUserSystemInfo.bind(this));\r\n        this.reloadSlideHeaderSetTime();\r\n            setTimeout(function() {this.getIntervalCart(1)}.bind(this), 7000);\r\n    }\r\n\r\n    getIntervalCart(i){\r\n       // console.log('Запустили получение корзины '+i);\r\n        i++;\r\n        this.getCartDB(this.state.user.id);\r\n        setTimeout(function() {this.getIntervalCart(i)}.bind(this), 3000);\r\n    }\r\n\r\n    StatusReloadBasketData(dataOld,dataNew){\r\n        if(dataOld === dataNew){return false;}else{return true;}\r\n    }\r\n\r\n\r\n    ReloadBasketDataFN(ListProduct){\r\n       // console.log('Обновили корзину');\r\n        this.setState({\r\n            // products: data.list[0].ProductList\r\n            cart: ListProduct,\r\n            loadingPage: false\r\n        });\r\n        this.setCountCartVisal();\r\n    }\r\n\r\n    getCartDB(id_user){\r\n        if(this.state.loading === false) {\r\n            this.setState({loading: true});\r\n        }\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getBasketVK&apiKey=03478f08258a5b0e7f4a1e83dae33da9&updateBasket=1minute&id_user_vk='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n                data.listProduct = [];\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }\r\n\r\n            if(data.listProduct === null){\r\n                data.listProduct = [];\r\n            }\r\n\r\n            var ListOld = JSON.stringify(this.state.cart);\r\n            var ListNew = JSON.stringify(data.listProduct);\r\n\r\n            var statusBasket = this.StatusReloadBasketData(ListOld,ListNew);\r\n\r\n            if(statusBasket === true) {\r\n                this.ReloadBasketDataFN(data.listProduct);\r\n            }\r\n\r\n\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n    }\r\n\r\n\r\n    getUserSystemInfo(id_user){\r\n        this.setState({loading: true});\r\n\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/Users&apiKey=03478f08258a5b0e7f4a1e83dae33da9&updateUserSystemInfo=one&idUserVK='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }else{\r\n                this.setUserSystem(data.list[0]);\r\n            }\r\n\r\n            this.setState({\r\n                loadingPage: false\r\n            });\r\n            console.log(\"userSystemInfo\",this.state.userSystemInfo);\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n        //setUserSystem(e);\r\n    }\r\n\r\n\r\n    setCartServer(id_user,JsonBasket){\r\n        //console.log(JsonBasket,'___А_А_АА_А_А_А_');\r\n        axios('https://sushi-time31.ru/api/setBasketVK&apiKey=03478f08258a5b0e7f4a1e83dae33da9&id_user_vk='+id_user,\r\n            {\r\n            method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            data: {\r\n                basketJson: JsonBasket,\r\n            },\r\n            responseType:'text'\r\n        })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Отправка корзины---  \",err);\r\n            });\r\n    }\r\n\r\n    setCart(e,tE = '+'){\r\n        //console.log('Товар в корзине, вот этот ',e);\r\n        //this.setState({cart:e});\r\n        const counts = this.state.cart.length;\r\n        if(tE == '+'){\r\n            //Добавляем товар\r\n            if(counts<=0) {\r\n               // console.log('Добавляем Новый товар в корзину');\r\n                this.state.cart.push(e);\r\n                const countPlus = counts;\r\n                this.state.cart[countPlus].count = 1;\r\n                this.setcountCartProduct(1);\r\n            }else{\r\n               // console.log('В принципи верно, но цикл не тот', counts);\r\n                var noAdd = true;\r\n\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Добавляем еще такой же товар');\r\n                        this.state.cart[key].count = this.state.cart[key].count + 1;\r\n                        setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                        noAdd =false;\r\n                    }\r\n                    }\r\n                );\r\n\r\n                if(noAdd === true){\r\n                   // console.log('Добавляем новый товар, так как тагого же нет');\r\n                    this.state.cart.push(e);\r\n                    const countPlus = counts;\r\n                    this.state.cart[countPlus].count = 1;\r\n                    setcountCartProductVar++;\r\n                }\r\n\r\n            }\r\n        }else{\r\n            //Удаляем товар\r\n            if(counts<=0) {\r\n\r\n            }else{\r\n                var noAdd = true;\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Удаляем товар 1 товар с этим id и типом');\r\n                        if( this.state.cart[key].count<=1){\r\n                            // delete this.state.cart[key];\r\n                            this.state.cart.splice(key, 1);\r\n                        }else{\r\n                            this.state.cart[key].count = this.state.cart[key].count - 1;\r\n                            setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                            noAdd =false;\r\n                        }\r\n                    }\r\n                    }\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n        {setcountCartProductVar = setcountCartProductVar+CPr.count}\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n        var setDataServer = btoa(encodeURI(JSON.stringify(this.state.cart)));\r\n       // console.log('Вот это отправляем на сервер',setDataServer);\r\n        this.setCartServer(this.state.user.id,setDataServer);\r\n    }\r\n\r\n\r\n    setCountCartVisal(){\r\n       // this.getCartDB(this.state.user.id);\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n            {setcountCartProductVar = setcountCartProductVar+CPr.count;\r\n            }\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n    }\r\n\r\n    setTypeDilivery(e){\r\n        this.setState({checkedTypeDilivery:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setAddressDefault(e){\r\n        if(e === 'del'){\r\n            e = 0;\r\n        }\r\n        this.setState({addressDefault:e});\r\n        console.log('По дефолту адрес теперь ',e);\r\n        //Обновляем условия доставки на 3  шаг корзины\r\n    }\r\n\r\n    setAffiliateDefault(e){\r\n        this.setState({AffiliateDefault:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setModal(e){\r\n        this.setState({activeModal:e});\r\n    }\r\n\r\n    render () {\r\n        const queryParams = this.parseQueryString(window.location.search);\r\n        const hashParams = this.parseQueryString(window.location.hash);\r\n\r\n        if(this.state.ParamStart === false) {\r\n            console.log(\"State = false, но \", queryParams);\r\n        }\r\n\r\n        if(this.state.ParamStart === false) {\r\n            this.state.ParamStart = queryParams;\r\n        }\r\n\r\n        // this.setState({\"ParamStart\":this.parseQueryString(window.location.search)});\r\n        // console.log('Параметры запуска ',this.state.ParamStart,' А URL такой ',window.location.search);\r\n\r\n        const modal = (\r\n            <ModalRoot activeModal={this.state.activeModal}>\r\n                <ModalPage\r\n                    id=\"MODAL_NEWADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Добавить адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Добавление адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formNewAddressData}\r\n                </ModalPage>\r\n\r\n                <ModalPage\r\n                    id=\"MODAL_EditADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Редактировать адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Редактирование адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formEditAddressData}\r\n                </ModalPage>\r\n            </ModalRoot>\r\n        );\r\n\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'catalog'}\r\n                        data-story=\"catalog\"\r\n                        text=\"Каталог\"\r\n                    ><Icon24Note /></TabbarItem>\r\n                    <TabbarItem style={{\"display\":\"none\"}}\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'discover'}\r\n                        data-story=\"discover\"\r\n                        text=\"Поиск\"\r\n                    ><Icon28Search /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'cart'}\r\n                        data-story=\"cart\"\r\n                        label={this.state.countCartProduct}\r\n                        text=\"Корзина\"\r\n                    ><Icon28MarketOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'notifications'}\r\n                        data-story=\"notifications\"\r\n                        text=\"Уведомления\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'user'}\r\n                        data-story=\"user\"\r\n                        text=\"Профиль\"\r\n                    ><Icon28User /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"newOrderInfo\" activePanel=\"newOrders\" header={false}>\r\n                    <Panel id=\"newOrders\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {this.getSuccesOrderPage()}\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"catalog\" activePanel=\"catalog\" header={false}>\r\n                    <Panel id=\"catalog\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {\r\n                            this.state.loadingCatalog\r\n                                ?\r\n                                <CatalogProduct setCart={this.setCart.bind(this)} CartProducts={this.state.cart} ProductsLists={this.state.products} sliderHeader={this.getSliderGalery.bind(this)} queryParams={queryParams}/>\r\n                                :\r\n                                <ScreenSpinner />\r\n                        }\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"discover\" activePanel=\"discover\">\r\n                    <Panel id=\"discover\">\r\n                        <PanelHeader>Поиск товаров</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"cart\" activePanel=\"cart\" modal={modal}>\r\n                    <Panel id=\"cart\" style={{\"paddingBottom\":\"40px\"}}>\r\n                        <PanelHeader theme=\"light\"\r\n                                     noShadow={false}\r\n                        >\r\n                            Корзина\r\n                        </PanelHeader>\r\n                        <div key=\"Cart_List\" style={{\"paddingBottom\":\"40px\"}}>\r\n                            {/*this.getCartVisual(this.state.cart,this.setCart.bind(this))*/}\r\n                            <GetCartHome\r\n                                ProductList={this.state.cart}\r\n                                setCart={this.setCart.bind(this)}\r\n                                userSystemInfo={this.state.userSystemInfo}\r\n                                userInfo={this.state.user}\r\n                                getUserSystemInfo={this.getUserSystemInfo.bind(this)}\r\n\r\n                                addressDefault={this.state.addressDefault}\r\n                                setAddressDefault={this.setAddressDefault.bind(this)}\r\n\r\n                                AffiliateDefault={this.state.AffiliateDefault}\r\n                                setAffiliateDefault={this.setAffiliateDefault.bind(this)}\r\n\r\n                                checkedTypeDilivery={this.state.checkedTypeDilivery}\r\n                                setTypeDilivery={this.setTypeDilivery.bind(this)}\r\n\r\n                                commentary={this.state.commentary}\r\n                                setComment={this.setComment.bind(this)}\r\n\r\n                                countPerson={this.state.countPerson}\r\n\r\n                                SalePoints={this.state.SalePoints}\r\n\r\n                                setStates={this.setState.bind(this)}\r\n                                setDeliveryDataItogs={this.getDeliveryDataPriceItog.bind(this)}\r\n                                getDeliveryDataPriceItogAffiliate={this.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                                sumCart={this.state.sumCart}\r\n\r\n                                showModal={this.setModal.bind(this)}\r\n                                hideModals={this.setModal.bind(this,null)}\r\n\r\n                                DataDeliveryInfoPay={\r\n                                    {\r\n                                        priceDelivery:this.state.priceDelivery,\r\n                                        minSumOrder:this.state.minSumOrder,\r\n                                        minSumFreeDelivery:this.state.minSumFreeDelivery,\r\n\r\n                                        //Если сумма корзины меньше необходимой для заказа\r\n                                        errorOrderFinal:this.state.errorOrderFinal,\r\n                                        //Если сумма корзины меньше бесплатной доставки\r\n                                        DeliveryPriceItog:this.state.DeliveryPriceItog,\r\n\r\n                                        //Доставка на адрес возможна, сли false, то не возможна\r\n                                        DeliveryAddressOKCity:this.state.DeliveryAddressOKCity,\r\n\r\n                                        addressOrderInfoUser:this.state.addressOrderInfoUser,\r\n\r\n                                        checkedTypeDilivery:this.state.checkedTypeDilivery,\r\n                                        AffiliateDefault:this.state.AffiliateDefault,\r\n                                        addressDefault:this.state.addressDefault,\r\n\r\n                                        listAddressGlobal:this.state.listAddressGlobal,\r\n                                        listAffiliateGlobal: this.state.listAffiliateGlobal,\r\n\r\n                                        comments:this.state.commentary,\r\n                                        typePay:this.state.typePay,\r\n                                        countPerson:this.state.countPerson,\r\n                                        cart:this.state.cart\r\n\r\n                                    }\r\n                                }\r\n\r\n                                setOkNewOrderView={this.setOkNewOrderView.bind(this)}\r\n\r\n                            />\r\n\r\n                        <div style={{\"clear\":\"both\"}}></div>\r\n                        </div>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Уведомления</PanelHeader>\r\n                        {this.getNotificationPage()}\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"user\" activePanel=\"user\">\r\n                    <Panel id=\"user\">\r\n                        <PanelHeader>Профиль</PanelHeader>\r\n                        <AppHome id=\"home\" go=\"persik\" dataUsers={this.state.userSystemInfo} setStatusNotification={this.setStatusNotification.bind(this)}/>\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './StartPageVKapp';\n// import App from './App2';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}