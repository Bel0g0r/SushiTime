{"version":3,"sources":["StartPageVKapp.js","panels/Cart/Dilivery.js","panels/Cart/DiliveryAddress.js","panels/Cart/GetOneAddress.js","panels/Cart/GetOneAddressOff.js","panels/Cart/AffiliateList.js","panels/Cart/GetOneAffiliateAddress.js","panels/preorder/index.js","panels/noPreorder/index.js","panels/Cart/NewOrderServer.js","panels/ProfileUser/UserInfo.js","panels/Persik.js","panels/Nopersik.js","panels/Profile.js","panels/catalog/ProductList.js","panels/catalog/CategoryList.js","panels/catalog/CatalogProduct.js","panels/Cart/PaymentsPage.js","panels/Cart/CartHome.js","index.js","panels/global/index.js","img/persik.png","panels/Cart/FormNewAddress.js","panels/catalog/ButtonInCart.js","panels/catalog/OneProduct.js"],"names":["require","App","props","parseQueryString","string","slice","split","map","queryParam","kvp","key","value","reduce","query","state","AudioInfo","ReloadBasket","Audio","ParamStart","products","loadingCatalog","activeStory","loadingPage","user","userSystemInfo","error","dataUser","cart","countCartProduct","dopPresets","imgListPresets","addressDefault","AffiliateDefault","checkedTypeDilivery","commentary","typePay","countPerson","SalePoints","sumCart","activeModal","formNewAddressData","formEditAddressData","listAddressGlobal","listAffiliateGlobal","priceDelivery","minSumOrder","minSumFreeDelivery","errorOrderFinal","DeliveryPriceItog","DeliveryAddressOKCity","addressOrderInfoUser","newOrderStats","StatusLoadSlide","slideHeaderArray","slideIndex","StatusNotification","CityListBind","typeOrderDate","SelectDatePreorder","SelectTimePreorder","onStoryChange","bind","axios","method","url","global","ApiKey","responseType","then","data","ListCitySelect","list","catch","err","console","log","this","getCartDB","id","setState","getUserSystemInfo","stretched","icon","action","size","level","onClick","e","currentTarget","dataset","story","sumCartItog","CPr","price","count","document","cookie","vk_platform","headers","typeSlide","getTypeSlideGet","setSlideArray","errorInfo","listSlide","ArraySlide","status","ArraySlides","Object","keys","Bullets","AutoPlays","length","SliderVisual","datas","src","img","style","maxWidth","autoplay","slideWidth","width","height","bullets","getSlideHeaderArray","setTimeout","reloadSlideHeaderSetTime","connect","sendPromise","response","is_allowed","PushClick","textAlign","OffPushNotyfication","OnPushNotyfication","getStatusNotificate","getCityUser","setUser","a","async","fetchData","setInterval","getIntervalCart","i","dataOld","dataNew","ListProduct","setCountCartVisal","ListDopPresets","listPresetProduct","imgPresetProduct","id_user","loading","listProduct","ListOld","JSON","stringify","ListNew","ListPresetsOld","ListPresetsNew","DopPresetsData","statusBasket","StatusReloadBasketData","statusPresets","ReloadBasketDataFN","PlayInfoAudio","ReloadBasketDataDopPresets","audio","stop","play","setUserSystem","JsonBasket","basketJson","tE","counts","push","countPlus","setcountCartProduct","noAdd","cartProducts","id_Product","type_product","setcountCartProductVar","splice","setDataServer","btoa","encodeURI","setCartServer","queryParams","window","location","search","hash","modal","onClose","setModal","header","right","title","dynamicContentHeight","caption","actions","type","tabbar","selected","data-story","text","label","activePanel","getSuccesOrderPage","setCart","CartProducts","ProductsLists","sliderHeader","getSliderGalery","theme","noShadow","ProductList","PresetsDopProductList","userInfo","setAddressDefault","setAffiliateDefault","setTypeDilivery","setComment","setStates","setDeliveryDataItogs","getDeliveryDataPriceItog","getDeliveryDataPriceItogAffiliate","showModal","hideModals","DataDeliveryInfoPay","setTypeOrderDate","comments","setOkNewOrderView","getNotificationPage","go","dataUsers","setStatusNotification","React","Component","blueBackground","backgroundColor","Dilivery","UserCard","phone","email","CheckSMSCode","phoneValue","codeValue","resultVerificationCode","tooltip","snackbar","showBTNNewAddress","showFormNewAddress","openBase","phone_number","layout","before","fill","phoneVerification","VerificationCode","idUserVK","event","target","types","values_count","display","justifyContent","marginRight","background","getDataCountPerson","readOnly","marginLeft","top","placeholder","onChange","getValueInputCode","checkVerificationCode","defaultValue","getValueInputPhone","setVerificationPhone","DataDeliveryInfo","getButtonTypeOrder","typeDelivery","DataInfos","getButtonTypeDilivery","getListAddress","getListAffiliate","getPreorderBlock","getCountPersonInput","getCommentsTextarea","className","description","color","setPopout","setShowBTNNewAddress","showModals","getCommentsData","Param","getNoneCartProduct","getInfoUserAuth","getInfoUserNoneAuth","getOkListAddress","DiliveryAddress","listAddress","listAddressOff","addressOk","dataAddress","getAddressUserSystem","AddressEdit","delUpdate","id_UserVK","getFormNewAddress","ListAddressNoDelivery","listAddressGlobalOff","getAddressUsers","listAddressU","DataSetAddress","city","street","home","n","diliveryData","priceDilivery","min_sum_order","min_sum_free_dilivery","setDataDiliveryPrice","setAddressInfoUsers","keyId","setDataDeliveryPrice","setAddressEdit","AddresInfo","NumberAddress","dataAddressOff","dataAddress2","keyId2","getListAddressVisual","GetOneAddress","AddressN","closePopout","comment","popout","addressInfo","result","result_add","autoclose","deletedAddress","float","podezd","etaj","kvartira","openDefault","name","getAddressFull","defaultChecked","getAddressTitle","defaultCheckedR","GetOneAddressOff","disabled","AffiliateList","listAffiliate","addressAffiliateOk","dataAffiliate","id_City","listOffAffiliate","getAddressAffiliate","GetOneAffiliateAddress","dangerouslySetInnerHTML","__html","operating_mode","Preorder","loadBlockPreorder","listDatePreorder","onChangeS","getDateList","ListDate","getSelectTime","ListTimes","timeList","ListTime","times","false","getSelectDate","getBlockPreorder","NoPreorder","loadBlockOrder","paddingBottom","getBlocknoPreorder","NewOrderServer","statusNewOrder","dataOrder","DataOrderInfo","getPageOkOrderSet","UserInfo","margin","them","fetchedUser","photo_200","first_name","last_name","point","asideContent","checked","getPanelProfil","platform","ProfileUserPage","useState","setActivePanel","useEffect","to","setActivePanels","nameCategory","productsLists","compare","b","ArrayProducts","Pr","ClickProductF","setProductModal","getButtonInCartProduct","ReverceStatus","CatalogLists","reduceRight","arr","last","index","coll","concat","ReverceCatalog","sort","comparePrice","oneProduct","OneProduct","product","ClickProduct","GetSets","ArrayPr","names","ProductArray","GetSushi","alt","GetRoli","GetNoneCat","nameCategorys","idCategory","idCategorys","onClickProduct","escapeHtmlDecode","replace","CategoryList","hndlClick","aP","productModal","setActiveCategory","ActiveCategory","panelCategory","typeProduct","ButOk","id_CartPr","getCountButton","getInCarts","osname","href","classNameDivCategory","OPT","Loadings","imgCategory","ClickCategory","Title","left","IOS","addon","ShowCategory","id_Category","ClickBack","ProductInfo","type_info","CatalogProduct","PaymentsPage","value2","getReloadInfODeliveryPay","options","points","step","min","max","Number","setPointsDefaultsSale","String","sum","checkTypeDiliveryInfo","checkPreorderActive","DataOrder","DataAddressDelivery","getAddressDelivery","DataAddressAffiliate","AddressDelivery","idAffiliatePickup","PointsSale","DeliverySum","Comments","DopInfo","dateObj","Date","getCountsTimeBonus","getDate","getMountsDate","getMonth","getUTCFullYear","PriceInfoVisual","getSumCartItogo","getDataOrder","returnPlaceholderPreorder","checkPreorderType","checkMinSummaCart","osName","GetCartHome","ListPresets","number","typeCount","overflow","paddingRight","getButtonNavigation","typeNav","ButtonBlock","data-to","GetPresetsVisual","Products","results","cartProduct","idProducts","marginBottom","clear","bottom","typeProduct2","setCarts","getCartVisual","getOneStepCart","send","ReactDOM","render","getElementById","module","exports","FormNewAddress","entrance","flat","addressItems","statusChech","minValue","valPls","idCity","ListCityOrigin","listCity","ListCitys","ListOption","getCitySelect","saveNewAddress","saveEditAddress","getEditForm","getNulledForm","ButtonInCart","number_format","decimals","dec_point","separator","isFinite","prec","Math","abs","sep","dec","s","k","pow","round","toFixed","toFixedFix","Array","join","productList","ProductCat","idTypeProduct","ArrayMod","ListMod","VisualList","mod_img","getModyficateBlock","modyficate","Product_Weight","weight","Product_WeightType","weight_type","getProductDiv"],"mappings":"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","file":"static/js/main.ee37cbd9.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport {ModalRoot, ModalPage, ModalPageHeader, HeaderButton, Placeholder, Button, Gallery, Switch} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Icon56NotificationOutline from '@vkontakte/icons/dist/56/notification_outline';\r\nimport Icon56CheckCircleOutline from '@vkontakte/icons/dist/56/check_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport ButtonCart from  \"./panels/catalog/ButtonInCart\";\r\n\r\n\r\nimport {Div, Epic, Tabbar, TabbarItem, Panel, PanelHeader} from '@vkontakte/vkui';\r\n//import Icon28Messages from '@vkontakte/icons/dist/28/messages';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\r\nimport Icon28User from '@vkontakte/icons/dist/28/user';\r\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport AppHome from \"./panels/Profile\";\r\nimport CatalogProduct from \"./panels/catalog/CatalogProduct\";\r\nimport './panels/catalog/product.css';\r\n\r\nimport GetCartHome from \"./panels/Cart/CartHome\";\r\n\r\nrequire('./panels/global/index.js');\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AudioInfo:{\r\n                ReloadBasket: new Audio('//sushi-time31.ru/audio/ReloadBasketInfo2.mp3')\r\n            },\r\n\r\n            ParamStart:false,\r\n            products:[],\r\n            loadingCatalog:false,\r\n            activeStory: 'catalog',\r\n            loadingPage: true,\r\n            user:[],\r\n            userSystemInfo:{error:true,dataUser:\"\"},\r\n            cart:[],\r\n            countCartProduct:'',\r\n\r\n            dopPresets: [],\r\n            imgListPresets: false,\r\n\r\n            addressDefault:null,\r\n            AffiliateDefault:0,\r\n            checkedTypeDilivery:0,\r\n            commentary:\"\",\r\n            typePay:1,\r\n            countPerson:1,\r\n            SalePoints:0,\r\n            sumCart:0,\r\n            activeModal:null,\r\n            formNewAddressData:'',\r\n            formEditAddressData:'',\r\n\r\n            listAddressGlobal:[],\r\n            listAffiliateGlobal:[],\r\n\r\n            priceDelivery:0,\r\n            minSumOrder:300,\r\n            minSumFreeDelivery:0,\r\n\r\n            //Если сумма корзины меньше необходимой для заказа\r\n            errorOrderFinal:false,\r\n            //Если сумма корзины меньше бесплатной доставки\r\n            DeliveryPriceItog:false,\r\n\r\n            //Доставка на адрес возможна, сли false, то не возможна\r\n            DeliveryAddressOKCity:true,\r\n\r\n            //Адрес, для отображения в последнем блоке корзины\r\n            addressOrderInfoUser:'',\r\n            newOrderStats:false,\r\n\r\n            StatusLoadSlide:false,\r\n            slideHeaderArray:[],\r\n            slideIndex: 0,\r\n\r\n            StatusNotification:false,\r\n\r\n            CityListBind:[],\r\n\r\n            typeOrderDate:true,\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    getCityUser(){\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getCity&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n\r\n                }else{\r\n                    this.state.ListCitySelect = data.list;\r\n                    global.CityListBind = data.list;\r\n                   // console.log('Установили города',global.CityListBind);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения городов',err);\r\n            });\r\n    }\r\n\r\n    parseQueryString = (string) => {\r\n        return string.slice(1).split('&')\r\n            .map((queryParam) => {\r\n                let kvp = queryParam.split('=');\r\n                return {key: kvp[0], value: kvp[1]}\r\n            })\r\n            .reduce((query, kvp) => {\r\n                query[kvp.key] = kvp.value;\r\n                return query\r\n            }, {})\r\n    };\r\n\r\n\r\n    setOkNewOrderView(){\r\n        console.log('Показать окно');\r\n        if(this.state.newOrderStats) {\r\n            this.getCartDB(this.state.user.id);\r\n            this.setState({activeStory: 'newOrderInfo',\r\n                typeOrderDate:true,\r\n                SelectDatePreorder:null,\r\n                SelectTimePreorder:null\r\n            });\r\n            this.getUserSystemInfo(this.state.user.id);\r\n        }else{\r\n            console.log('Ну не совсем');\r\n        }\r\n    }\r\n\r\n\r\n    getSuccesOrderPage(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56CheckCircleOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.setState({activeStory: 'catalog'});}}>В каталог</Button>}\r\n\r\n            >\r\n                <h2>Ваш заказ принят</h2>\r\n                <p>Мы свяжемся с Вами в ближайшее время, для уточнения деталей.</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    getDeliveryDataPriceItog(){\r\n        if(this.state.minSumOrder < this.state.sumCart){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.minSumFreeDelivery <= this.state.sumCart){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет ',this.state.minSumFreeDelivery+' < '+this.state.sumCart);\r\n    }\r\n\r\n\r\n    getDeliveryDataPriceItogAffiliate(){\r\n        this.setState({\r\n            priceDelivery: 0,\r\n            minSumOrder: 300,\r\n            minSumFreeDelivery: 0\r\n        });\r\n\r\n        if(this.state.sumCart > 300){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.sumCart > 0){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет на самовывоз');\r\n    }\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n\r\n    setcountCartProduct(e){\r\n        if(e == 0){e = '';}\r\n        this.setState({\r\n            countCartProduct:e\r\n        });\r\n\r\n        var sumCartItog = 0;\r\n        this.state.cart.map((CPr)=>{\r\n                sumCartItog +=CPr.price*CPr.count\r\n            }\r\n        );\r\n        this.setState({sumCart:sumCartItog});\r\n\r\n        document.cookie = \"cart = \"+this.state.cart;\r\n    }\r\n\r\n    setComment(e){\r\n        this.setState({\r\n            commentary:e\r\n        });\r\n    }\r\n\r\n    setUser(e){\r\n        this.setState({user:e});\r\n    }\r\n\r\n    setUserSystem(e){\r\n        this.setState({userSystemInfo:{error:false,dataUser:e}});\r\n    }\r\n\r\n    getTypeSlideGet(){\r\n        switch(this.state.ParamStart.vk_platform){\r\n            case\"desktop_web\": return \"desktop\";break;\r\n            default: return \"mobile\";\r\n        }\r\n    }\r\n\r\n\r\n    getSlideHeaderArray(){\r\n        if(this.state.ParamStart === false){\r\n\r\n        }else {\r\n            //console.log(this.state.ParamStart);\r\n            axios('https://sushi-time31.ru/api/getSlideHeader&apiKey='+global.ApiKey,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n                    data: {\r\n                        typeSlide: this.getTypeSlideGet(),\r\n                    },\r\n                    responseType: 'text'\r\n                })\r\n                .then(({data}) => {\r\n                    if (\"error\" in data) {\r\n                        this.setSlideArray([], false);\r\n                        console.log(data.error, '|', data.errorInfo);\r\n                    } else {\r\n                        //console.log(data.listSlide);\r\n                        this.setSlideArray(data.listSlide, true);\r\n                    }\r\n                })\r\n                .catch(({err}) => {\r\n                    console.log(\"ERROR: ---Получение слайдов---  \", err);\r\n                });\r\n        }\r\n    }\r\n\r\n    setSlideArray(ArraySlide,status){\r\n        if(status === true) {\r\n            this.setState({slideHeaderArray: ArraySlide});\r\n            if (this.state.StatusLoadSlide === false) {\r\n                this.setState({StatusLoadSlide: true});\r\n            }\r\n        }else{\r\n            if (this.state.StatusLoadSlide === true) {\r\n                this.setState({StatusLoadSlide: false});\r\n            }\r\n        }\r\n    }\r\n\r\n    getSliderGalery(){\r\n        var ArraySlides = Object.keys(this.state.slideHeaderArray);\r\n        var Bullets = \"dark\";\r\n        var AutoPlays = \"7000\";\r\n        var countNumber = ArraySlides.length;\r\n        if(ArraySlides.length <= 1){Bullets = false;AutoPlays = false;}\r\n        if(this.state.StatusLoadSlide === true & ArraySlides.length > 0) {\r\n            var SliderVisual = ArraySlides.map((datas,keys) => {\r\n                //console.log(datas);\r\n                return (<img key={keys} src={this.state.slideHeaderArray[datas].img} style={{maxWidth:\"100%\"}}/>);\r\n            });\r\n\r\n            return (\r\n                <Gallery\r\n                    autoplay={AutoPlays}\r\n                    //slideIndex={this.state.slideIndex}\r\n                    //onEnd={()=>{this.setState({\"slideIndex\":0})}}\r\n                    slideWidth=\"100%\"\r\n                    style={{width:\"100%\",height: \"auto\"}}\r\n                    bullets={Bullets}\r\n                >\r\n                    {SliderVisual}\r\n                </Gallery>\r\n            );\r\n        }else{\r\n            return(\r\n                \"\"\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    reloadSlideHeaderSetTime(){\r\n        this.getSlideHeaderArray();\r\n        setTimeout(this.reloadSlideHeaderSetTime.bind(this),5000);\r\n    }\r\n\r\n\r\n\r\n\r\n    ///////Уведомления PUSH\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n            });\r\n    }\r\n\r\n    setStatusNotification(e){\r\n        this.setState({StatusNotification:e});\r\n    }\r\n\r\n\r\n    getNotificationPage(){\r\n        if(this.state.StatusNotification === true){\r\n            return(\r\n                <Placeholder stretched\r\n                             icon={<Icon56NotificationOutline />}\r\n                             action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.setState({activeStory: 'catalog'});}}>В каталог</Button>}\r\n\r\n                >\r\n                    <h2>Уведомлений нет</h2>\r\n                    <p>Как только для Вас появятся уведомления, они отобразятся здесь!</p>\r\n                </Placeholder>\r\n            );\r\n        }else{\r\n            return(\r\n                <Placeholder stretched\r\n                             icon={<Icon56NotificationOutline />}\r\n                             action={<Button size=\"l\" level=\"tertiary\"\r\n                                             onClick={()=>{this.PushClick()}}\r\n                             >Включить уведомления</Button>}\r\n                             style={{textAlign:\"center\"}}\r\n                >\r\n                    Для просмотра уведомлений, их нужно включить\r\n                </Placeholder>\r\n            );\r\n        }\r\n    }\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n            })\r\n            .catch((err)=> {\r\n                    this.setState({StatusNotification: false});\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    ///////\r\n\r\n    componentDidMount() {\r\n        this.getCityUser();\r\n        this.getStatusNotificate();\r\n\r\n        async function fetchData(setUser,getCartDB,getUserSystemInfo) {\r\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            setUser(user);\r\n            //setPopout(null);\r\n            //setModal(MODAL_CARD_MONEY_SEND);\r\n            //console.log('...','Получили данные пользователя',user.id);\r\n            getCartDB(user.id);\r\n            getUserSystemInfo(user.id);\r\n        }\r\n\r\n        axios({\r\n            method:'get',\r\n            // url:'https://sushi-time31.ru/test.json',\r\n            // url:'https://sushi-time31.ru/test2.json',\r\n            url:'https://sushi-time31.ru/api/Catalog&apiKey='+global.ApiKey+'&idCategoryKeyArray=true&idProductKeyArray=true',\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data.list);\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                products: data.list,\r\n                loadingCatalog:true\r\n            });\r\n        })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n\r\n        fetchData(this.setUser.bind(this),this.getCartDB.bind(this),this.getUserSystemInfo.bind(this));\r\n        this.reloadSlideHeaderSetTime();\r\n            setInterval(function() {this.getIntervalCart(1)}.bind(this), 3000);\r\n    }\r\n\r\n    getIntervalCart(i){\r\n       // console.log('Запустили получение корзины '+i);\r\n        i++;\r\n        this.getCartDB(this.state.user.id);\r\n       // setTimeout(function() {this.getIntervalCart(i)}.bind(this), 3000);\r\n    }\r\n\r\n    StatusReloadBasketData(dataOld,dataNew){\r\n        if(dataOld === dataNew){return false;}else{return true;}\r\n    }\r\n\r\n\r\n    ReloadBasketDataFN(ListProduct){\r\n       // console.log('Обновили корзину');\r\n        this.setState({\r\n            // products: data.list[0].ProductList\r\n            cart: ListProduct,\r\n            loadingPage: false\r\n        });\r\n        this.setCountCartVisal();\r\n    }\r\n\r\n\r\n    ReloadBasketDataDopPresets(ListDopPresets){\r\n        if(ListDopPresets !== false){\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: ListDopPresets.listPresetProduct,\r\n                imgListPresets: ListDopPresets.imgPresetProduct\r\n            });\r\n        }else{\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: [],\r\n                imgListPresets: false\r\n            });\r\n        }\r\n    }\r\n\r\n    getCartDB(id_user){\r\n        if(this.state.loading === false) {\r\n            this.setState({loading: true});\r\n        }\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/getBasketVK&apiKey='+global.ApiKey+'&updateBasket=1minute&id_user_vk='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n                data.listProduct = [];\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }\r\n\r\n            if(data.listProduct === null){\r\n                data.listProduct = [];\r\n            }\r\n\r\n            var ListOld = JSON.stringify(this.state.cart);\r\n            var ListNew = JSON.stringify(data.listProduct);\r\n            var ListPresetsOld = JSON.stringify(this.state.dopPresets);\r\n            var ListPresetsNew = JSON.stringify(data.DopPresetsData);\r\n\r\n            var statusBasket = this.StatusReloadBasketData(ListOld,ListNew);\r\n            var statusPresets = this.StatusReloadBasketData(ListPresetsOld,ListPresetsNew);\r\n\r\n            if(statusBasket === true) {\r\n                this.ReloadBasketDataFN(data.listProduct);\r\n                this.PlayInfoAudio('ReloadBasket');\r\n            }\r\n\r\n            if(statusPresets === true) {\r\n                this.ReloadBasketDataDopPresets(data.DopPresetsData);\r\n            }\r\n\r\n\r\n\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n    }\r\n\r\n    PlayInfoAudio(a){\r\n            if (this.audio) {\r\n                // this.audio.pause();\r\n                this.audio.stop();\r\n            }\r\n            switch (a) {\r\n                case\"ReloadBasket\":\r\n                   // this.audio = this.state.AudioInfo.ReloadBasket;\r\n                    this.state.AudioInfo.ReloadBasket.play();\r\n                    //alert('Запуск звука');\r\n                    break;\r\n            }\r\n    }\r\n\r\n\r\n    getUserSystemInfo(id_user){\r\n        this.setState({loading: true});\r\n\r\n        axios({\r\n            method:'get',\r\n            url:'https://sushi-time31.ru/api/Users&apiKey='+global.ApiKey+'&updateUserSystemInfo=one&idUserVK='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }else{\r\n                this.setUserSystem(data.list[0]);\r\n            }\r\n\r\n            this.setState({\r\n                loadingPage: false\r\n            });\r\n            //console.log(\"userSystemInfo\",this.state.userSystemInfo);\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n        //setUserSystem(e);\r\n    }\r\n\r\n\r\n    setCartServer(id_user,JsonBasket){\r\n        //console.log(JsonBasket,'___А_А_АА_А_А_А_');\r\n        axios('https://sushi-time31.ru/api/setBasketVK&apiKey='+global.ApiKey+'&id_user_vk='+id_user,\r\n            {\r\n            method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            data: {\r\n                basketJson: JsonBasket,\r\n            },\r\n            responseType:'text'\r\n        })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Отправка корзины---  \",err);\r\n            });\r\n    }\r\n\r\n    setCart(e,tE = '+'){\r\n        //console.log('Товар в корзине, вот этот ',e);\r\n        //this.setState({cart:e});\r\n        const counts = this.state.cart.length;\r\n        if(tE == '+'){\r\n            //Добавляем товар\r\n            if(counts<=0) {\r\n               // console.log('Добавляем Новый товар в корзину');\r\n                this.state.cart.push(e);\r\n                const countPlus = counts;\r\n                this.state.cart[countPlus].count = 1;\r\n                this.setcountCartProduct(1);\r\n            }else{\r\n               // console.log('В принципи верно, но цикл не тот', counts);\r\n                var noAdd = true;\r\n\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Добавляем еще такой же товар');\r\n                        this.state.cart[key].count = this.state.cart[key].count + 1;\r\n                        setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                        noAdd =false;\r\n                    }\r\n                    }\r\n                );\r\n\r\n                if(noAdd === true){\r\n                   // console.log('Добавляем новый товар, так как тагого же нет');\r\n                    this.state.cart.push(e);\r\n                    const countPlus = counts;\r\n                    this.state.cart[countPlus].count = 1;\r\n                    setcountCartProductVar++;\r\n                }\r\n\r\n            }\r\n        }else{\r\n            //Удаляем товар\r\n            if(counts<=0) {\r\n\r\n            }else{\r\n                var noAdd = true;\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Удаляем товар 1 товар с этим id и типом');\r\n                        if( this.state.cart[key].count<=1){\r\n                            // delete this.state.cart[key];\r\n                            this.state.cart.splice(key, 1);\r\n                        }else{\r\n                            this.state.cart[key].count = this.state.cart[key].count - 1;\r\n                            setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                            noAdd =false;\r\n                        }\r\n                    }\r\n                    }\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n        {setcountCartProductVar = setcountCartProductVar+CPr.count}\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n        var setDataServer = btoa(encodeURI(JSON.stringify(this.state.cart)));\r\n       // console.log('Вот это отправляем на сервер',setDataServer);\r\n        this.setCartServer(this.state.user.id,setDataServer);\r\n    }\r\n\r\n\r\n    setCountCartVisal(){\r\n       // this.getCartDB(this.state.user.id);\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n            {setcountCartProductVar = setcountCartProductVar+CPr.count;\r\n            }\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n    }\r\n\r\n    setTypeDilivery(e){\r\n        this.setState({checkedTypeDilivery:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setTypeOrderDate(e){\r\n        this.setState({typeOrderDate:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setAddressDefault(e){\r\n        if(e === 'del'){\r\n            e = 0;\r\n        }\r\n        this.setState({addressDefault:e});\r\n        //console.log('По дефолту адрес теперь ',e);\r\n        //Обновляем условия доставки на 3  шаг корзины\r\n    }\r\n\r\n    setAffiliateDefault(e){\r\n        this.state.AffiliateDefault = e;\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setModal(e){\r\n        this.setState({activeModal:e});\r\n    }\r\n\r\n    render () {\r\n        const queryParams = this.parseQueryString(window.location.search);\r\n        const hashParams = this.parseQueryString(window.location.hash);\r\n\r\n        if(this.state.ParamStart === false) {\r\n            //console.log(\"State = false, но \", queryParams);\r\n        }\r\n\r\n        if(this.state.ParamStart === false) {\r\n            this.state.ParamStart = queryParams;\r\n        }\r\n\r\n        // this.setState({\"ParamStart\":this.parseQueryString(window.location.search)});\r\n        // console.log('Параметры запуска ',this.state.ParamStart,' А URL такой ',window.location.search);\r\n\r\n        const modal = (\r\n            <ModalRoot activeModal={this.state.activeModal}>\r\n                <ModalPage\r\n                    id=\"MODAL_NEWADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Добавить адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Добавление адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formNewAddressData}\r\n                </ModalPage>\r\n\r\n                <ModalPage\r\n                    id=\"MODAL_EditADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Редактировать адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Редактирование адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formEditAddressData}\r\n                </ModalPage>\r\n            </ModalRoot>\r\n        );\r\n\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'catalog'}\r\n                        data-story=\"catalog\"\r\n                        text=\"Каталог\"\r\n                    ><Icon24Note /></TabbarItem>\r\n                    <TabbarItem style={{\"display\":\"none\"}}\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'discover'}\r\n                        data-story=\"discover\"\r\n                        text=\"Поиск\"\r\n                    ><Icon28Search /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'cart'}\r\n                        data-story=\"cart\"\r\n                        label={this.state.countCartProduct}\r\n                        text=\"Корзина\"\r\n                    ><Icon28MarketOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'notifications'}\r\n                        data-story=\"notifications\"\r\n                        text=\"Уведомления\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'user'}\r\n                        data-story=\"user\"\r\n                        text=\"Профиль\"\r\n                    ><Icon28User /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"newOrderInfo\" activePanel=\"newOrders\" header={false}>\r\n                    <Panel id=\"newOrders\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {this.getSuccesOrderPage()}\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"catalog\" activePanel=\"catalog\" header={false}>\r\n                    <Panel id=\"catalog\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {\r\n                            this.state.loadingCatalog\r\n                                ?\r\n                                <CatalogProduct setCart={this.setCart.bind(this)} CartProducts={this.state.cart} ProductsLists={this.state.products} sliderHeader={this.getSliderGalery.bind(this)} queryParams={queryParams}/>\r\n                                :\r\n                                <ScreenSpinner />\r\n                        }\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"discover\" activePanel=\"discover\">\r\n                    <Panel id=\"discover\">\r\n                        <PanelHeader>Поиск товаров</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"cart\" activePanel=\"cart\" modal={modal}>\r\n                    <Panel id=\"cart\" style={{\"paddingBottom\":\"40px\"}}>\r\n                        <PanelHeader theme=\"light\"\r\n                                     noShadow={false}\r\n                        >\r\n                            Корзина\r\n                        </PanelHeader>\r\n                        <div key=\"Cart_List\" style={{\"paddingBottom\":\"40px\"}}>\r\n                            {/*this.getCartVisual(this.state.cart,this.setCart.bind(this))*/}\r\n                            <GetCartHome\r\n                                ProductList={this.state.cart}\r\n                                PresetsDopProductList={\r\n                                    {\r\n                                    \"list\": this.state.dopPresets,\r\n                                    \"img\": this.state.imgListPresets\r\n                                    }\r\n                                }\r\n\r\n                                setCart={this.setCart.bind(this)}\r\n                                userSystemInfo={this.state.userSystemInfo}\r\n                                userInfo={this.state.user}\r\n                                getUserSystemInfo={this.getUserSystemInfo.bind(this)}\r\n\r\n                                addressDefault={this.state.addressDefault}\r\n                                setAddressDefault={this.setAddressDefault.bind(this)}\r\n\r\n                                AffiliateDefault={this.state.AffiliateDefault}\r\n                                setAffiliateDefault={this.setAffiliateDefault.bind(this)}\r\n\r\n                                checkedTypeDilivery={this.state.checkedTypeDilivery}\r\n                                setTypeDilivery={this.setTypeDilivery.bind(this)}\r\n\r\n                                commentary={this.state.commentary}\r\n                                setComment={this.setComment.bind(this)}\r\n\r\n                                countPerson={this.state.countPerson}\r\n\r\n                                SalePoints={this.state.SalePoints}\r\n\r\n                                setStates={this.setState.bind(this)}\r\n                                setDeliveryDataItogs={this.getDeliveryDataPriceItog.bind(this)}\r\n                                getDeliveryDataPriceItogAffiliate={this.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                                sumCart={this.state.sumCart}\r\n\r\n                                showModal={this.setModal.bind(this)}\r\n                                hideModals={this.setModal.bind(this,null)}\r\n\r\n                                DataDeliveryInfoPay={\r\n                                    {\r\n                                        typeOrderDate:this.state.typeOrderDate,\r\n                                        setTypeOrderDate:this.setTypeOrderDate.bind(this),\r\n\r\n                                        SelectDatePreorder:this.state.SelectDatePreorder,\r\n                                        SelectTimePreorder:this.state.SelectTimePreorder,\r\n\r\n                                        priceDelivery:this.state.priceDelivery,\r\n                                        minSumOrder:this.state.minSumOrder,\r\n                                        minSumFreeDelivery:this.state.minSumFreeDelivery,\r\n\r\n                                        //Если сумма корзины меньше необходимой для заказа\r\n                                        errorOrderFinal:this.state.errorOrderFinal,\r\n                                        //Если сумма корзины меньше бесплатной доставки\r\n                                        DeliveryPriceItog:this.state.DeliveryPriceItog,\r\n\r\n                                        //Доставка на адрес возможна, сли false, то не возможна\r\n                                        DeliveryAddressOKCity:this.state.DeliveryAddressOKCity,\r\n\r\n                                        addressOrderInfoUser:this.state.addressOrderInfoUser,\r\n\r\n                                        checkedTypeDilivery:this.state.checkedTypeDilivery,\r\n                                        AffiliateDefault:this.state.AffiliateDefault,\r\n                                        addressDefault:this.state.addressDefault,\r\n\r\n                                        listAddressGlobal:this.state.listAddressGlobal,\r\n                                        listAffiliateGlobal: this.state.listAffiliateGlobal,\r\n\r\n                                        comments:this.state.commentary,\r\n                                        typePay:this.state.typePay,\r\n                                        countPerson:this.state.countPerson,\r\n                                        cart:this.state.cart\r\n\r\n                                    }\r\n                                }\r\n\r\n                                setOkNewOrderView={this.setOkNewOrderView.bind(this)}\r\n\r\n                            />\r\n\r\n                        <div style={{\"clear\":\"both\"}}></div>\r\n                        </div>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Уведомления</PanelHeader>\r\n                        {this.getNotificationPage()}\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"user\" activePanel=\"user\">\r\n                    <Panel id=\"user\">\r\n                        <PanelHeader>Профиль</PanelHeader>\r\n                        <AppHome id=\"home\" go=\"persik\" dataUsers={this.state.userSystemInfo} setStatusNotification={this.setStatusNotification.bind(this)}/>\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Placeholder, Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar,Textarea, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon16Clear from '@vkontakte/icons/dist/16/clear';\r\nimport DiliveryAddress from \"./DiliveryAddress\";\r\nimport AffiliateList from \"./AffiliateList\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Preorder from \"../preorder\";\r\nimport NoPreorder from \"../noPreorder\";\r\n\r\n\r\nconst orangeBackground = {\r\n    backgroundImage: 'linear-gradient(135deg, #ffb73d, #ffa000)'\r\n};\r\n\r\nconst blueBackground = {\r\n    backgroundColor: '#ffffff'\r\n};\r\n\r\nclass Dilivery extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            UserCard:{phone:\"\",email:\"\"},\r\n            CheckSMSCode:false,\r\n            phoneValue:\"\",\r\n            codeValue:\"\",\r\n            resultVerificationCode:true,\r\n            tooltip: true,\r\n            snackbar: null,\r\n            showBTNNewAddress:false,\r\n            showFormNewAddress:false\r\n        };\r\n\r\n        this.openBase = this.openBase.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.openBase();\r\n\r\n        async function getPhoneUserVK(setState){\r\n            connect.sendPromise(\"VKWebAppGetPhoneNumber\",{\"sign\":\"T3in3QPDby8GsRNAfsEnEoYmVt7Se2dy0XUOhnCSlSw\"})\r\n                .then((data ) => {\r\n                    //console.log(data,\"Данные пользователя\");\r\n                    setState({ UserCard:{phone: data.phone_number} });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ------  \",err);\r\n                });\r\n        }\r\n\r\n        //console.log(\"Получаем телефон\");\r\n        {this.props.userSystemInfo.error === true && getPhoneUserVK(this.setState.bind(this));}\r\n    }\r\n\r\n\r\n    openBase (e = null) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Clear fill=\"#ff0000\" width={16} height={16} /></Avatar>}\r\n                >\r\n                    {e===null && <span>Проверочный код введен не верно, повторите попытку!</span>}\r\n                    {e!==null && e}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n\r\n    setVerificationPhone(){\r\n        //console.log('Отправили запрос на верификацию');\r\n        axios('https://sushi-time31.ru/api/VerificationPhone&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_SMS\"){\r\n                        //console.log('СМС отправлено, выводим поле для ввода кода');\r\n                        this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase('Номер телефона введен не верно!');\r\n                    }\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    checkVerificationCode(){\r\n        //console.log('Отправили запрос на проверку кода',this.props.userInfo.id);\r\n        axios('https://sushi-time31.ru/api/VerificationCode&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                    VerificationCode: this.state.codeValue,\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_CODE_V\"){\r\n                        //console.log('Данные сохранены, можно обновить приложение, пользователь авторизован');\r\n                        this.props.getUserSystemInfo(this.props.userInfo.id);\r\n                        //this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    getValueInputPhone(event){\r\n        this.setState({UserCard:{phone: event.target.value}});\r\n        //console.log(this.state.UserCard.phone);\r\n    }\r\n\r\n    getValueInputCode(event){\r\n        this.setState({codeValue: event.target.value});\r\n    }\r\n\r\n    getCommentsData(e){\r\n        this.props.setComment(e.target.value);\r\n    }\r\n\r\n    getDataCountPerson(types){\r\n        var values_count = this.props.countPerson;\r\n        switch(types){\r\n            case '-': values_count -= 1; break;\r\n            case '+': values_count += 1; break;\r\n            default: console.log('Нет параметра');\r\n        }\r\n\r\n        if(values_count<=0){ values_count = 1;}\r\n        if(values_count === ''){ values_count = 1;}\r\n        if(values_count >9){ values_count = 9;}\r\n\r\n        this.props.setStates({countPerson: values_count});\r\n    }\r\n\r\n    getCountPersonInput(){\r\n        return (\r\n            <Group title=\"Кол-во приборов\">\r\n                <Div style={{display: 'flex',justifyContent:'center'}}>\r\n                    <Button size=\"l\" stretched style={{marginRight: 10,maxWidth:50,background:\"#ff7300\"}} onClick={this.getDataCountPerson.bind(this,'-')}>-</Button>\r\n                    <Input type=\"number\" style={{maxWidth:80,textAlign:\"center\"}} value={this.props.countPerson} readOnly=\"readOnly\"/>\r\n                    <Button size=\"l\" stretched style={{marginLeft: 10,maxWidth:50,background:\"#ff7300\"}} onClick={this.getDataCountPerson.bind(this,'+')}>+</Button>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth(){\r\n        return(<Group>\r\n            <FormLayout>\r\n                {this.state.CheckSMSCode === true && <FormLayoutGroup top=\"Введите одноразовый код из СМС\">\r\n\r\n                    <Input type=\"number\" placeholder=\"1234\" onChange={this.getValueInputCode.bind(this)} />\r\n\r\n\r\n                    <Button level=\"commerce\" style={{\"background\":\"#ff7300\"}}\r\n                            onClick={()=> {\r\n                                //console.log(this.state.codeValue);\r\n                                this.checkVerificationCode()\r\n                                }\r\n                            }\r\n                    >Подтвердить\r\n                    </Button>\r\n                    <Button level=\"secondary\" style={{\"float\":\"right\"}} onClick={() => {this.setState({CheckSMSCode:false})}}>Выслать повторно</Button>\r\n                </FormLayoutGroup>}\r\n\r\n                {this.state.CheckSMSCode === false && <FormLayoutGroup top=\"Подтвердите номер телефона\">\r\n                    <Input type=\"number\" placeholder=\"79876543210\" defaultValue={this.state.UserCard.phone} onChange={this.getValueInputPhone.bind(this)}/>\r\n                    <Button level=\"commerce\" style={{\"background\":\"#ff7300\"}}\r\n                            onClick={\r\n                                () => {\r\n                                    this.setVerificationPhone();\r\n                                    //console.log(this.state.UserCard.phone)\r\n                                }\r\n                            }\r\n                    >\r\n                        Получить код\r\n                    </Button>\r\n                    <Button onClick={() => {this.setState({CheckSMSCode:true})}} level=\"secondary\" style={{\"float\":\"right\"}}>Уже есть код</Button>\r\n                </FormLayoutGroup>}\r\n            </FormLayout>\r\n            {this.state.snackbar}\r\n        </Group>);\r\n    }\r\n\r\n    getButtonTypeDilivery(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"0\"}}>\r\n            <Button size=\"l\" stretched style={{marginRight: 8}} level={this.props.checkedTypeDilivery === 1 ? \"secondary\" : \"commerce\"} onClick={()=>{this.props.setTypeDilivery(0)}}>Доставка</Button>\r\n            <Button size = \"l\" stretched level={this.props.checkedTypeDilivery === 0 ? \"secondary\" : \"commerce\"}  onClick={()=>{this.props.setTypeDilivery(1)}}>Самовывоз</Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getButtonTypeOrder(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"20\",\"paddingTop\":\"0\"}}>\r\n                <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"commerce\" : \"secondary\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(true);}}\r\n                >\r\n                    Ближайшее\r\n                </Button>\r\n                <Button size = \"l\" stretched\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"secondary\" : \"commerce\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(false);}}\r\n                >\r\n                    Ко времени\r\n                </Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n\r\n    getPreorderBlock(){\r\n        return(\r\n            <Group\r\n                title=\"Время получение заказа\"\r\n            >\r\n                {this.getButtonTypeOrder()}\r\n                {\r\n                    this.props.DataDeliveryInfo.typeOrderDate\r\n                        ?\r\n                        <NoPreorder\r\n                            typeDelivery={this.props.DataDeliveryInfo.checkedTypeDilivery}\r\n                        />\r\n                        :\r\n                        <Preorder\r\n                            DataInfos={this.props.DataDeliveryInfo}\r\n                            setStates={this.props.setStates.bind(this)}\r\n                            key=\"Preorders\"\r\n                        />\r\n                }\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserAuth(){\r\n        //console.log('По дефолту адрес ',this.props.addressDefault)\r\n        return(\r\n            <div>\r\n                {this.getButtonTypeDilivery()}\r\n                {this.props.checkedTypeDilivery === 0 ?\r\n                    this.getListAddress()\r\n                    :\r\n                    this.getListAffiliate()\r\n                }\r\n                {this.getPreorderBlock()}\r\n                {this.getCountPersonInput()}\r\n                {this.getCommentsTextarea()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getNoneCartProduct(){\r\n        return(\r\n            <Placeholder\r\n                icon={<Icon56ErrorOutline />}\r\n                action={false}\r\n\r\n            >\r\n                <h2>В корзине отсутствуют товары</h2>\r\n                <p>Для совершения заказа, нужно положить хотябы 1 товар в корзину!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n\r\n    getListAddress(){\r\n        //console.log(this.state.showBTNNewAddress);\r\n        return(\r\n            <Group\r\n                className=\"GroupBlockListAddress\"\r\n                title=\"Адреса доставки\"\r\n                   description={this.state.showBTNNewAddress ?\r\n                       <Button\r\n                           size=\"l\"\r\n                           level=\"secondary\"\r\n                           style={{ background: '#FF7300',color:\"#FFFFFF\" }}\r\n                           // onClick={()=>{this.setState({showFormNewAddress:true})}}\r\n                           onClick={()=>{\r\n                               this.props.showModal('MODAL_NEWADDRESS');\r\n                           }}\r\n                       >Добавить адрес</Button>\r\n                       :\r\n                       \"\"}\r\n            >\r\n                <DiliveryAddress\r\n                    userInfo={this.props.userInfo}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    setShowBTNNewAddress={this.setState.bind(this)}\r\n                    showFormNewAddress={this.state.showFormNewAddress}\r\n                    setStates={this.props.setStates.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n                    showModals={this.props.showModal.bind(this)}\r\n                    hideModals={this.props.hideModals.bind(this)}\r\n                />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getListAffiliate(){\r\n        return (\r\n            <Group title=\"Адреса самовывоза\">\r\n            <AffiliateList\r\n                userInfo={this.props.userInfo}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n                setStates={this.props.setStates.bind(this)}\r\n            />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCommentsTextarea () {\r\n        return (\r\n            <Group title=\"Комментарий к заказу\">\r\n                <Div>\r\n                <Textarea value={this.props.commentary} onChange={this.getCommentsData.bind(this)} placeholder=\"Ваш комментарий\"/>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getOkListAddress(Param){\r\n        return(\r\n            Param <=0 ? this.getNoneCartProduct() : this.getInfoUserAuth()\r\n        )\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                {this.props.userSystemInfo.error === true &&\r\n                    this.getInfoUserNoneAuth()\r\n                }\r\n\r\n                {this.props.userSystemInfo.error === false &&\r\n                    this.getOkListAddress(this.props.ProductList.length)\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Dilivery;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAddress from \"./GetOneAddress\";\r\nimport GetOneAddressOff from \"./GetOneAddressOff\";\r\nimport OneProduct from \"../catalog/OneProduct\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport FormNewAddress from './FormNewAddress';\r\n\r\nclass DiliveryAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAddress:[],\r\n            listAddressOff:[],\r\n            addressOk:false,\r\n            dataAddress:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAddressUserSystem();\r\n        this.props.setStates({formNewAddressData: <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n    }\r\n\r\n    setAddressEdit(e){\r\n        //console.log(this.state.listAddress);\r\n        this.props.setStates({formEditAddressData: <FormNewAddress AddressEdit={this.state.listAddress[e]} setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n        this.props.showModals('MODAL_EditADDRESS');\r\n    }\r\n\r\n\r\n    getAddressUserSystem(delUpdate = false){\r\n        axios('https://sushi-time31.ru/api/getAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_UserVK: this.props.userInfo.id,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                    if(data.error === 'Address not found'){\r\n                        console.log('Нужно вывести форму для создания первого адреса пользователя');\r\n                        this.getFormNewAddress();\r\n                    }else{\r\n\r\n                    }\r\n                }else{\r\n                   // console.log(data);\r\n                    this.setState({listAddress:data.listAddress});\r\n                    this.props.setStates({listAddressGlobal:data.listAddress});\r\n\r\n                    this.setState({listAddressOff:data.ListAddressNoDelivery});\r\n                    this.props.setStates({listAddressGlobalOff:data.ListAddressNoDelivery});\r\n\r\n                    if(delUpdate === true){\r\n                        this.getAddressUsers(this.state.listAddress,true);\r\n                    }else{\r\n                        this.getAddressUsers(this.state.listAddress);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n\r\n    setAddressInfoUsers(e,type=0){\r\n            if (type === 0) {\r\n                var listAddressU = Object.keys(this.state.listAddress);\r\n                if(listAddressU.length > 0) {\r\n                    // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n                    // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n                    var DataSetAddress = this.state.listAddress[listAddressU[e]];\r\n                    this.props.setStates({\r\n                        addressOrderInfoUser: 'г. ' + DataSetAddress.city + ', ул. ' + DataSetAddress.street + ', д. ' + DataSetAddress.home\r\n                    });\r\n                }\r\n            }\r\n    }\r\n\r\n    getFormNewAddress(){\r\n        this.props.setAddressDefault(null);\r\n        this.state.dataAddress = <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)}/>;\r\n        this.setState({addressOk:true});\r\n        this.props.setShowBTNNewAddress({showBTNNewAddress:false});\r\n\r\n    }\r\n\r\n    setDataDiliveryPrice(n,ee = 'Дефолт 0'){\r\n        var listAddressU = Object.keys(this.state.listAddress);\r\n        // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n        // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n        if(listAddressU.length <= 0){\r\n            console.log('Адресов нет, должны вернуть только не доступные адреса');\r\n            this.props.setAddressDefault(null);\r\n            //return this.getAddressUsers(this.state.listAddress, true);\r\n        }else {\r\n            if (listAddressU[n] in this.state.listAddress) {\r\n                //console.log('Все ок, продолжаем по адресам');\r\n            } else {\r\n               // console.log('Адреса такого нет, ставим в дефаулт');\r\n                this.props.setAddressDefault(0);\r\n               // console.log('Должны переустановить дефаултный адрес на 0, адреса есть');\r\n                return this.getAddressUsers(this.state.listAddress, true);\r\n            }\r\n        }\r\n\r\n        if(listAddressU.length <= 0){\r\n           // console.log('Адресов нет, но продолжаем');\r\n           //  console.log('Установили значения стоимости доставки ', ee);\r\n        }else {\r\n            var DataSetAddress = this.state.listAddress[listAddressU[n]].diliveryData;\r\n            this.props.setStates({\r\n                priceDelivery: DataSetAddress.priceDilivery,\r\n                minSumOrder: DataSetAddress.min_sum_order,\r\n                minSumFreeDelivery: DataSetAddress.min_sum_free_dilivery\r\n            });\r\n           // console.log('Установили значения стоимости доставки ', ee);\r\n        }\r\n\r\n    }\r\n\r\n    getAddressUsers(listAddress,delUpdate = false) {\r\n        if(this.props.addressDefault === null & Object.keys(listAddress).length > 0){\r\n          //  console.log('Устанавливаем дефаултное значение адреса на 0','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(0);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n        if(this.props.addressDefault !== null & Object.keys(listAddress).length <= 0){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0 с условием что адресов нет','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(null);\r\n            this.setDataDiliveryPrice(0);\r\n        }\r\n\r\n        if(delUpdate === true){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0');\r\n            this.props.setAddressDefault(0);\r\n            this.getAddressUsers(listAddress,false);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }else{\r\n            this.state.dataAddress = Object.keys(listAddress).map((dataAddress, keyId) =>\r\n                <GetOneAddress\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId}\r\n                    AddresInfo={listAddress[dataAddress]}\r\n                    NumberAddress={keyId}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n\r\n            this.state.dataAddressOff = Object.keys(this.state.listAddressOff).map((dataAddress2, keyId2) =>\r\n                <GetOneAddressOff\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId2}\r\n                    AddresInfo={this.state.listAddressOff[dataAddress2]}\r\n                    NumberAddress={keyId2}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n            this.setState({addressOk:true});\r\n            this.props.setShowBTNNewAddress({showBTNNewAddress:true});\r\n            this.setDataDiliveryPrice(this.props.addressDefault, 'На '+this.props.addressDefault);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n    }\r\n\r\n    getListAddressVisual(){\r\n        return(\r\n            <div>\r\n                {this.state.dataAddress}\r\n                {this.state.dataAddressOff}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (this.state.addressOk === false ? <div>Загрузка адресов доставки <ScreenSpinner/></div> : this.getListAddressVisual()\r\n            );\r\n    };\r\n}\r\n\r\nexport default DiliveryAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n            axios('https://sushi-time31.ru/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:{id:a},\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            this.props.setAddressDefault('del');\r\n                           // console.log('Обновляем адреса',data);\r\n                            this.props.getAddressUserSystem(true);\r\n                            this.props.setPopout({ popout:null});\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    openDefault (a) {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Отмена',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }, {\r\n                        title: 'Удалить',\r\n                        autoclose: true,\r\n                        action: () => this.deletedAddress(a),\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Удаление адреса</h2>\r\n                    <p>Вы уверены что хотите удалить адрес?</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n    getAddressFull(n){\r\n        return(<div>\r\n                <span style={{width:\"75%\",float:\"left\"}}>\r\n                 г. {this.props.AddresInfo.city}, ул. {this.props.AddresInfo.street}, д. {this.props.AddresInfo.home}, подъезд {this.props.AddresInfo.podezd}, этаж {this.props.AddresInfo.etaj}, кв. {this.props.AddresInfo.kvartira}\r\n                </span>\r\n                <span style={{width:\"24%\",float:\"right\"}}><Icon28EditOutline\r\n                    onClick={\r\n                        ()=>{\r\n                            // console.log('Редактируем адрес ',n);\r\n                            this.props.setAddressEdit(this.props.AddresInfo.id);\r\n                        }\r\n                    }\r\n                    style={{float:\"left\",marginRight:\"10px\"}}/> <Icon28CancelCircleOutline style={{float:\"left\"}}\r\n                                                                                           onClick={\r\n                                                                                               ()=>{\r\n                                                                                                   // console.log('Удаляем адрес ');\r\n                                                                                                   this.openDefault(this.props.AddresInfo.id);\r\n                                                                                               }\r\n                                                                                           }\r\n                /></span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} defaultChecked onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n,'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n, 'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddressOff extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n        this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n        axios('https://sushi-time31.ru/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    addressInfo:{id:a},\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.result.result_add === true){\r\n                        this.props.setAddressDefault('del');\r\n                        //console.log('Обновляем адреса',data);\r\n                        this.props.getAddressUserSystem(true);\r\n                        this.props.setPopout({ popout:null});\r\n                    }else{\r\n                        console.log('Ошибка ',data);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n            });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'У Вас в корзине лежат товары, которые на этот адрес не доставляются!'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'У Вас в корзине лежат товары, которые на этот адрес не доставляются!'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddressOff;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAffiliateAddress from \"./GetOneAffiliateAddress\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass AffiliateList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAffiliate:[],\r\n            addressAffiliateOk:false,\r\n            dataAffiliate:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios('https://sushi-time31.ru/api/getAffiliate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_City: 1,\r\n                    id_UserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo,'Самовывоз');\r\n                }else{\r\n                    //console.log(data,'Самовывоз');\r\n                    if(Object.keys(data.listOffAffiliate).length>0){\r\n                       // console.log('Есть запрещенные точки, проводим цикл');\r\n                        Object.keys(data.listOffAffiliate).map((datas,keys)=>\r\n                            {\r\n                                if(this.props.AffiliateDefault === keys){\r\n                                    //console.log('Точка самовывоза по умолчанию совпадает с запрещенной, ставим нуль ', keys);\r\n                                    this.props.setAffiliateDefault(0);\r\n                                }else{\r\n                                   // console.log('Точка по умолчанию не совпадает с запрещенной, ничего не делаем ',keys);\r\n                                }\r\n                            }\r\n                        );\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }else{\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    setAddressInfoUsers(e,type=1){\r\n        if(type===1){\r\n            var listAddressU = Object.keys(this.state.listAffiliate);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.state.listAffiliate[listAddressU[e]];\r\n            this.props.setStates({\r\n                addressOrderInfoUser: DataSetAddress.title\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    getAddressAffiliate(listAddress) {\r\n        this.props.getDeliveryDataPriceItogAffiliate();\r\n        this.setAddressInfoUsers(this.props.AffiliateDefault);\r\n        this.state.dataAffiliate = Object.keys(listAddress).map((dataAffiliate, keyId) =>\r\n            <GetOneAffiliateAddress\r\n                key={'Affiliate_'+keyId}\r\n                AddresInfo={listAddress[dataAffiliate]}\r\n                NumberAddress={keyId}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n            />\r\n        );\r\n       this.setState({addressAffiliateOk:true});\r\n        //this.state.addressOk:true;\r\n        //return ArrayPr;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            this.state.addressAffiliateOk === false ? <div><h3>Ареса самовывоза</h3> <ScreenSpinner/> <p></p></div> : this.state.dataAffiliate\r\n        );\r\n    };\r\n}\r\n\r\nexport default AffiliateList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\n\r\nclass GetOneAffiliateAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n    }\r\n\r\n    getAddressTitle(){\r\n        return(\r\n            <span>\r\n               {this.props.AddresInfo.title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    getAddressFull(){\r\n        return(\r\n            <span style={{\"color\":\"#ffae6b\"}} dangerouslySetInnerHTML={{__html: this.props.AddresInfo.operating_mode}}>\r\n\r\n            </span>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    defaultChecked onClick={() => {\r\n                        this.props.setAffiliateDefault(n);\r\n                    ;this.props.setAddressInfoUsers(n);\r\n                    }\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    onClick={() => {\r\n                        this.props.setAffiliateDefault(n)}\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.AffiliateDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAffiliateAddress;","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch, Select, FormLayout} from '@vkontakte/vkui/';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Preorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockPreorder:false,\r\n            listDatePreorder:[],\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null\r\n        }\r\n\r\n        this.onChangeS = this.onChangeS.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockPreorder:true});\r\n        this.getDateList();\r\n        this.setState({\r\n            SelectDatePreorder:this.props.DataInfos.SelectDatePreorder,\r\n            SelectTimePreorder:this.props.DataInfos.SelectTimePreorder\r\n        });\r\n        console.log(this.props.DataInfos.SelectDatePreorder);\r\n    }\r\n\r\n    getDateList(){\r\n        axios('https://sushi-time31.ru/api/getPreorderDate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    this.setState({listDatePreorder:data.list});\r\n                    console.log(data.list);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    onChangeS(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n        this.props.setStates({[name]: value});\r\n        //console.log(this.state);\r\n    }\r\n\r\n    getSelectDate(){\r\n        const ListDate = Object.keys(this.state.listDatePreorder).map((data,n)=>{\r\n            return(\r\n                <option key={data+\"preorderDates\"} value={data}>{this.state.listDatePreorder[data].title}</option>\r\n            );\r\n        });\r\n        return (\r\n            <div>\r\n            <Cell>\r\n                <Select\r\n                    top=\"Дата получения заказа\"\r\n                    key=\"datePreorder\"\r\n                    placeholder=\"Дата получения\"\r\n                    name=\"SelectDatePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectDatePreorder}\r\n            >{ListDate}</Select>\r\n            </Cell>\r\n            <Cell>\r\n                {this.getSelectTime()}\r\n            </Cell>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSelectTime(){\r\n        if(this.state.SelectDatePreorder in this.state.listDatePreorder) {\r\n            var ListTimes = this.state.listDatePreorder[this.state.SelectDatePreorder].timeList;\r\n            const ListTime = Object.keys(ListTimes).map((times, n) => {\r\n                if(ListTimes[times].false === true){\r\n                    return ('');\r\n                }else {\r\n                    return (\r\n                        <option key={times + \"preorderTimes\"}\r\n                                value={times}\r\n                        >\r\n                            {ListTimes[times].title}\r\n                        </option>\r\n                    );\r\n                }\r\n            });\r\n            return (\r\n                <Cell>\r\n                    <Select\r\n                    top=\"Время получения заказа\"\r\n                    key=\"datePreorderTime\"\r\n                    placeholder=\"Время получения\"\r\n                    name=\"SelectTimePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectTimePreorder}\r\n                >{ListTime}</Select>\r\n                </Cell>\r\n            );\r\n        }else{\r\n            return ('');\r\n        }\r\n    }\r\n\r\n    getBlockPreorder(){\r\n        return(\r\n                <Div key=\"DivPreorder\">\r\n                    {\r\n                        this.state.loadBlockPreorder ?\r\n                            this.getSelectDate()\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlockPreorder()\r\n        );\r\n    }\r\n}\r\nexport default Preorder;\r\n","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\n\r\n\r\nclass NoPreorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockOrder:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockOrder:true});\r\n    }\r\n\r\n    getBlocknoPreorder(){\r\n        return(\r\n                <Cell\r\n                    before={<Icon24Recent />}\r\n                    style={{paddingBottom:\"10px\"}}\r\n                >\r\n                    {\r\n                        this.state.loadBlockOrder ?\r\n                            <div>{this.props.typeDelivery ? \"Забрать в ближайшее время\" : \"Доставить в ближайшее время\"}</div>\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Cell>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlocknoPreorder()\r\n        );\r\n    }\r\n}\r\nexport default NoPreorder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\n\r\nclass NewOrderServer extends React.Component{\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    setDataServer(){\r\n        this.props.setStates({statusNewOrder:'Запрос прошел'});\r\n        axios('https://sushi-time31.ru/api/setNewOrder&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    idUserVK: this.props.userInfo.id,\r\n                    dataOrder:this.props.DataOrderInfo\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                   // console.log('Ответ сервера ',data);\r\n                    if(data.status == \"OK\"){\r\n                        this.props.getPageOkOrderSet({newOrderStats:true});\r\n                        this.props.setOkNewOrderView();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button size=\"xl\" onClick={()=>{this.setDataServer()}} className=\"WeightFontBold\">Завершить заказ</Button>\r\n        );\r\n    };\r\n}\r\n\r\nexport default NewOrderServer;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport {List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\n\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\n\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            StatusNotification:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getStatusNotificate();\r\n    }\r\n\r\n    getPanelProfil(){\r\n        return(\r\n            <div id={this.props.id} style={{maxWidth:'1200px',margin:'0 auto'}} them='white'>\r\n                {this.props.fetchedUser &&\r\n                    <Group title=\"Ваши данные\r\n    \">\r\n                        <Cell\r\n                            before={this.props.fetchedUser.photo_200 ? <Avatar src={this.props.fetchedUser.photo_200}/> : null}\r\n                            description={this.props.fetchedUser.city && this.props.fetchedUser.city.title ? this.props.fetchedUser.city.title : ''}\r\n                        >\r\n                            {`${this.props.fetchedUser.first_name} ${this.props.fetchedUser.last_name}`}\r\n                        </Cell>\r\n                    </Group>\r\n                }\r\n\r\n                {this.props.dataUsers.dataUsers.error ?\r\n                    this.getInfoUserNoneAuth()\r\n                    :\r\n\r\n                    <Group title=\"Активность\">\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Coins />}\r\n                            >\r\n                                Бонус Таймы: {this.props.dataUsers.dataUsers.dataUser.point}\r\n                            </Cell>\r\n                        </List>\r\n                    </Group>\r\n                }\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24Notification />}\r\n                            asideContent={<Switch\r\n                                checked={this.state.StatusNotification}\r\n                                onChange={()=>{this.PushClick()}} />}\r\n                            description=\"Изменение статуса заказа, акциии...\"\r\n                        >\r\n                            PUSH - уведомления\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth() {\r\n        return (\r\n            <Div>\r\n                Авторизуйтесь по номеру телефона, чтобы просматривать данные!\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n                this.props.setStatusNotification(datas.response.is_allowed);\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            });\r\n    }\r\n\r\n    //defaultChecked\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            })\r\n            .catch((err)=> {\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getPanelProfil()\r\n        );\r\n    }\r\n}\r\nexport default UserInfo;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport { View, Group, List, Cell } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Persik = props => (\r\n    <Panel id={props.id}>\r\n        <PanelHeader\r\n            left={<HeaderButton onClick={props.go} data-to=\"home\">\r\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n            </HeaderButton>}\r\n        >\r\n            Persik\r\n        </PanelHeader>\r\n        <Div>\r\n            <h2 size=\"x3\" level=\"1\">Это не совсем персик</h2>\r\n            <View activePanel=\"main\">\r\n                <Panel id=\"main\">\r\n                    <PanelHeader>VKUI</PanelHeader>\r\n                    <Group title=\"Items\">\r\n                        <List>\r\n                            <Cell>Hello</Cell>\r\n                            <Cell>World</Cell>\r\n                        </List>\r\n                    </Group>\r\n                </Panel>\r\n            </View>\r\n        </Div>\r\n        <img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\r\n    </Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport UserInfo from './ProfileUser/UserInfo';\nimport Persik from './Persik';\nimport NoPersik from './Nopersik';\n\nconst ProfileUserPage = (dataUsers) => {\n\tconst [activePanel, setActivePanel] = useState('homeUsers');\n\tconst [fetchedUser, setUser] = useState(null);\n\t//const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\n\tuseEffect(() => {\n\t\t// connect.subscribe(({ detail: { type, data }}) => {\n\t\t// \tif (type === 'VKWebAppUpdateConfig') {\n\t\t// \t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t// \t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t// \t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t// \t}\n\t\t// });\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\t//setPopout(null);\n\t\t\t//console.log(connect);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\n\treturn (\n\t\t<View activePanel={activePanel}>\n\t\t\t<UserInfo id='homeUsers' fetchedUser={fetchedUser} go={go} dataUsers={dataUsers} setActivePanels={setActivePanel.bind(this)} setStatusNotification={dataUsers.setStatusNotification.bind(this)}/>\n\t\t</View>\n\t);\n}\n\nexport default ProfileUserPage;\n\n","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\n// import Icon24Back from '@vkontakte/icons/dist/24/back';\r\n// import ModalProduct from '../ModalProduct.js';\r\nimport OneProduct from \"./OneProduct\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass ProductList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activePanel: 'panel1',\r\n            nameCategory: 'none',\r\n            productsLists: null,\r\n            products:[{\"1\":{\"title\":\"ЕКАРНЫЙ БАБАЙ\"}}]\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        function ReverceCatalog(Pr){\r\n            var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n                // console.log(last, index);\r\n                return (arr = arr.concat(last))\r\n            }, []);\r\n            return res;\r\n        }\r\n\r\n\r\n        function compare(a, b) {\r\n            if (a.price < b.price) {\r\n                return -1;\r\n            }\r\n            if (a.price > b.price) {\r\n                return 1;\r\n            }\r\n            // a должно быть равным b\r\n            return 0;\r\n        }\r\n\r\n        function comparePrice(Pr){\r\n            //console.log(Pr);\r\n            return Object.keys(Pr).sort(compare)\r\n        }\r\n\r\n\r\n        function ArrayProducts(Pr,ClickProductF,setProductModal,setCart, getButtonInCartProduct,ReverceStatus = 0) {\r\n            var CatalogLists = [];\r\n            if(ReverceStatus === 0){\r\n                CatalogLists = ReverceCatalog(Pr);\r\n            }\r\n            if(ReverceStatus === 1){\r\n                CatalogLists = comparePrice(Pr);\r\n            }\r\n\r\n            if(ReverceStatus === 2){\r\n                CatalogLists = Object.keys(Pr);\r\n            }\r\n\r\n            const ArrayPr = CatalogLists.map((oneProduct, keyId) =>\r\n                <OneProduct key={'Products_'+keyId} product={Pr[oneProduct]} ClickProduct={ClickProductF.bind(this)} setCart={setCart.bind(this)} setProductModal={setProductModal.bind(this)} getButtonInCartProduct={getButtonInCartProduct.bind(this)}/>\r\n            );\r\n            return ArrayPr;\r\n        }\r\n\r\n\r\n        function ShowProductCategory(nameCategorys){\r\n            //console.log('ShowProductCategory ',nameCategorys);\r\n            if(nameCategorys.nameCategorys === 'sets'){\r\n                // console.log('d-d-d-d-',nameCategorys.productsLists[nameCategorys.idCategory]);\r\n                return (<GetSets\r\n                    key={nameCategorys.key}\r\n                    names={nameCategorys.nameCategorys}\r\n                    ProductArray={nameCategorys.productsLists}\r\n                    ClickProduct={nameCategorys.ClickProduct.bind(this)}\r\n                    setCart={nameCategorys.setCart.bind(this)}\r\n                    setProductModal={nameCategorys.setProductModal.bind(this)}\r\n                    getButtonInCartProduct={nameCategorys.getButtonInCartProduct.bind(this)}\r\n                />);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'sushi'){\r\n                return (<GetSushi names={nameCategorys.nameCategorys}/>);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'roli'){\r\n                return (<GetRoli names={nameCategorys.nameCategorys}/>);\r\n            }else{\r\n                return (<GetNoneCat names={nameCategorys.nameCategorys}/>);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        function GetSets(ArrayPr) {\r\n           //console.log('ArrayPr ',ArrayPr);\r\n            return (\r\n                <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                    {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this))}\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetSushi(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с креветкой</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши краб</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши копченый лосот</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetRoli(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с тунцом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл Филадельфия</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://sushi-time31.ru/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Филадельфия с крабом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetNoneCat(names){\r\n            return (\r\n                <Div id={names} className=\"blockCategoryFlex\">\r\n                <h1>К сожаление категория пуста!</h1>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        // function GetModalProduct(product){\r\n        //     return(\r\n        //\r\n        //     )\r\n        // }\r\n\r\n        return (\r\n            <ShowProductCategory\r\n                productsLists={this.props.productsLists}\r\n                nameCategorys={this.props.nameCategory}\r\n                idCategory={this.props.idCategorys}\r\n                ClickProduct={this.props.onClickProduct.bind(this,'Panels_Product')}\r\n                setCart={this.props.setCart.bind(this)}\r\n                setProductModal={this.props.setProductModal.bind(this)}\r\n                getButtonInCartProduct={this.props.getButtonInCartProduct.bind(this)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductList;","import React from 'react';\r\nimport {Div, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport ProductList from \"./ProductList\";\r\nimport axios from \"axios\";\r\n//import ProductsInfo from \"../../../../SushiHappyTime/src/ProductsInfo\";\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nclass CategoryList extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            loadingPage: true,\r\n            activePanel: 'brand',\r\n            products: [],\r\n            panelCategory: '',\r\n            ActiveCategory: 0,\r\n            productModal:[{\"title\":\"Название товара\",\"description\":\"Описание товара\",\"typeproduct\":\"0\",\"price\":\"1000\"}]\r\n        };\r\n    }\r\n\r\n    hndlClick = (aP) => {\r\n        console.log('--- ', 'Нажали на кнопку '+aP);\r\n        this.setState({ activePanel: aP })\r\n    };\r\n\r\n    setProductModal = (aP) => {\r\n        console.log('--- ', 'Установили товар в модалку '+aP+' - - - -XTTT');\r\n        this.setState({ productModal: aP })\r\n    };\r\n\r\n    setActiveCategory = (aP) => {\r\n        console.log('--- ', 'Установили категорию '+aP);\r\n        this.setState({ ActiveCategory: aP })\r\n    };\r\n\r\n\r\n    getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getButtonInCartProduct(typeProduct,setCart){\r\n        //console.log(this.props.CartProducts,'---0---');\r\n        if(!!this.props.CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            this.props.CartProducts.map((data,key)=>{\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  this.getCountButton(typeProduct,this.props.CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return this.getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return this.getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true});\r\n        this.setState({products:this.props.ProductsLists,loadingPage: false});\r\n        //console.log('Передали: ',this.props.ProductsLists);\r\n            }\r\n\r\n    classNameDivCategory(){\r\n        //console.log(this.props.queryParams.vk_platform);\r\n        if(this.props.queryParams.vk_platform == \"desktop_web\"){\r\n            return \"GroupBlockCategory DivBlockDesctopCategoys\";\r\n        }else{\r\n            return \"GroupBlockCategory\";\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n\r\n        function ModalProductInfo(OPT){\r\n            if(OPT.Loadings === false){\r\n                console.log(OPT);\r\n                return(\r\n                    <div className=\"blockProduct\" style={{\"margin\":\"0\",\"textAlign\":\"left\",\"background\":\"#ffffff\"}}>\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            noShadow={false}\r\n                            left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                        >\r\n                            {escapeHtmlDecode(OPT.ProductInfo[0].title)}\r\n                        </PanelHeader>\r\n                        <Div id={'product_type_'+OPT.ProductInfo[0].type_info}>\r\n                            <div className=\"imgPrewieProduct\"><img src={OPT.ProductInfo[0].img} alt={OPT.ProductInfo[0].title}/></div>\r\n                            <div className=\"titleProduct\">{escapeHtmlDecode(OPT.ProductInfo[0].title)} <span className=\"redTextP\">{OPT.ProductInfo[0].type_info}</span></div>\r\n                            <div className=\"DescrProduct\">{escapeHtmlDecode(OPT.ProductInfo[0].description)}</div>\r\n                            <div className=\"priceProductBig\"><span className=\"priceProduct\">{OPT.ProductInfo[0].price} ₽</span>\r\n                                {OPT.getButtonInCartProduct(OPT.ProductInfo[0],OPT.setCart)}\r\n                            </div>\r\n                        </Div>\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <div>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                    >Ошибка</PanelHeader>\r\n                        <div style={{\"textAlign\":\"center\",\"padding\":\"5% 0\"}}>Ошибка, вернитесь назад</div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        function GetCategorys(OPT){\r\n            if(OPT.Loadings === false) {\r\n               // console.log(OPT,'-0-0-0-');\r\n               // console.log('Загрузилось', OPT.CategoryList);\r\n                //console.log('Товары ', OPT.CategoryList[OPT.ShowCategory].ProductList);\r\n                return (<div style={{background:\"#FFFFFF\"}}>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>Назад</HeaderButton>}\r\n                    >\r\n                        {OPT.CategoryList[OPT.ShowCategory].Title}\r\n                    </PanelHeader>\r\n                    <ProductList\r\n                        onClickProduct={OPT.ClickProduct.bind(this)}\r\n                        productsLists={OPT.CategoryList[OPT.ShowCategory].ProductList} key={OPT.CategoryList[OPT.ShowCategory].id_Category}\r\n                        idCategorys={OPT.ShowCategory}\r\n                        nameCategory=\"sets\"\r\n                        setCart={OPT.setCart.bind(this)}\r\n                        getButtonInCartProduct={OPT.getButtonInCartProduct.bind(this)}\r\n                        setProductModal={OPT.setProductModal.bind(this)}\r\n                    />\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <PanelHeader>Ошибка</PanelHeader>\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        function GetBrandPanels(OPT,Loadings){\r\n           // console.log(OPT,' - - - категории грузим',OPT.Loadings);\r\n\r\n\r\n            if(CategoryList.length === 0){\r\n                return '';\r\n            }else {\r\n                if(OPT.Loadings === false) {\r\n                    //ProductObject = Object.keys(OPT.CategoryList);\r\n                    //console.log('Преобразовали',ProductObject);\r\n                    // const ArrayBrands = Object.keys(OPT.CategoryList).map((CategoryProdcuts, key) =>\r\n                    const ArrayBrands = Object.keys(OPT.CategoryList).map((idCategorys, key) =>\r\n\r\n                        <Div\r\n                            style={{\"background\":\"linear-gradient( rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4) ), url(//sushi-time31.ru/images/API_IMG/\"+OPT.CategoryList[idCategorys].imgCategory+\")\",\"backgroundSize\":\"100%\"}}\r\n                            className=\"DivCategoryBlock\"\r\n                            key={key+'_'+idCategorys}\r\n                            onClick={\r\n                                () => {\r\n                                    OPT.ActiveCategory(idCategorys);\r\n                                    OPT.ClickCategory('Panels_38')\r\n                                }\r\n                            }\r\n                        >\r\n                            {OPT.CategoryList[idCategorys].Title}\r\n                        </Div>\r\n                    );\r\n                    return ArrayBrands;\r\n                }\r\n                else {\r\n                    return 'Loading ...';\r\n                }\r\n                // return '';\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        const osname = platform();\r\n\r\n        return (\r\n            <View activePanel={this.state.activePanel}>\r\n                <Panel id=\"brand\">\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                    >\r\n                        Категории\r\n                    </PanelHeader>\r\n                    <Group>\r\n                        <Div className=\"logoBlock\">\r\n                            <img src=\"//sushi-time31.ru/images/API_IMG/logo_susshi_time.png\"/>\r\n                            {this.props.queryParams.vk_platform == \"desktop_web\"\r\n                                ?\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a>+7 (4722) 777-498</a>\r\n                                </Div>\r\n                                :\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a href=\"tel:+74722777498\">Позвонить</a>\r\n                                </Div>\r\n                            }\r\n                        </Div>\r\n                        <div id=\"SliderHeader\">\r\n                            {this.props.sliderHeader()}\r\n                        </div>\r\n                    </Group>\r\n                        <Group\r\n                            //title=\"Выбери категорию\"\r\n                            className={this.classNameDivCategory()} >\r\n                        <GetBrandPanels key=\"BrandPanels\" CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)} ActiveCategory={this.setActiveCategory.bind(this)}/>\r\n                    </Group>\r\n                </Panel>\r\n                {/*{this.state.loadingPage ? <Panel id=\"Panels_38\" />  : <Panel id=\"Panels_38\" ><PanelHeader >Суши</PanelHeader></Panel> && <GetCategory CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)}/>}*/}\r\n                <Panel id=\"Panels_38\">\r\n                    <GetCategorys\r\n                        CategoryList={this.state.products}\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickCategory={this.hndlClick.bind(this)}\r\n                        ClickProduct={this.hndlClick.bind(this,'Panels_Product')}\r\n                        setProductModal={this.setProductModal.bind(this)}\r\n                        ShowCategory={this.state.ActiveCategory}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                    />\r\n                </Panel>\r\n                <Panel id=\"Panels_Product\">\r\n\r\n                    <ModalProductInfo\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickBack={this.hndlClick.bind(this)}\r\n                        ProductInfo={this.state.productModal}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                    />\r\n                </Panel>\r\n                {/*<Panel id=\"Panels_38\" />*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}*/}\r\n                {/*    >*/}\r\n                {/*        Cуши*/}\r\n                {/*    </PanelHeader>*/}\r\n\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sushi\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"light2\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Роллы*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"roli\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Сеты*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sets\" idCategorys=\"0\"/>*/}\r\n                {/*</Panel>*/}\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CategoryList;","import React, {useEffect} from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n//import ModalProduct from './panels/ModalProduct';\r\nimport CategoryList from './CategoryList';\r\n//import App from \"./Profile\";\r\n\r\nconst CatalogProduct = (OPT) => {\r\n    // const [activePanel, setActivePanel] = useState('home');\r\n    // const [fetchedUser, setUser] = useState(null);\r\n    // const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\r\n\r\n    useEffect(() => {\r\n        // connect.subscribe(({ detail: { type, data }}) => {\r\n        //     if (type === 'VKWebAppUpdateConfig') {\r\n        //         const schemeAttribute = document.createAttribute('scheme');\r\n        //         schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n        //         document.body.attributes.setNamedItem(schemeAttribute);\r\n        //     }\r\n        // });\r\n        async function fetchData() {\r\n            // const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            // setUser(user);\r\n            // setPopout(null);\r\n           // console.log(OPT.ProductsLists,'--- ВОТ');\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n            <CategoryList setCart={OPT.setCart.bind(this)} CartProducts={OPT.CartProducts} ProductsLists={OPT.ProductsLists} sliderHeader={OPT.sliderHeader.bind(this)} queryParams={OPT.queryParams}/>\r\n    );\r\n\r\n};\r\n\r\nexport default CatalogProduct;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport NewOrderServer from './NewOrderServer';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Info from '@vkontakte/icons/dist/24/info';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Flash from '@vkontakte/icons/dist/24/flash';\r\n\r\nclass PaymentsPage extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            SalePoints:this.props.SalePoints,\r\n            value2:0,\r\n            statusNewOrder:'11'\r\n        }\r\n\r\n        this.props.getReloadInfODeliveryPay();\r\n    }\r\n\r\n    setPointsDefaultsSale(SalePoints){\r\n        SalePoints = SalePoints*1;\r\n        this.setState({SalePoints});\r\n        this.props.setStates({SalePoints:SalePoints});\r\n    }\r\n\r\n    options () {\r\n        let options = [];\r\n        for (let i = 0; i <= this.props.userSystemInfo.dataUser.point*1; i += 1) {\r\n            options.push(<option value={`${i}`} key={`${i}`}>{i}</option>)\r\n        }\r\n        return options;\r\n    }\r\n\r\n    getCountsTimeBonus(){\r\n        var points = this.props.userSystemInfo.dataUser.point*1;\r\n        if(points >0){\r\n            return(\r\n                <div>\r\n                        <Div>Доступно таймов для списания: <b>{points}</b></Div>\r\n                    <FormLayout>\r\n                        <Slider\r\n                            step={1}\r\n                            min={0}\r\n                            max={points}\r\n                            value={Number(this.state.SalePoints)}\r\n                            onChange={(SalePoints)=> this.setPointsDefaultsSale(SalePoints)}\r\n                            top=\"Списать в оплату\"\r\n                        />\r\n                        <Select onChange={e => this.setPointsDefaultsSale(e.target.value)} value={String(this.state.SalePoints)}>\r\n                            {this.options()}\r\n                        </Select>\r\n\r\n                    <div style={{display: 'none',justifyContent:'center'}}>\r\n                        <Button size=\"l\" stretched style={{marginRight: 10}}>Выбранное кол-во</Button>\r\n                        <Button size=\"l\" stretched style={{marginLeft: 10}}>Списать все</Button>\r\n                    </div>\r\n                    </FormLayout>\r\n                </div>);\r\n        }else{\r\n            return(<Cell className=\"IconColorOrange\" before={<Icon24Coins />}> К сожалению у Вас <b>0</b> таймов</Cell>);\r\n        }\r\n    }\r\n\r\n    getSumCartItogo(){\r\n        var sum = this.props.sumCart-this.props.SalePoints;\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog) {\r\n            sum = sum + (this.props.DataDeliveryInfo.priceDelivery * 1);\r\n        }\r\n        if(sum<0){sum = 0;}\r\n        return (sum);\r\n    }\r\n\r\n\r\n    checkMinSummaCart(){\r\n        if(this.props.DataDeliveryInfo.errorOrderFinal){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={false}\r\n\r\n                >\r\n                    <h2>Сумма минимального заказа {this.props.DataDeliveryInfo.minSumOrder} рублей</h2>\r\n                    <p>Мы не можем принять Ваш заказ, так как сумма Вашей покупки, меньше необходимой</p>\r\n                </Placeholder>\r\n            );\r\n        }else{\r\n            return(\r\n                this.checkTypeDiliveryInfo()\r\n            );\r\n        }\r\n    }\r\n\r\n    PriceInfoVisual(){\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog){\r\n            return(\r\n                <Cell before={<Icon24Info />}> Стоимость доставки: <b>{this.props.DataDeliveryInfo.priceDelivery} ₽</b></Cell>\r\n            );\r\n        }else{\r\n            return('');\r\n        }\r\n    }\r\n\r\n    getAddressDelivery(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAddressGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAddressGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAddressGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getAddressAffiliate(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAffiliateGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getDataOrder(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === true) {\r\n            var checkPreorderActive = false;\r\n        }else{\r\n            var checkPreorderActive = true;\r\n        }\r\n        var DataOrder = {};\r\n\r\n        var DataAddressDelivery = this.getAddressDelivery(this.props.DataDeliveryInfo.addressDefault);\r\n        var DataAddressAffiliate = this.getAddressAffiliate(this.props.DataDeliveryInfo.AffiliateDefault);\r\n\r\n        DataOrder.idUserVK = this.props.userInfo.id;\r\n        DataOrder.typeDelivery = this.props.DataDeliveryInfo.checkedTypeDilivery;\r\n        DataOrder.AddressDelivery = {\"Info\":DataAddressDelivery,\"idAddress\":DataAddressDelivery.id};\r\n        DataOrder.idAffiliatePickup = {\"Info\":DataAddressAffiliate,\"idAffiliate\":DataAddressAffiliate.id};\r\n        DataOrder.PointsSale = this.props.SalePoints;\r\n        DataOrder.DeliverySum = this.props.DataDeliveryInfo.DeliveryPriceItog ? this.props.DataDeliveryInfo.priceDelivery : 0;\r\n        DataOrder.Comments = this.props.DataDeliveryInfo.comments;\r\n        DataOrder.DopInfo = this.props.DataDeliveryInfo.commentary;\r\n        DataOrder.typePay = this.props.DataDeliveryInfo.typePay;\r\n        DataOrder.countPerson = this.props.DataDeliveryInfo.countPerson;\r\n        DataOrder.cart = this.props.DataDeliveryInfo.cart;\r\n        DataOrder.Preorder = {\"active\":checkPreorderActive,\"datePreorder\":this.props.DataDeliveryInfo.SelectDatePreorder+'T'+this.props.DataDeliveryInfo.SelectTimePreorder};\r\n        return DataOrder;\r\n    }\r\n\r\n    getMountsDate(a,b = null){\r\n        if(b){\r\n            a = a+1;\r\n            if(a<10){return '0'+a;}\r\n        }else {\r\n            switch (a) {\r\n                case 0:\r\n                    return 'Января';\r\n                    break;\r\n                case 1 :\r\n                    return 'Февраля';\r\n                    break;\r\n                case 2 :\r\n                    return 'Марта';\r\n                    break;\r\n                case 3 :\r\n                    return 'Апреля';\r\n                    break;\r\n                case 4 :\r\n                    return 'Мая';\r\n                    break;\r\n                case 5 :\r\n                    return 'Июня';\r\n                    break;\r\n                case 6 :\r\n                    return 'Июля';\r\n                    break;\r\n                case 7 :\r\n                    return 'Августа';\r\n                    break;\r\n                case 8 :\r\n                    return 'Сенятбря';\r\n                    break;\r\n                case 9 :\r\n                    return 'Октября';\r\n                    break;\r\n                case 10 :\r\n                    return 'Ноября';\r\n                    break;\r\n                case 11 :\r\n                    return 'Декабря';\r\n                    break;\r\n                default:\r\n                    return a;\r\n            }\r\n        }\r\n    }\r\n\r\n    returnPlaceholderPreorder(a){\r\n        switch(a){\r\n            case true:\r\n                var dateObj = new Date(this.props.DataDeliveryInfo.SelectDatePreorder);\r\n                //var formated_date = dateObj.format(\"dd.mm.YYYY\");\r\n\r\n\r\n                return(<div>\r\n                        <Group title=\"Оплата бонусными баллами\">\r\n                            {this.getCountsTimeBonus()}\r\n\r\n                        </Group>\r\n                        <Group title=\"Итоговые данные по заказу\">\r\n                            <List>\r\n                                <Cell\r\n                                    before={<Icon24Place />}\r\n                                    description={<span>\r\n                                      <i>{this.props.DataDeliveryInfo.addressOrderInfoUser}</i>\r\n                                  </span>}\r\n                                    size=\"l\">\r\n                                    {this.props.checkedTypeDilivery === 0 ? \" Доставка курьером\" : \" Заберу заказ сам\"}\r\n                                </Cell>\r\n                                <Cell\r\n                                before={<Icon24Flash />}\r\n                                description={this.props.DataDeliveryInfo.typeOrderDate ? <i> В ближайшее время</i> :\r\n                                    <i> {dateObj.getDate()+' '+this.getMountsDate(dateObj.getMonth(),false)+' '+dateObj.getUTCFullYear()+'г. к '+this.props.DataDeliveryInfo.SelectTimePreorder}</i>\r\n                                }\r\n                                >\r\n                                    Время получения заказа\r\n                                </Cell>\r\n                                <Cell before={<Icon24Coins />}> Списано таймов: <b>{this.props.SalePoints}</b></Cell>\r\n                                {this.PriceInfoVisual()}\r\n                                <Cell before={<Icon24MoneyCircle />}> К оплате: <b className=\"OrangeColor\">{this.getSumCartItogo()} ₽</b></Cell>\r\n                            </List>\r\n                        </Group>\r\n                        <Group title=\"Способ оплаты\">\r\n                            <List>\r\n                                <Cell>\r\n                                    <Radio name=\"typePayments\" value=\"1\"\r\n                                           description=\"Оплата наличными при получении\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 1 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:1})}}>Наличные</Radio>\r\n                                    <Radio name=\"typePayments\" value='2' description=\"Оплата банковской картой, по терминалу\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 2 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:2})}}>Терминал</Radio>\r\n\r\n                                </Cell>\r\n                                <Cell>\r\n                                    <Div>\r\n                                        <NewOrderServer setStates={this.setState.bind(this)}\r\n                                                        userInfo={this.props.userInfo}\r\n                                                        DataOrderInfo={this.getDataOrder()}\r\n                                                        getPageOkOrderSet={this.props.setStates.bind(this)}\r\n                                                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                                        />\r\n                                    </Div>\r\n                                </Cell>\r\n                            </List>\r\n                        </Group>\r\n                    </div>\r\n                );\r\n                break;\r\n            default:\r\n                return(\r\n                    <Placeholder\r\n                        icon={<Icon56ErrorOutline />}\r\n                        action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Указать вариант получения</Button>}\r\n\r\n                    >\r\n                        <h2>Не указана дата и время получения</h2>\r\n                        <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите дату получения заказа.</p>\r\n                    </Placeholder>\r\n                );\r\n        }\r\n    }\r\n\r\n    checkPreorderType(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === false) {\r\n            if(this.props.DataDeliveryInfo.SelectDatePreorder === null){\r\n                return this.returnPlaceholderPreorder(false);\r\n            }else{\r\n                if(this.props.DataDeliveryInfo.SelectTimePreorder === null){\r\n                    return this.returnPlaceholderPreorder(false);\r\n                }else{\r\n                    return this.returnPlaceholderPreorder(true);\r\n                }\r\n            }\r\n\r\n        }else{\r\n            return this.returnPlaceholderPreorder(true);\r\n        }\r\n    }\r\n\r\n\r\n    checkTypeDiliveryInfo(){\r\n        if(this.props.checkedTypeDilivery === 0 && this.props.addressDefault === null){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Выбрать адрес</Button>}\r\n\r\n                >\r\n                <h2>Вы не выбрали адрес доставки</h2>\r\n                    <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите адрес доставки, либо адрес точки самовывоза, откуда Вам будет удобно забрать заказ.</p>\r\n                </Placeholder>\r\n\r\n            );\r\n        }else{\r\n            return (this.checkPreorderType());\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.checkMinSummaCart()\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentsPage;","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\nimport Dilivery from \"./Dilivery\";\r\n\r\nimport './styleCart.css';\r\n\r\nimport ButtonCart from \"../catalog/ButtonInCart\";\r\nimport PaymentsPage from \"./PaymentsPage\";\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass GetCartHome extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n\r\n    ReloadDeliveryPay(){\r\n\r\n    }\r\n\r\n    GetPresetsVisual(){\r\n        if(Object.keys(this.props.PresetsDopProductList.list).length >0){\r\n            const ListPresets = this.props.PresetsDopProductList.list.map((datas,number)=>{\r\n                return(\r\n                    <div key={number+'PresetsTitle'}>{datas.title} -  {datas.count} {datas.typeCount}</div>\r\n                );\r\n            });\r\n            return(\r\n                <Group\r\n                title=\"В заказ так же входит\"\r\n                    style={{textAlign:\"center\",overflow: \"hidden\"}}>\r\n                    <img src={this.props.PresetsDopProductList.img}\r\n                         style={{\r\n                             float: \"left\",\r\n                             width: \"35%\",\r\n                             marginLeft:\"3%\",\r\n                             marginRight:\"3%\"\r\n                         }}\r\n                    />\r\n                    <Div style={{textAlign:\"left\",\"lineHeight\":\"2.1em\",paddingRight:\"0\"}}>{ListPresets}</Div>\r\n                </Group>\r\n            );\r\n        }else{\r\n            //console.log('oo',Object.keys(this.props.PresetsDopProductList.list).length);\r\n            return('');\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n       function go(e){\r\n         setActivePanel(e);\r\n         // setActivePanel(e.currentTarget.dataset.to);\r\n       };\r\n\r\n       function setActivePanel(e){\r\n           // useState(e);\r\n          // this.setState({activePanel: e});\r\n           this.ActivePanels(e);\r\n       }\r\n\r\n       function setPopout(e){\r\n           if(e === ''){\r\n               // useState(<ScreenSpinner size='large' />);\r\n               this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n           }else{\r\n               // useState(e);\r\n               this.setState({popout: e});\r\n           }\r\n       }\r\n\r\n       function  getCartVisual(id, Products,setCart){\r\n           //setPopout(null);\r\n            if(Products.length<=0){\r\n                return(<div style={{\"textAlign\":\"center\",\"padding\":\"5px 10px\",\"marginTop\":\"30px\"}}><h2>Корзина пуста</h2><p>К сожалению, для того чтобы что-то заказать, Вам нужно положить этот товар в корзину!</p></div>);\r\n            }else {\r\n\r\n                var results = Products.map((cartProduct,idProducts) =>\r\n                    <div className=\"ProductInCartBlock\" key={\"blockProducts_\"+idProducts}>\r\n                        <div\r\n\r\n                        className=\"blockProduct\"\r\n                        style={{\r\n                            \"width\": \" 100%\",\r\n                            \"margin\": \"5% 0\",\r\n                            \"padding\": \"0%\",\r\n                            \"float\":\"none\",\r\n                            marginBottom:10\r\n                        }}\r\n                        >\r\n                            <div className=\"imgPrewieProduct\">\r\n                                <img src={cartProduct.img}/>\r\n                            </div>\r\n                            <div className=\"titleProduct\">\r\n                                {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                                {cartProduct.title} <span className=\"redTextP\">{cartProduct.type_info}</span>\r\n                            </div>\r\n                            <div className=\"DescrProduct2\">\r\n                                {cartProduct.description}\r\n                            </div>\r\n                            <div style={{clear:\"both\"}}>\r\n                                {/*Товаров: {cartProduct.count} <br/>*/}\r\n                                <span className=\"priceProduct\">На сумму: <span className=\"WeightFontBold\">{cartProduct.count * cartProduct.price} ₽</span></span>\r\n                                <div className=\"priceProductBig\"style={{width:\"100%\",bottom:-8}}><ButtonCart CartProducts={Products} typeProduct2={cartProduct}\r\n                                                                             setCarts={setCart.bind(this)}/></div>\r\n                            </div>\r\n                        </div>\r\n                        <Separator style={{ margin: '20px 0' }} />\r\n                    </div>\r\n                );\r\n\r\n                return(<div className=\"CartBlockProducts\">{results}</div>);\r\n\r\n            }\r\n        }\r\n\r\n        function getDiliveryData(){\r\n            return (<div><h2>Доставка</h2></div>);\r\n        }\r\n\r\n\r\n\r\n        function getButtonNavigation(typeNav, action){\r\n\r\n           switch(typeNav){\r\n               case\"1\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button className=\"activeButons\" onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"2\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"3\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>; break;\r\n           }\r\n\r\n           return(\r\n               <HorizontalScroll>\r\n                   {ButtonBlock}\r\n               </HorizontalScroll>\r\n           );\r\n        }\r\n\r\n        function getOneStepCartNone(){\r\n           return(\r\n               <Panel id=\"home\">\r\n\r\n                   <Placeholder\r\n                       icon={<Icon56MarketOutline />}\r\n                       action={false}\r\n\r\n                   >\r\n                       <h2>Корзина пуста</h2>\r\n                       <p>Для совершения заказа, положите в нее хотя-бы 1 товар</p>\r\n                   </Placeholder>\r\n\r\n               </Panel>\r\n           );\r\n        }\r\n\r\n        function getOneStepCart(ProductList,setCart,sumCart,setState,GetPresetsVisual){\r\n           return (\r\n               <Panel id=\"home\" >\r\n               <PanelHeader theme=\"light\"> {getButtonNavigation('1', setState.bind(this))}</PanelHeader>\r\n               <Group title=\"Товары\">\r\n                <Div className=\"CartBlockProductsOneStep\">\r\n                {getCartVisual(\"homes\", ProductList, setCart.bind())}\r\n            <div style={{clear:\"both\"}}></div>\r\n            </Div>\r\n        </Group>\r\n                   {GetPresetsVisual}\r\n        <Group>\r\n            <Div className=\"SumItogOneSTepCart\">Сумма итого: <span className=\"OrangeColor\">{sumCart} ₽</span></Div>\r\n        </Group>\r\n        <Div><Button size=\"xl\" onClick={()=> {setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button></Div>\r\n               </Panel>\r\n        );\r\n        }\r\n\r\n\r\n\r\n        return(\r\n            <View activePanel={this.state.activePanel} className={osName === IOS ? \"IOSCLASSCSS\" : \"AndroidCLASSCSS\"} popout={this.state.popout} header={this.props.ProductList.length<=0 ? false : true}>\r\n\r\n\r\n                    {this.props.ProductList.length<=0 ? getOneStepCartNone() :\r\n\r\n                        getOneStepCart(this.props.ProductList, this.props.setCart.bind(),this.props.sumCart, this.setState.bind(this),this.GetPresetsVisual())\r\n                    }\r\n\r\n                <Panel id=\"dilivery\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('2', this.setState.bind(this))}</PanelHeader>\r\n                    <Dilivery\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        getUserSystemInfo={this.props.getUserSystemInfo.bind()}\r\n\r\n                        addressDefault={this.props.addressDefault}\r\n                        setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n\r\n                        AffiliateDefault={this.props.AffiliateDefault}\r\n                        setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        setTypeDilivery={this.props.setTypeDilivery.bind(this)}\r\n\r\n                        commentary={this.props.commentary}\r\n                        setComment={this.props.setComment.bind(this)}\r\n\r\n                        countPerson={this.props.countPerson}\r\n\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                        getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                        /*Для вычисления суммы бесплатной доставки*/\r\n                        sumCart={this.props.sumCart}\r\n\r\n                        setPopout={this.setState.bind(this)}\r\n                        ProductList={this.props.ProductList}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n                        hideModals={this.props.hideModals.bind(this)}\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" stretched level=\"secondary\"  style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"home\"});}}>В корзину</Button>\r\n                        <Button size=\"l\" stretched className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"order\"});}}>К оплате</Button>\r\n                    </Div>\r\n                </Panel>\r\n                <Panel id=\"order\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('3', this.setState.bind(this))}</PanelHeader>\r\n                    <PaymentsPage\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        SalePoints={this.props.SalePoints}\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        sumCart={this.props.sumCart}\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        addressDefault={this.props.addressDefault}\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                        getReloadInfODeliveryPay={this.props.checkedTypeDilivery ? this.props.getDeliveryDataPriceItogAffiliate.bind(this) : this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n\r\n                        action={this.setState.bind(this)}\r\n\r\n                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" level=\"secondary\" stretched style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button>\r\n\r\n                    </Div>\r\n                </Panel>\r\n            </View>\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default GetCartHome;","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './StartPageVKapp';\n// import App from './App2';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// globals/index.js\r\n\r\nglobal.ApiKey = '03478f08258a5b0e7f4a1e83dae33da9';\r\n\r\nglobal.CityListBind = [];","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert, Div,Input,FormLayout, Button, Select } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass FormNewAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                city: '',\r\n                street: '',\r\n                home: '',\r\n                entrance: '',\r\n                level: '',\r\n                flat: '',\r\n                comment:''\r\n        }\r\n\r\n        this.addressItems = [\r\n            // { label: 'Город', name: 'city', statusChech:'yes', minValue:5, valPls:'' },\r\n            { label: 'Название улицы', name: 'street', statusChech:'yes', minValue:4, valPls:'' },\r\n            { label: '№ дома', name: 'home', statusChech:'yes', minValue:0, valPls:'' },\r\n            { label: '№ квартиры/офиса', name: 'flat', statusChech:'', minValue:0, valPls:'' },\r\n            { label: '№ подъезда', name: 'entrance', statusChech:'', minValue:0, valPls:'' },\r\n            { label: 'Этаж', name: 'level', statusChech:'', minValue:0, valPls:''},\r\n            { label: 'Примечание', name: 'comment', statusChech:'', minValue:0, valPls:'Пример: Квартира сестры' }\r\n        ];\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.openDefault = this.openDefault.bind(this);\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n\r\n        if(this.props.AddressEdit){\r\n            this.state = {\r\n                    id:this.props.AddressEdit.id,\r\n                    city: this.props.AddressEdit.city,\r\n                    street: this.props.AddressEdit.street,\r\n                    home: this.props.AddressEdit.home,\r\n                    entrance: this.props.AddressEdit.podezd,\r\n                    level: this.props.AddressEdit.etaj,\r\n                    flat: this.props.AddressEdit.kvartira,\r\n                    comment: this.props.AddressEdit.comment\r\n                }\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n       // console.log(this.state);\r\n    }\r\n\r\n\r\n    openDefault () {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Исправить',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Не все поля адреса заполнены</h2>\r\n                    <p>Внимательно заполните все поля, для сохранения адреса доставки!</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n\r\n    saveNewAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://sushi-time31.ru/api/setAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n    saveEditAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://sushi-time31.ru/api/editAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            //this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n    getCitySelect(idCity,def = null){\r\n        if(idCity in global.CityListBind) {\r\n            const ListCityOrigin = global.CityListBind[idCity].listCity;\r\n            const ListCitys = Object.keys(global.CityListBind[idCity].listCity);\r\n            const ListOption = ListCitys.map((data, key) => {\r\n                return (<option\r\n                    key={key}\r\n                    value={ListCityOrigin[data].title}\r\n                >\r\n                    {\r\n                        ListCityOrigin[data].title\r\n                    }\r\n                </option>);\r\n            });\r\n            return (\r\n                ListOption\r\n            );\r\n        }else{\r\n            return (\"\");\r\n        }\r\n    }\r\n\r\n    getNulledForm(){\r\n        return(\r\n            <FormLayout>\r\n                <Select placeholder=\"Город / Населенный пункт\" onChange={this.onChange} name=\"city\" key={\"input_city\"} top=\"Город\">\r\n                    {this.getCitySelect(1)}\r\n                </Select>\r\n                {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                    <Input\r\n                        type=\"text\"\r\n                        name={name}\r\n                        key={\"input_\"+name}\r\n                        top={label}\r\n                        onChange={this.onChange}\r\n                        status={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >=minValue  ? 'valid' : 'error'\r\n                                    : 'error'\r\n                                : \"\"\r\n                        }\r\n                        bottom={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >=minValue  ? '' : 'Введенные значение не корректно '+this.state[name].length\r\n                                    : 'Обязательно к заполнению'\r\n                                : \"\"\r\n                        }\r\n                        placeholder={valPls}\r\n                    />\r\n                ))}\r\n                <Button size=\"l\" style={{background:\"#ff7300\"}} onClick={()=>{this.saveNewAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Подтвердить адрес</Button>\r\n            </FormLayout>\r\n        );\r\n    }\r\n\r\n\r\n    getEditForm(){\r\n        return(\r\n            <FormLayout>\r\n                <Select placeholder=\"Город / Населенный пункт\" onChange={this.onChange} name=\"city\" key={\"input_city\"} top=\"Город\" defaultValue={this.state.city}>\r\n                    {this.getCitySelect(1)}\r\n                </Select>\r\n                {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                    <Input\r\n                        type=\"text\"\r\n                        name={name}\r\n                        key={\"input_\"+name}\r\n                        top={label}\r\n                        onChange={this.onChange}\r\n                        status={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >minValue  ? 'valid' : 'error'\r\n                                    : 'error'\r\n                                : \"\"\r\n                        }\r\n                        value={this.state[name]}\r\n                        bottom={\r\n                            statusChech ?\r\n                                this.state[name] ?\r\n                                    this.state[name].length >minValue  ? '' : 'Введенные значение не корректно'\r\n                                    : 'Обязательно к заполнению'\r\n                                : \"\"\r\n                        }\r\n                        placeholder={valPls}\r\n                    />\r\n                ))}\r\n                <Button size=\"l\" style={{background:\"#ff7300\"}} onClick={()=>{this.saveEditAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Завершить редактирование</Button>\r\n            </FormLayout>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Div>\r\n                {this.props.AddressEdit ? this.getEditForm() : this.getNulledForm()}\r\n            </Div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default FormNewAddress;","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\n\r\nexport default function ButtonInCart({CartProducts,typeProduct2,setCarts}){\r\n\r\n    function getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getButtonInCartProduct(typeProduct,setCart){\r\n       // console.log(CartProducts,'---0---',typeProduct,setCart);\r\n        if(!!CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            CartProducts.map((data,key)=>{\r\n                //console.log(data.id_Product,typeProduct.id_Product, data.type_product,typeProduct.type_product,'++++++++++++++++++');\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  getCountButton(typeProduct,CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return(getButtonInCartProduct(typeProduct2,setCarts));\r\n\r\n}\r\n","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nexport default function OneProduct({product,idCategory, ClickProduct, setCart, setProductModal, getButtonInCartProduct}) {\r\n// console.log('ут должна функция должна быть',ClickProduct);\r\n    // const ArrayProducts = product.map(oneProduct =>\r\n    //     //<OneProduct key={oneProduct.id} product={oneProduct} />\r\n    //     <Div className=\"blockProduct\" key={\"id_product_\"+oneProduct.id_Product}>\r\n    //         <Div className=\"imgPrewieProduct\"><img alt={oneProduct.title} src={oneProduct.img}/></Div><Div className=\"titleProduct\">{oneProduct.title}</Div><Div className=\"DescrProduct\">{oneProduct.description}</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">{oneProduct.price} руб.</span></Div>\r\n    //     </Div>\r\n    // );\r\n\r\n    // console.log(key);\r\n\r\n    function escapeHtml(text) {\r\n        var map = {\r\n            '&': '&amp;',\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '\"': '&quot;',\r\n            \"'\": '&#039;'\r\n        };\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n\r\n    function number_format(number, decimals, dec_point, separator ) {\r\n        number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\r\n        var n = !isFinite(+number) ? 0 : +number,\r\n            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n            sep = (typeof separator === 'undefined') ? ',' : separator ,\r\n            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n            s = '',\r\n            toFixedFix = function(n, prec) {\r\n                var k = Math.pow(10, prec);\r\n                return '' + (Math.round(n * k) / k)\r\n                    .toFixed(prec);\r\n            };\r\n        // Фиксим баг в IE parseFloat(0.55).toFixed(0) = 0;\r\n        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))\r\n            .split('.');\r\n        if (s[0].length > 3) {\r\n            s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n        }\r\n        if ((s[1] || '')\r\n            .length < prec) {\r\n            s[1] = s[1] || '';\r\n            s[1] += new Array(prec - s[1].length + 1)\r\n                .join('0');\r\n        }\r\n        return s.join(dec);\r\n    }\r\n\r\n    function getWeightProduct(Product_Weight,Product_WeightType){\r\n        if(Product_WeightType != 'л'){\r\n            return(\r\n                number_format(Product_Weight,'0','.', ' ')+' '+Product_WeightType\r\n            );\r\n        }else{\r\n            return(\r\n                Product_Weight+' '+Product_WeightType\r\n            );\r\n        }\r\n    }\r\n\r\n    function getModyficateBlock(ArrayMod){\r\n        var ListMod = Object.keys(ArrayMod);\r\n        if(ListMod.length <=0){\r\n            return \"\";\r\n        }else{\r\n            var VisualList = ListMod.map((datas,keys)=>{\r\n                return (<div key={keys} className=\"ModyficateProduct\"><img src={ArrayMod[datas].mod_img} /></div>);\r\n            });\r\n            return(\r\n                <div className=\"ModyficateBlock\">{VisualList}</div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function getProductDiv(productList,idCategory,ClickProduct,setCart,setProductModal ,getButtonInCartProduct){\r\n\r\n         //console.log(ClickProduct,'в корзину функция');\r\n        var ProductCat = productList;\r\n\r\n        const WeightProduct = '';\r\n\r\n\r\n\r\n        const ArrayProducts = ProductCat.map((typeProduct,idTypeProduct) =>\r\n            <Div key={\"blockProducts_\"+typeProduct.id_Product+\"_\"+idTypeProduct} className=\"blockProduct\" id={\"id_product_\"+typeProduct.id_Product+\"_type_\"+typeProduct.type_product}>\r\n                {getModyficateBlock(typeProduct.modyficate)}\r\n                <Div className=\"imgPrewieProduct\">\r\n                    <img\r\n                        alt={typeProduct.title}\r\n                        src={typeProduct.img}\r\n                        onClick={() =>{\r\n                            ClickProduct('Panels_Product');\r\n                            setProductModal([typeProduct]);\r\n                            console.log('Нажали на фотку',ProductCat,idTypeProduct)}\r\n                        }\r\n                    />\r\n                </Div>\r\n                <Div className=\"titleProduct\">\r\n                    {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                    {escapeHtmlDecode(typeProduct.title)}\r\n                    <span className=\"redTextP\">\r\n                        {getWeightProduct(typeProduct.weight,typeProduct.weight_type)}\r\n                    </span>\r\n                </Div>\r\n                <Div className=\"DescrProduct\">\r\n                    {escapeHtmlDecode(typeProduct.description)}\r\n                    <div>\r\n                    </div>\r\n                    {typeProduct.type_info != '' ?\r\n                        <div className=\"WeightBlock\">\r\n                            {typeProduct.type_info}\r\n                        </div>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                </Div>\r\n                <Div className=\"priceProductBig\">\r\n                    <span className=\"priceProduct\">\r\n                        {number_format(typeProduct.price,'0','.',' ')} ₽\r\n                    </span>\r\n                    {getButtonInCartProduct(typeProduct,setCart)}\r\n                </Div>\r\n            </Div>\r\n        );\r\n\r\n\r\n        return ArrayProducts;\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        getProductDiv(product,idCategory,ClickProduct, setCart , setProductModal, getButtonInCartProduct)\r\n    );\r\n}"],"sourceRoot":""}